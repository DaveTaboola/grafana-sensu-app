{"version":3,"file":"module.js","sourceRoot":"src/","sources":["panels/sensu-overview/module.ts"],"names":[],"mappings":"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","sourcesContent":["import _ from \"lodash\";\nimport kbn from \"app/core/utils/kbn\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport defaults from \"./defaults\";\nimport { MetricsPanelCtrl } from \"app/plugins/sdk\";\nimport { SensuOverview } from \"./components/sensu_overview\";\nimport * as Series from \"./types/series\";\n\n\nclass SensuOverviewCtrl extends MetricsPanelCtrl {\n  static templateUrl = \"panels/sensu-overview/partials/template.html\";\n  dataType = \"timeseries\";\n  series: any[];\n  data: Series.SeriesStat[];\n  fontSizes: any[];\n\n  /** @ngInject */\n  constructor($scope, $injector, templateSrv) {\n    super($scope, $injector);\n    this.templateSrv = templateSrv;\n\n    _.defaults(this.panel, defaults.panelDefaults);\n\n    this.events.on(\"data-received\", this.onDataReceived.bind(this));\n    this.events.on(\"data-error\", this.onDataError.bind(this));\n    this.events.on(\"data-snapshot-load\", this.onDataReceived.bind(this));\n    this.events.on(\"init-edit-mode\", this.onInitEditMode.bind(this));\n  }\n\n  onInitEditMode() {\n    this.fontSizes = [\"20%\", \"30%\", \"50%\", \"70%\", \"80%\", \"100%\", \"110%\", \"120%\", \"150%\", \"170%\", \"200%\"];\n    // determine the path to this plugin\n    var partialsPath = \"public/plugins/\" + this.panel.type + \"/partials\";\n    this.addEditorTab(\"Options\", partialsPath + \"/options.html\", 2);\n    //this.unitFormats = kbn.getUnitFormats();\n  }\n\n  onDataReceived(dataList) {\n    if (dataList.length > 0 && dataList[0].type === \"table\") {\n      this.dataType = \"table\";\n      if (dataList[0].rows && !dataList[0].rows.length) {\n        return this.onDataError(\"No data\");\n      }\n      //this.setTableColumnToSensibleDefault(dataList[0]);\n      //this.data = convertTableDataToMultistat(dataList, this.panel);\n    } else {\n      //this.dataType = \"timeseries\";\n      //this.data = convertTSDataToMultistat(dataList, this.panel);\n      // this.setValues();\n      this.data = [];\n    }\n    this.render();\n  }\n\n  onDataError(err) {\n    this.onDataReceived([]);\n  }\n\n  setTableColumnToSensibleDefault(tableData) {\n    const columnNames = {};\n\n    tableData.columns.forEach((column, columnIndex) => {\n      columnNames[columnIndex] = column.text;\n    });\n\n    //this.tableColumnOptions = columnNames;\n    if (\n      _.find(tableData.columns, [\"text\", this.panel.tableColumnValue]) &&\n      _.find(tableData.columns, [\"text\", this.panel.tableColumnLabel])\n    ) {\n      return;\n    }\n\n    if (tableData.columns.length === 1) {\n      this.panel.tableColumnValue = tableData.columns[0].text;\n    } else {\n      const notTimeColumns = _.filter(tableData.columns, col => col.type !== \"time\");\n      this.panel.tableColumnValue = _.last(notTimeColumns).text;\n      this.panel.tableColumnLabel = _.first(notTimeColumns).text;\n    }\n  }\n\n  setValuePrefixAndPostfix(data) {\n    data.forEach(seriesStat => {\n      if (!seriesStat._valueFormatted) {\n        // Backup original value\n        seriesStat._valueFormatted = seriesStat.valueFormatted;\n      }\n      let value = this.panel.prefix ? this.templateSrv.replace(this.panel.prefix, seriesStat.scopedVars) : \"\";\n      value += seriesStat._valueFormatted;\n      value += this.panel.postfix ? this.templateSrv.replace(this.panel.postfix, seriesStat.scopedVars) : \"\";\n      seriesStat.valueFormatted = value;\n    });\n  }\n\n\n  link(scope, elem, attrs, ctrl) {\n    const sensuOverviewElem = elem.find(\".grafana-sensu-app-overview-panel\");\n\n    function render() {\n      if (!ctrl.data) {\n        return;\n      }\n\n      const width = sensuOverviewElem.width();\n      const height = sensuOverviewElem.height();\n      scope.size = { w: width, h: height };\n      ctrl.setValuePrefixAndPostfix(ctrl.data);\n      renderSensuOverviewComponent();\n    }\n\n    function renderSensuOverviewComponent() {\n      const sensuOverviewProps = {\n        stats: ctrl.data,\n        options: ctrl.panel,\n        size: scope.size,\n      };\n      const sensuOverviewReactElem = React.createElement(SensuOverview, sensuOverviewProps);\n      ReactDOM.render(sensuOverviewReactElem, sensuOverviewElem[0]);\n    }\n\n    this.events.on(\"render\", function() {\n      render();\n      ctrl.renderingCompleted();\n    });\n\n    // cleanup when scope is destroyed\n    scope.$on(\"$destroy\", () => {\n      ReactDOM.unmountComponentAtNode(sensuOverviewElem[0]);\n    });\n  }\n}\n\nexport { SensuOverviewCtrl, SensuOverviewCtrl as PanelCtrl };\n"]}