{"version":3,"file":"result_functions.js","sourceRoot":"src/","sources":["datasource/sensu/result_functions.ts"],"names":[],"mappings":"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","sourcesContent":["import { getResponseForTarget } from \"./common\";\n\nfunction getResultURIs(checkNames, clientNames) {\n  var uris = [];\n  var dimensionURI = \"/results\";\n  var aClientName = null;\n  var aCheckName = null;\n  var anAggregateName = null;\n  if (clientNames.length) {\n    for (let i = 0; i < clientNames.length; i++) {\n      aClientName = clientNames[i];\n      dimensionURI = \"/results/\" + aClientName;\n      uris.push(dimensionURI);\n    }\n  }\n  if ((checkNames.length) && (clientNames.length)) {\n    for (let i = 0; i < clientNames.length; i++) {\n      aClientName = clientNames[i];\n      for (let j = 0; j < checkNames.length; j++) {\n        aCheckName = checkNames[i];\n        dimensionURI = \"/results/\" + aClientName + \"/\" + aCheckName;\n        uris.push(dimensionURI);\n      }\n    }\n  }\n  if (uris.length === 0) {\n    uris.push(dimensionURI);\n  }\n  return uris;\n}\n\nfunction convertResultsToTable(aTarget, responses) {\n  var response = getResponseForTarget(aTarget, responses);\n\n  // the result has no \"datapoints\", need to create it based on the check data\n  // when we have a checkname and a clientName, the response is different, the\n  // data is not an array, but contains the same information, recreate and push\n  if (response.data.length === undefined) {\n    var singleData = response.data;\n    response.data = [];\n    response.data.push(singleData);\n  }\n  // this will be collapsed into table format, where the columns are predefined\n  // and each row is a response formatted to the columns\n  var rowData = [];\n  for (var i = 0; i < response.data.length; i++) {\n    var rowInfo = response.data[i];\n    var aRow = [\n      rowInfo.check.issued * 1000,\n      rowInfo.client,\n      rowInfo.check.name,\n      rowInfo.check.status,\n      rowInfo.check.issued * 1000,\n      rowInfo.check.executed * 1000,\n      rowInfo.check.output,\n      rowInfo.check.type,\n      rowInfo.check.thresholds.warning,\n      rowInfo.check.thresholds.critical\n    ];\n    // now push into rowData\n    rowData.push(aRow);\n  }\n  // collapse everything into data[0]\n  var anEvent = response.data[0];\n  var datapoints = [];\n  datapoints[0] = [anEvent.check.status, (anEvent.check.issued * 1000)];\n  anEvent.datapoints = datapoints;\n  anEvent.type = \"table\";\n  anEvent.columns = [\n    { text: \"Time\", type: \"date\"},\n    { text: \"client\" },\n    { text: \"check.name\" },\n    { text: \"check.status\" },\n    { text: \"check.issued\", type: \"date\" },\n    { text: \"check.executed\", type: \"date\" },\n    { text: \"check.output\" },\n    { text: \"check.type\" },\n    { text: \"check.thresholds.warning\" },\n    { text: \"check.thresholds.critical\" }\n  ];\n  anEvent.rows = rowData;\n  // truncate the rest\n  response.data = [anEvent];\n  //var str = JSON.stringify(response, null, 2);\n  //console.log(str);\n  return response;\n}\n\n/*\nResponse come back as:\n{\n\"client\": \"p3-graphite-t1\",\n\"check\": {\n  \"thresholds\": {\n    \"warning\": 120,\n    \"critical\": 180\n  },\n  \"name\": \"keepalive\",\n  \"issued\": 1482067284,\n  \"executed\": 1482067284,\n  \"output\": \"Keepalive sent from client 3 seconds ago\",\n  \"status\": 0,\n  \"type\": \"standard\"\n}\n}\n */\nfunction convertResultsToJSON(aTarget, responses) {\n  var response = getResponseForTarget(aTarget, responses);\n\n  for (var i = 0; i < response.data.length; i++) {\n    var anEvent = response.data[i];\n    var datapoints = [];\n    if (anEvent.check.issued !== undefined) {\n      var data = {\n        timestamp: (anEvent.check.issued * 1000),\n        message: anEvent.check.name,\n        client: anEvent.client,\n        check: {\n          name: anEvent.check.name,\n          issued: (anEvent.check.issued * 1000),\n          executed: (anEvent.check.executed * 1000),\n          output: anEvent.check.output,\n          status: anEvent.check.status,\n          type: anEvent.check.type\n        }\n      };\n      datapoints.push(data);\n      anEvent.datapoints = datapoints;\n      delete anEvent.check;\n      delete anEvent.client;\n      anEvent.type = \"docs\";\n    }\n  }\n  //var str = JSON.stringify(response, null, 2);\n  //console.log(str);\n  return response;\n}\n\n/**\n * [convertResultsToDataPoints description]\n * @param  {[type]} response [description]\n * @return {[type]}        [description]\n */\nfunction convertResultsToDataPoints(aTarget, responses) {\n  var response = getResponseForTarget(aTarget, responses);\n\n  // the result has no \"datapoints\", need to create it based on the check data\n  // when we have a checkname and an clientName, the response is different, the\n  // data is not an array, but contains the same information, recreate and push\n  if (response.data.length === undefined) {\n    var singleData = response.data;\n    response.data = [];\n    response.data.push(singleData);\n  }\n  for (var i = 0; i < response.data.length; i++) {\n    var anEvent = response.data[i];\n    //var str = JSON.stringify(anEvent, null, 2);\n    //console.log(str);\n    var datapoints = [];\n    if (anEvent.check.issued !== undefined) {\n      datapoints[0] = [anEvent.check.status, (anEvent.check.issued * 1000)];\n      // the duration is here...\n      // datapoints[0] = [anEvent.check.duration, (anEvent.check.issued * 1000)];\n    }\n    anEvent.datapoints = datapoints;\n    // set the target to be the check name\n    if (anEvent.check.name !== undefined) {\n      anEvent.target = anEvent.check.name;\n    } else {\n      anEvent.target = anEvent.check;\n    }\n  }\n  return response;\n}\n\n\nexport {getResultURIs, convertResultsToTable, convertResultsToDataPoints, convertResultsToJSON};\n"]}