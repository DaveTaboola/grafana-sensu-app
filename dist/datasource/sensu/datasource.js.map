{"version":3,"file":"datasource.js","sourceRoot":"src/","sources":["datasource/sensu/datasource.ts"],"names":[],"mappings":"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","sourcesContent":["\nimport angular from \"angular\";\nimport _ from \"lodash\";\nimport * as dateMath from \"app/core/utils/datemath\";\nimport kbn from \"app/core/utils/kbn\";\nimport {\n  convertClientsToJSON,\n  convertClientHistoryToDataPoints,\n  convertClientsToDataPoints,\n  convertClientSummaryMetricsToJSON,\n  getClientsURIs\n} from \"./client_functions\";\nimport {\n  convertEventsToJSON,\n  convertEventsToDataPoints,\n  convertEventsToEventMetrics,\n  convertEventsToEventMetricsJSON,\n  getEventsURIs\n} from \"./event_functions\";\nimport {\n  getAggregateURIs,\n  convertAggregatesToDataPoints,\n  convertAggregatesToJSON\n} from \"./aggregate_functions\";\nimport {\n  getResultURIs,\n  convertResultsToTable,\n  convertResultsToDataPoints,\n  convertResultsToJSON\n} from \"./result_functions\";\nimport {\n  getClientHistoryURIs\n} from \"./clienthistory_functions\";\nimport {\n  getClientHealthURIs,\n  convertClientHealthToJSON,\n  convertClientHealthMetricsToJSON\n} from \"./client_health_functions\";\n\nexport class SensuDatasource {\n  type: any;\n  url: string;\n  name: string;\n  basicAuth: string;\n  withCredentials: any;\n  q: any;\n  backendSrv: any;\n  templateSrv: any;\n  uiSegmentSrv: any;\n  minimumInterval: any;\n\n  constructor(instanceSettings, $q, backendSrv, templateSrv, uiSegmentSrv) {\n    this.type = instanceSettings.type;\n    this.url = instanceSettings.url;\n    this.name = instanceSettings.name;\n    this.basicAuth = instanceSettings.basicAuth;\n    this.withCredentials = instanceSettings.withCredentials;\n    this.q = $q;\n    this.backendSrv = backendSrv;\n    this.templateSrv = templateSrv;\n    this.uiSegmentSrv = uiSegmentSrv;\n    //this.clientQueryTags = [];\n  }\n\n  // Required for templating\n  // gets the clients from Sensu API\n  // https://sensuapp.org/docs/0.26/api/clients-api.html\n\n  /**\n   * [metricFindQuery description]\n   * @param  {[type]} options [description]\n   * @return {[type]}         [description]\n   */\n  metricFindQuery(options) {\n    //console.log(\"metricFindQuery entered: \" + options);\n    var isClientTags = false;\n    var isClientTagValue = false;\n    var aQuery = \"/clients\";\n    var tagToValue = \"\";\n    // substitute template vars\n    options = this.templateSrv.replaceWithText(options);\n    if ((options !== undefined) && (options !== \"\")) {\n      switch (true) {\n        case /clienttags/.test(options):\n          aQuery = \"/clients\";\n          isClientTags = true;\n          break;\n        case /clienttagvalue/.test(options):\n          aQuery = \"/clients\";\n          isClientTagValue = true;\n          // split out the tag from the query\n          tagToValue = options.split(\"tag=\")[1];\n          break;\n        default:\n          aQuery = options;\n      }\n      // make sure there is a leading slash\n      if (!aQuery.startsWith(\"/\", 0)) {\n        aQuery = \"/\" + aQuery;\n      }\n    }\n    var thisRef = this;\n    return this.backendSrv.datasourceRequest({\n      url: this.url + aQuery,\n      data: options,\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": this.basicAuth\n      }\n    }).then(function(response) {\n      //thisRef.clientQueryTags = _this.generateClientQueryTags(response);\n      if (isClientTags) {\n        return thisRef.generateClientQueryTags(response);\n      }\n      if (isClientTagValue) {\n        return thisRef.getClientQueryTagValue(response, tagToValue);\n      }\n      return thisRef.mapToClientNameAndVersion(response);\n    });\n  }\n\n  generateClientQueryTags(response) {\n    var clientQueryTags = [];\n    var allTags = [];\n    var excludedTags = [\n      \"name\",\n      \"socket\",\n      \"address\",\n      \"subscriptions\",\n      \"timestamp\",\n      \"keepalive\",\n      \"keepalives\",\n      \"redact\",\n      \"version\"\n    ];\n    for (let i = 0; i < response.data.length; i++) {\n      var keys = Object.keys(response.data[i]);\n      for (let j = 0; j < keys.length; j++) {\n        let keyName = keys[j];\n        if (excludedTags.indexOf(keyName) === -1) {\n          let tagValue = response.data[i][keyName];\n          let fullKeyName = keyName + \"=\" + tagValue;\n          if (allTags.indexOf(fullKeyName) < 0) {\n            allTags.push(fullKeyName);\n          }\n        }\n      }\n    }\n    if (allTags.length > 0) {\n      // build the tags\n      allTags.sort();\n      for (let i = 0; i < allTags.length; i++) {\n        clientQueryTags.push(\n          {\n            text: allTags[i],\n            expandable: true\n          }\n        );\n      }\n    }\n    return clientQueryTags;\n  }\n\n  getClientQueryTagValue(response, tag) {\n    var tagSplit = tag.split(\"=\");\n    var tagToMatch = tagSplit[0];\n    var tagValueToMatch = tagSplit[1];\n    var clientQueryTags = [];\n    var allTagValues = [];\n    for (let i = 0; i < response.data.length; i++) {\n      var keys = Object.keys(response.data[i]);\n      for (let j = 0; j < keys.length; j++) {\n        let keyName = keys[j];\n        if (tagToMatch === keyName) {\n\n          // this can be a value or an array inside, check both\n          if (typeof response.data[i][tagToMatch] !== \"string\") {\n            for (let z = 0; z < response.data[i][tagToMatch].length; z++) {\n              if (response.data[i][tagToMatch][z] === tagValueToMatch) {\n                //let tagValue = response.data[i][keyName];\n                let tagValue = response.data[i].name;\n                if (allTagValues.indexOf(tagValue) < 0) {\n                  allTagValues.push(tagValue);\n                }\n              }\n            }\n          } else {\n            if (response.data[i][tagToMatch] === tagValueToMatch) {\n              //let tagValue = response.data[i][keyName];\n              let tagValue = response.data[i].name;\n              if (allTagValues.indexOf(tagValue) < 0) {\n                allTagValues.push(tagValue);\n              }\n            }\n          }\n        }\n      }\n    }\n    if (allTagValues.length > 0) {\n      // build the tags\n      for (let i = 0; i < allTagValues.length; i++) {\n        clientQueryTags.push(\n          {\n            text: allTagValues[i]\n          }\n        );\n      }\n    }\n    return clientQueryTags;\n  }\n\n  /**\n   * [mapToClientNameAndVersion description]\n   * @param  {[type]} result [description]\n   * @return {[type]}        [description]\n   */\n  mapToClientNameAndVersion(result) {\n    return _.map(result.data, function(d) {\n      var x = {\n        text: \"\",\n        expandable: true\n      };\n      try {\n        x = {\n          text: d.name,\n          expandable: true\n        };\n      } catch (e) { console.log(\"bad data\"); }\n      return x;\n    });\n  }\n\n  /**\n   * [getClientNames description]\n   * @param  {[type]} dimensions [description]\n   * @return {[type]}            [description]\n   */\n  getClientNames(dimensions) {\n    var values = [];\n    for (var i = 0; i < dimensions.length; i++) {\n      if (dimensions[i].dimensionType === \"clientName\") {\n        var aDimension = dimensions[i].value;\n        if (this.templateSrv.getVariableName(aDimension)) {\n          // template variable found, expand it\n          var templateVar = this.templateSrv.replace(aDimension);\n          if (templateVar.length > 0) {\n            // the expanded variable comes back as { value1 , value2 }\n            // or it comes back as just a value\n            if (templateVar.startsWith(\"{\")) {\n              templateVar = templateVar.slice(1, -1);\n              var templateVars = templateVar.split(\",\");\n              values.push.apply(values, templateVars);\n            } else {\n              values.push(templateVar);\n            }\n          }\n        } else {\n          values.push(aDimension);\n        }\n      }\n    }\n    //console.log(values);\n    return values;\n  }\n\n  /**\n   * [getCheckNames description]\n   * @param  {[type]} dimensions [description]\n   * @return {[type]}            [description]\n   */\n  getCheckNames(dimensions) {\n    var values = [];\n    for (var i = 0; i < dimensions.length; i++) {\n      if (dimensions[i].dimensionType === \"checkName\") {\n        var aDimension = dimensions[i].value;\n        if (this.templateSrv.getVariableName(aDimension)) {\n          // template variable found, expand it\n          var templateVar = this.templateSrv.replace(aDimension);\n          if (templateVar.length > 0) {\n            // the expanded variable comes back as { value1 , value2 }\n            // or it comes back as just a value\n            if (templateVar.startsWith(\"{\")) {\n              templateVar = templateVar.slice(1, -1);\n              var templateVars = templateVar.split(\",\");\n              values.push.apply(values, templateVars);\n            } else {\n              values.push(templateVar);\n            }\n          }\n        } else {\n          values.push(aDimension);\n        }\n      }\n    }\n    return values;\n  }\n\n  /**\n   * [getAggregateNames description]\n   * @param  {[type]} dimensions [description]\n   * @return {[type]}            [description]\n   */\n  getAggregateNames(dimensions) {\n    var values = [];\n    for (var i = 0; i < dimensions.length; i++) {\n      if (dimensions[i].dimensionType === \"aggregateName\") {\n        var aDimension = dimensions[i].value;\n        if (this.templateSrv.getVariableName(aDimension)) {\n          // template variable found, expand it\n          var templateVar = this.templateSrv.replace(aDimension);\n          if (templateVar.length > 0) {\n            // the expanded variable comes back as { value1 , value2 }\n            // or it comes back as just a value\n            if (templateVar.startsWith(\"{\")) {\n              templateVar = templateVar.slice(1, -1);\n              var templateVars = templateVar.split(\",\");\n              values.push.apply(values, templateVars);\n            } else {\n              values.push(templateVar);\n            }\n          }\n        } else {\n          values.push(aDimension);\n        }\n      }\n    }\n    return values;\n  }\n\n  replaceFilterValues(filters) {\n    for (var i = 0; i < filters.length; i++) {\n      var aFilter = filters[i];\n      switch (aFilter.filterType) {\n        case \"field\":\n          // Field filters have these properties\n          // filterFieldName\n          // filterFieldValue\n          //var aFieldName = aFilter.filterFieldName;\n          var aFieldValue = aFilter.filterFieldValue;\n          var templatedValue = this.templateSrv.replace(aFieldValue);\n          aFilter.filterFieldValueReplaced = templatedValue;\n          break;\n      }\n    }\n    return filters;\n  }\n\n  /**\n   * [getQueryURIByType description]\n   * @param  {[type]} target [description]\n   * @return {[type]}        [Array of URIs]\n   */\n  getQueryURIByType(target) {\n    var uris = [];\n    var dimensionURI = \"/events\";\n    var clientNames = null;\n    var checkNames = null;\n    var aggregateNames = null;\n    if (target.dimensions !== undefined) {\n      clientNames = this.getClientNames(target.dimensions);\n      checkNames = this.getCheckNames(target.dimensions);\n      aggregateNames = this.getAggregateNames(target.dimensions);\n    }\n    if (target.filters !== undefined) {\n      // convert all templated values\n      this.replaceFilterValues(target.filters);\n    }\n    if (target.alias !== undefined) {\n      target.aliasReplaced = this.templateSrv.replace(target.alias);\n    }\n    switch (target.sourceType) {\n      case \"aggregates\":\n      case \"aggregates_json\":\n        // https://sensuapp.org/docs/0.28/api/aggregates-api.html\n        uris = getAggregateURIs(target, aggregateNames);\n        break;\n      case \"check_subscriptions\":\n        // https://sensuapp.org/docs/0.28/api/checks-api.html\n        //\n        // Returns list of subscription names, with the corresponding checks for the subscription\n        // Dimensions are:\n        //    name - name of check\n        //    aggregate - name of aggregate\n        //    type (metric|check)\n        //    source - JIT client\n        //\n        break;\n      case \"client_health_json\":\n        uris = getClientHealthURIs(clientNames);\n        break;\n      case \"clients\":\n      case \"clients_json\":\n        // https://sensuapp.org/docs/0.28/api/clients-api.html\n        uris = getClientsURIs(checkNames, clientNames);\n        break;\n      case \"clienthistory\":\n        // https://sensuapp.org/docs/0.28/api/clients-api.html\n        // look for clientName in dimensions\n        uris = getClientHistoryURIs(clientNames);\n        break;\n      case \"event_metrics\":\n      case \"event_metrics_json\":\n      case \"events\":\n      case \"events_json\":\n        // https://sensuapp.org/docs/0.28/api/events-api.html\n        uris = getEventsURIs(checkNames, clientNames);\n        break;\n      case \"results_json\":\n      case \"results_table\":\n        // https://sensuapp.org/docs/0.28/api/results-api.html\n        uris = getResultURIs(checkNames, clientNames);\n        break;\n      case \"sensu_health_json\":\n        // https://sensuapp.org/docs/0.28/api/health-and-info-api.html\n        break;\n      case \"silenced_entries_json\":\n        // https://sensuapp.org/docs/0.28/api/silenced-api.html\n        break;\n      case \"stashes_json\":\n        // https://sensuapp.org/docs/0.28/api/stashes-api.html\n        break;\n    }\n    return uris;\n  }\n\n  getBuckets(responses) {\n    var buckets = {};\n    for (var i = 0; i < responses.data.length; i++) {\n      var refId = responses.data[i].target.refId;\n      if (buckets.hasOwnProperty(refId)) {\n        buckets[refId].push(responses.data[i]);\n      } else {\n        buckets[refId] = [responses.data[i]];\n      }\n    }\n    return buckets;\n  }\n\n  processConversions(sourceType, aTarget, responses) {\n    var result = { data: []};\n    switch (sourceType) {\n      case \"aggregates\":\n        result = convertAggregatesToDataPoints(aTarget, responses);\n        break;\n      case \"aggregates_json\":\n        result = convertAggregatesToJSON(aTarget, responses);\n        return result;\n      case \"clients\":\n        result = convertClientsToDataPoints(aTarget, responses);\n        return result;\n      case \"clients_json\":\n        result = convertClientsToJSON(aTarget, responses);\n        return result;\n      case \"client_health_json\":\n        result = convertClientHealthToJSON(aTarget, responses);\n        return result;\n      case \"clienthistory\":\n        result = convertClientHistoryToDataPoints(aTarget, responses);\n        break;\n      case \"events\":\n        result = convertEventsToDataPoints(aTarget, responses);\n        break;\n      case \"events_json\":\n        result = convertEventsToJSON(aTarget, responses);\n        break;\n      case \"event_metrics\":\n        result = convertEventsToEventMetrics(aTarget, responses);\n        break;\n      case \"event_metrics_json\":\n        result = convertEventsToEventMetricsJSON(aTarget, responses);\n        break;\n      case \"results_json\":\n        result = convertResultsToJSON(aTarget, responses);\n        break;\n      case \"results_table\":\n        result = convertResultsToTable(aTarget, responses);\n        break;\n      default:\n        console.log(\"Unknown source type\");\n        break;\n    }\n    return result;\n  }\n\n  setRawTargets(aTarget, result) {\n    // keep the actual name\n    for (let i = 0; i < result.data.length; i++) {\n      result.data[i].rawTarget = result.data[i].target;\n    }\n    return result;\n  }\n\n  processFilters(aTarget, result) {\n    // if there are no filters, return all data[] items\n    if ((aTarget.filters !== undefined) && (aTarget.filters.length > 0)) {\n      var filterData = [];\n      for (let i = 0; i < aTarget.filters.length; i++) {\n        var aFilter = aTarget.filters[i];\n        // iterate over the data, find matching targets\n        for (let j = 0; j < result.data.length; j++) {\n          var aRawTarget = result.data[j].rawTarget;\n          if (aFilter.filterType === aRawTarget) {\n            // Prepend Alias\n            if (aTarget.aliasReplaced) {\n              result.data[j].target = aTarget.aliasReplaced + \" \" + aRawTarget;\n            }\n            // save this result\n            filterData.push(result.data[j]);\n          }\n        }\n      }\n      // if we have filtered data, replace the result with it\n      if (filterData.length > 0) {\n        result.data = filterData;\n      }\n    } else {\n      // if there are no filters, apply the alias (this is probably not what you want, but allow it...)\n      if (aTarget.aliasReplaced) {\n        for (let i = 0; i < result.data.length; i++) {\n          result.data[i].target = aTarget.aliasReplaced;\n        }\n      }\n    }\n\n    return result;\n  }\n  /**\n   * [parseQueryResult description]\n   * @param  {[type]} aTarget  [description]\n   * @param  {[type]} responses Array of Responses, containing data[{ target: aTarget, response: response}]\n   * @return {[type]}          [description]\n   */\n  parseQueryResult(responses) {\n\n    // This will match refId's for responses and bucket them together, then pass the bucket to the conversion routines\n    // This allows multiple responses intended for a single target to all be processed at once\n    // It is up to the processor to use the data sent, and return a result that can be used.\n    var allResults = { data: [] };\n    if (!responses || !responses.data) {\n      return allResults;\n    }\n    var buckets = this.getBuckets(responses);\n\n    // iterate over the keys in the buckets to get the target and source type\n    var bucketKeys = Object.keys(buckets);\n    for (let i = 0; i < bucketKeys.length; i++) {\n      let aKey = bucketKeys[i];\n      let sourceType = buckets[aKey][0].target.sourceType;\n      // also use the target from the first response\n      let aTarget = buckets[aKey][0].target;\n      // convert results according to the sourceType\n      // IMPORTANT: do not allow responses to be modifed, return a new object!\n      let result = this.processConversions(sourceType, aTarget, responses);\n      // update result with the rawTarget name (preserve name from aliasing)\n      result = this.setRawTargets(aTarget, result);\n      // apply filters\n      result = this.processFilters(aTarget, result);\n      // iterate over all of the results and push into allResults\n      for (let i = 0; i < result.data.length; i++) {\n        allResults.data.push(result.data[i]);\n      }\n    }\n    return allResults;\n  }\n\n  /**\n   *\n   */\n  getCheckInterval(client, checkName) {\n    // http://10.227.86.62/results/default-oel-67-x86-64/keepalive\n    /* The check may not have interval defined, which means it is defaulted to 60 seconds\n    {\n      \"client\": \"default-oel-67-x86-64\",\n      \"check\": {\n        \"thresholds\": {\n          \"warning\": 120,\n          \"critical\": 180\n        },\n        \"name\": \"keepalive\",\n        \"issued\": 1476277039,\n        \"executed\": 1476277039,\n        \"output\": \"No keepalive sent from client for 40860 seconds (>=180)\",\n        \"status\": 2,\n        \"type\": \"standard\"\n      }\n    }\n     */\n  }\n\n  /**\n   * [dimensionFindValues description]\n   * @param  {[type]} target    [description]\n   * @param  {[type]} dimension [description]\n   * @return {[type]}           [description]\n   */\n  dimensionFindValues(target, dimension) {\n    var dimensionURI = \"/clients\";\n    switch (dimension.dimensionType) {\n      case \"clientName\":\n        dimensionURI = \"/clients\";\n        break;\n      case \"checkName\":\n        dimensionURI = \"/checks\";\n        break;\n      case \"aggregateName\":\n        dimensionURI = \"/aggregates\";\n        break;\n    }\n    return this.backendSrv.datasourceRequest({\n      url: this.url + dimensionURI,\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": this.basicAuth\n      }\n    }).then(this.mapToTextValue);\n  }\n\n  mapToTextValue(result) {\n    return _.map(result.data, (d, i) => {\n      return {\n        text: d.name,\n        value: d.name\n      };\n    });\n  }\n\n  /**\n   * [dimensionFindValues description]\n   * @param  {[type]} target    [description]\n   * @param  {[type]} filter [description]\n   * @return {[type]}           [description]\n   */\n  filterFindValues(target, filter) {\n    var filterURI = \"/clients\";\n    switch (filter.filterType) {\n      case \"clientName\":\n        filterURI = \"/clients\";\n        break;\n      case \"checkName\":\n        filterURI = \"/checks\";\n        break;\n      case \"aggregateName\":\n        filterURI = \"/aggregates\";\n        break;\n    }\n    return this.backendSrv.datasourceRequest({\n      url: this.url + filterURI,\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": this.basicAuth\n      }\n    }).then(this.mapToTextValue);\n  }\n\n  query(options) {\n    var queries = [];\n    var thisRef = this;\n    var singleTarget = null;\n    options.targets.forEach(function(target) {\n      // TODO handle hide and no target specified\n      //if (target.hide || !target.target) {\n      //  continue;\n      //}\n      queries.push(target);\n    });\n    var interval = options.interval;\n    //console.log(\"options interval = \" + interval);\n    if (kbn.interval_to_ms(interval) < this.minimumInterval) {\n      // console.log(\"Detected interval smaller than allowed: \" + interval);\n      interval = kbn.secondsToHms(this.minimumInterval / 1000);\n      // console.log(\"New Interval: \" + interval);\n    }\n    //console.log(\"interval after min check = \" + interval);\n    var deferred = this.q.defer();\n\n    // if there are no queries, return empty data\n    if (queries.length === 0) {\n      // console.log(\"no tags visible or specified, no data to fetch\");\n      deferred.resolve({\n        data: []\n      });\n      return deferred.promise;\n    }\n    var allQueries = this.q.all({\n      first: thisRef.multipleDataQueries(queries),\n    });\n    allQueries.then(function(results) {\n      // return results from queries\n      deferred.resolve(results.first);\n    });\n    return deferred.promise;\n  }\n\n  singleDataQuery(singleTarget, uriType) {\n    //console.log(\"singleDataQuery entered\");\n    //var thisRef = this;\n    var deferred = this.q.defer();\n    var params = {};\n    var httpOptions = {\n      method: \"GET\",\n      url: this.url + uriType,\n      params: params,\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": this.basicAuth\n      }\n    };\n    this.backendSrv.datasourceRequest(httpOptions)\n      .then(function(response) {\n        var anError = null;\n        if (response.status !== 200) {\n          console.log(\"error...\");\n          anError = new Error(\"Bad Status: \" + response.status);\n          deferred.reject(anError);\n        }\n        if (!response.data) {\n          anError = new Error(\"No data\");\n          deferred.reject(anError);\n        }\n        // this used to parse per response, instead this is returning the target and response to be later\n        // used by multiDone\n        // OLD: deferred.resolve(_this.parseQueryResult(singleTarget, response));\n        deferred.resolve({ target: singleTarget, response: response});\n      }, function(response) {\n        console.error(\"Unable to load data. Response: %o\", response.data ? response.data.message : response);\n        var error = new Error(\"Unable to load data\");\n        deferred.reject(error);\n      });\n\n    return deferred.promise;\n  }\n\n  /**\n   * Wrapper called when all queries have been completed.\n   * @param  {[type]} responses [description]\n   * @return {[type]}           [description]\n   */\n  multiDone(responses) {\n    return this.parseQueryResult(responses);\n  }\n\n  /**\n   * Leverages promises to perform multiple async queries\n   * @param  {[type]} pendingQueries [description]\n   * @return {[type]}                [description]\n   */\n  multipleDataQueries(pendingQueries) {\n    var deferred = this.q.defer();\n    var dataCalls = [];\n    var thisRef = this;\n    // for each query, we get a list of sensu uris' to hit\n    // to retrieve the data\n    angular.forEach(pendingQueries, function(aTarget) {\n      var uriList = thisRef.getQueryURIByType(aTarget);\n      for (var i = 0; i < uriList.length; i++) {\n        dataCalls.push(thisRef.singleDataQuery(aTarget, uriList[i]));\n      }\n    });\n    this.q.all(dataCalls)\n      .then(\n        function(results) {\n          var response = {\n            data: []\n          };\n          // merge all of the results into one response\n          angular.forEach(results, function(result) {\n            response.data.push(result);\n            //angular.forEach(result.data, function(dataSet) {\n            //  response.data.push(dataSet);\n            //});\n          });\n          // multiDone needs to return all of the parsed results inside somevar.data[]\n          deferred.resolve(thisRef.multiDone(response));\n        },\n        function(errors) {\n          deferred.reject(errors);\n        },\n        function(updates) {\n          deferred.update(updates);\n        }\n      );\n    return deferred.promise;\n  }\n\n  // Required\n  // Used for testing datasource in datasource configuration pange\n  //    'Access-Control-Allow-Origin': \"http://localhost:3000\"\n  //\n\n  /**\n   * [testDatasource description]\n   * @return {[type]} [description]\n   */\n  testDatasource() {\n    return this.backendSrv.datasourceRequest({\n      url: this.url + \"/info\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": this.basicAuth\n      },\n      method: \"GET\",\n    }).then(response => {\n      if (response.status === 200) {\n        return {\n          status: \"success\",\n          message: \"Data source is working\",\n          title: \"Success\"\n        };\n      }\n      return {\n        status: \"error\",\n        message: \"Data source is not working\",\n        title: \"Error\"\n      };\n    });\n  }\n}\n"]}