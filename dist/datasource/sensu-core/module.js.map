{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///../node_modules/tslib/tslib.es6.js","webpack:///src/home/circleci/plugin/src/datasource/sensu-core/api/aggregate_converters.ts","webpack:///src/home/circleci/plugin/src/datasource/sensu-core/api/aggregate_requests.ts","webpack:///src/home/circleci/plugin/src/datasource/sensu-core/api/client_converters.ts","webpack:///src/home/circleci/plugin/src/datasource/sensu-core/api/client_filters.ts","webpack:///src/home/circleci/plugin/src/datasource/sensu-core/api/client_requests.ts","webpack:///src/home/circleci/plugin/src/datasource/sensu-core/api/event_converters.ts","webpack:///src/home/circleci/plugin/src/datasource/sensu-core/api/event_filters.ts","webpack:///src/home/circleci/plugin/src/datasource/sensu-core/api/event_requests.ts","webpack:///src/home/circleci/plugin/src/datasource/sensu-core/api/result_converters.ts","webpack:///src/home/circleci/plugin/src/datasource/sensu-core/api/result_requests.ts","webpack:///src/home/circleci/plugin/src/datasource/sensu-core/api/utils.ts","webpack:///src/home/circleci/plugin/src/datasource/sensu-core/config.ts","webpack:///src/home/circleci/plugin/src/datasource/sensu-core/datasource.ts","webpack:///src/home/circleci/plugin/src/datasource/sensu-core/module.ts","webpack:///src/home/circleci/plugin/src/datasource/sensu-core/query_ctrl.ts","webpack:///external \"app/core/utils/kbn\"","webpack:///external \"app/plugins/sdk\"","webpack:///external \"lodash\""],"names":[],"mappings":";QAAA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;;AClFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA,+DAA+D;AAC/D;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAU,gBAAgB,sCAAsC,iBAAiB,EAAE;AACnF,yBAAyB,uDAAuD;AAChF;AACA;;AAEO;AACP;AACA,mBAAmB,sBAAsB;AACzC;AACA;;AAEO;AACP;AACA,gDAAgD,OAAO;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA,4DAA4D,cAAc;AAC1E;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;;AAEO;AACP,mCAAmC,oCAAoC;AACvE;;AAEO;AACP;AACA;;AAEO;AACP;AACA,mCAAmC,MAAM,6BAA6B,EAAE,YAAY,WAAW,EAAE;AACjG,kCAAkC,MAAM,iCAAiC,EAAE,YAAY,WAAW,EAAE;AACpG,+BAA+B,iEAAiE,uBAAuB,EAAE,4BAA4B;AACrJ;AACA,KAAK;AACL;;AAEO;AACP,aAAa,6BAA6B,0BAA0B,aAAa,EAAE,qBAAqB;AACxG,gBAAgB,qDAAqD,oEAAoE,aAAa,EAAE;AACxJ,sBAAsB,sBAAsB,qBAAqB,GAAG;AACpE;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC,kCAAkC,SAAS;AAC3C,kCAAkC,WAAW,UAAU;AACvD,yCAAyC,cAAc;AACvD;AACA,6GAA6G,OAAO,UAAU;AAC9H,gFAAgF,iBAAiB,OAAO;AACxG,wDAAwD,gBAAgB,QAAQ,OAAO;AACvF,8CAA8C,gBAAgB,gBAAgB,OAAO;AACrF;AACA,iCAAiC;AACjC;AACA;AACA,SAAS,YAAY,aAAa,OAAO,EAAE,UAAU,WAAW;AAChE,mCAAmC,SAAS;AAC5C;AACA;;AAEO;AACP;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,MAAM,gBAAgB;AACzC;AACA;AACA;AACA;AACA,iBAAiB,sBAAsB;AACvC;AACA;AACA;;AAEO;AACP,4BAA4B,sBAAsB;AAClD;AACA;AACA;;AAEO;AACP,iDAAiD,QAAQ;AACzD,wCAAwC,QAAQ;AAChD,wDAAwD,QAAQ;AAChE;AACA;AACA;;AAEO;AACP;AACA;;AAEO;AACP;AACA;AACA,iBAAiB,sFAAsF,aAAa,EAAE;AACtH,sBAAsB,gCAAgC,qCAAqC,0CAA0C,EAAE,EAAE,GAAG;AAC5I,2BAA2B,MAAM,eAAe,EAAE,YAAY,oBAAoB,EAAE;AACpF,sBAAsB,oGAAoG;AAC1H,6BAA6B,uBAAuB;AACpD,4BAA4B,wBAAwB;AACpD,2BAA2B,yDAAyD;AACpF;;AAEO;AACP;AACA,iBAAiB,4CAA4C,SAAS,EAAE,qDAAqD,aAAa,EAAE;AAC5I,yBAAyB,6BAA6B,oBAAoB,gDAAgD,gBAAgB,EAAE,KAAK;AACjJ;;AAEO;AACP;AACA;AACA,2GAA2G,sFAAsF,aAAa,EAAE;AAChN,sBAAsB,8BAA8B,gDAAgD,uDAAuD,EAAE,EAAE,GAAG;AAClK,4CAA4C,sCAAsC,UAAU,oBAAoB,EAAE,EAAE,UAAU;AAC9H;;AAEO;AACP,gCAAgC,uCAAuC,aAAa,EAAE,EAAE,OAAO,kBAAkB;AACjH;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP,4CAA4C;AAC5C;;;;;;;;;;;;;;;;;;;;;;;;AChMA;;AAOA,SAAS,6BAAT,CAAuC,OAAvC,EAAgD,SAAhD,EAAyD;AACvD,MAAM,QAAQ,GAAG,mEAAoB,CAAC,OAAD,EAAU,SAAV,CAArC;;AAKA,MAAI,QAAQ,CAAC,IAAT,CAAc,MAAd,KAAyB,SAA7B,EAAwC;AACtC,QAAM,UAAU,GAAG,QAAQ,CAAC,IAA5B;AACA,YAAQ,CAAC,IAAT,GAAgB,EAAhB;AACA,YAAQ,CAAC,IAAT,CAAc,IAAd,CAAmB,UAAnB;AACD;;AAED,MAAI,OAAO,GAAG,IAAd;;AACA,OAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,QAAQ,CAAC,IAAT,CAAc,MAAlC,EAA0C,CAAC,EAA3C,EAA+C;AAC7C,QAAM,WAAW,GAAG,QAAQ,CAAC,IAAT,CAAc,CAAd,CAApB;;AAEA,QAAI,WAAW,CAAC,MAAZ,KAAuB,SAA3B,EAAsC;AAGpC,UAAM,SAAS,WAAU,WAAW,CAAC,MAAtB,CAAf;;AACA,cAAQ,SAAR;AACE,aAAK,QAAL;AAEE,iBAAO,GAAG,mCAAmC,CAAC,WAAD,EAAc,OAAd,CAA7C;AACA;;AACF,aAAK,QAAL;AAEE,iBAAO,GAAG,qCAAqC,CAAC,WAAD,EAAc,OAAd,CAA/C;AACA;AARJ;;AAUA;AACD;;AAED,QAAI,WAAW,CAAC,OAAZ,KAAwB,SAA5B,EAAuC;AACrC,aAAO,GAAG,qCAAqC,CAAC,WAAD,EAAc,OAAd,CAA/C;AACA;AACD;;AAED,QAAI,WAAW,CAAC,OAAZ,KAAwB,SAA5B,EAAuC;AACrC,aAAO,GAAG,sCAAsC,CAAC,WAAD,EAAc,OAAd,CAAhD;AACA;AACD;;AAGD,QAAM,UAAU,GAAG,EAAnB;AAEA,QAAM,SAAS,GAAG,IAAI,CAAC,KAAL,CAAW,IAAI,CAAC,GAAL,EAAX,CAAlB;AACA,cAAU,CAAC,CAAD,CAAV,GAAgB,CAAC,CAAD,EAAI,SAAJ,CAAhB;AACA,eAAW,CAAC,UAAZ,GAAyB,UAAzB;AAEA,eAAW,CAAC,MAAZ,GAAqB,WAAW,CAAC,IAAjC;AACD;;AACD,MAAI,OAAO,KAAK,IAAhB,EAAsB;AAEpB,YAAQ,CAAC,IAAT,GAAgB,OAAhB;AACD;;AACD,SAAO,QAAP;AACD;;AAED,SAAS,sCAAT,CAAgD,OAAhD,EAAyD,OAAzD,EAAgE;AAC9D,MAAM,SAAS,GAAG,IAAI,CAAC,KAAL,CAAW,IAAI,CAAC,GAAL,EAAX,CAAlB;;AACA,MAAI,OAAO,KAAK,IAAhB,EAAsB;AAEpB,WAAO,GAAG,EAAV;AACD;;AAED,OAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,OAAO,CAAC,OAAR,CAAgB,MAApC,EAA4C,CAAC,EAA7C,EAAiD;AAC/C,QAAM,QAAQ,GAAG,OAAO,CAAC,OAAR,CAAgB,CAAhB,CAAjB;AACA,QAAM,SAAS,GAAG;AAChB,YAAM,EAAE,OAAO,CAAC,KADA;AAEhB,aAAO,EAAE,QAAQ,CAAC,OAFF;AAGhB,gBAAU,EAAE,CAAC,CAAC,QAAQ,CAAC,KAAV,EAAiB,SAAjB,CAAD;AAHI,KAAlB;AAKA,WAAO,CAAC,IAAR,CAAa,SAAb;AACD;;AACD,SAAO,OAAP;AACD;;AAQD,SAAS,qCAAT,CAA+C,OAA/C,EAAwD,OAAxD,EAA+D;AAC7D,MAAM,SAAS,GAAG,IAAI,CAAC,KAAL,CAAW,IAAI,CAAC,GAAL,EAAX,CAAlB;;AACA,MAAI,OAAO,KAAK,IAAhB,EAAsB;AAEpB,WAAO,GAAG,EAAV;AACD;;AAED,OAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,OAAO,CAAC,OAAR,CAAgB,MAApC,EAA4C,CAAC,EAA7C,EAAiD;AAC/C,QAAM,UAAU,GAAG,OAAO,CAAC,OAAR,CAAgB,CAAhB,CAAnB;AACA,QAAM,SAAS,GAAG;AAChB,YAAM,EAAE,OAAO,CAAC,IADA;AAEhB,gBAAU,EAAE,CAAC,CAAC,UAAD,EAAa,SAAb,CAAD;AAFI,KAAlB;AAIA,WAAO,CAAC,IAAR,CAAa,SAAb;AACD;;AACD,SAAO,OAAP;AACD;;AASD,SAAS,qCAAT,CAA+C,OAA/C,EAAwD,OAAxD,EAA+D;AAC7D,MAAM,SAAS,GAAG,IAAI,CAAC,KAAL,CAAW,IAAI,CAAC,GAAL,EAAX,CAAlB;;AACA,MAAI,OAAO,KAAK,IAAhB,EAAsB;AAEpB,WAAO,GAAG,EAAV;AACD;;AAED,OAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,OAAO,CAAC,MAAR,CAAe,MAAnC,EAA2C,CAAC,EAA5C,EAAgD;AAC9C,QAAM,SAAS,GAAG,OAAO,CAAC,MAAR,CAAe,CAAf,CAAlB;AACA,QAAM,UAAU,GAAG;AACjB,YAAM,EAAE,OAAO,CAAC,IADC;AAEjB,gBAAU,EAAE,CAAC,CAAC,SAAD,EAAY,SAAZ,CAAD;AAFK,KAAnB;AAIA,WAAO,CAAC,IAAR,CAAa,UAAb;AACD;;AACD,SAAO,OAAP;AACD;;AAcD,SAAS,mCAAT,CAA6C,OAA7C,EAAsD,OAAtD,EAA6D;AAC3D,MAAI,OAAO,KAAK,IAAhB,EAAsB;AAEpB,WAAO,GAAG,EAAV;AACD;;AACD,MAAM,SAAS,GAAG,IAAI,CAAC,KAAL,CAAW,IAAI,CAAC,GAAL,EAAX,CAAlB;AACA,MAAI,IAAI,GAAG;AACT,UAAM,EAAE,QADC;AAET,cAAU,EAAE,CAAC,CAAC,OAAO,CAAC,MAAT,EAAiB,SAAjB,CAAD;AAFH,GAAX;AAIA,SAAO,CAAC,IAAR,CAAa,IAAb;AACA,MAAI,GAAG;AACL,UAAM,EAAE,SADH;AAEL,cAAU,EAAE,CAAC,CAAC,OAAO,CAAC,OAAT,EAAkB,SAAlB,CAAD;AAFP,GAAP;AAIA,SAAO,CAAC,IAAR,CAAa,IAAb;AACA,MAAI,GAAG;AACL,UAAM,EAAE,UADH;AAEL,cAAU,EAAE,CAAC,CAAC,OAAO,CAAC,OAAR,CAAgB,QAAjB,EAA2B,SAA3B,CAAD;AAFP,GAAP;AAIA,SAAO,CAAC,IAAR,CAAa,IAAb;AACA,MAAI,GAAG;AACL,UAAM,EAAE,IADH;AAEL,cAAU,EAAE,CAAC,CAAC,OAAO,CAAC,OAAR,CAAgB,EAAjB,EAAqB,SAArB,CAAD;AAFP,GAAP;AAIA,SAAO,CAAC,IAAR,CAAa,IAAb;AACA,MAAI,GAAG;AACL,UAAM,EAAE,OADH;AAEL,cAAU,EAAE,CAAC,CAAC,OAAO,CAAC,OAAR,CAAgB,KAAjB,EAAwB,SAAxB,CAAD;AAFP,GAAP;AAIA,SAAO,CAAC,IAAR,CAAa,IAAb;AACA,MAAI,GAAG;AACL,UAAM,EAAE,OADH;AAEL,cAAU,EAAE,CAAC,CAAC,OAAO,CAAC,OAAR,CAAgB,KAAjB,EAAwB,SAAxB,CAAD;AAFP,GAAP;AAIA,SAAO,CAAC,IAAR,CAAa,IAAb;AACA,MAAI,GAAG;AACL,UAAM,EAAE,SADH;AAEL,cAAU,EAAE,CAAC,CAAC,OAAO,CAAC,OAAR,CAAgB,OAAjB,EAA0B,SAA1B,CAAD;AAFP,GAAP;AAIA,SAAO,CAAC,IAAR,CAAa,IAAb;AACA,MAAI,GAAG;AACL,UAAM,EAAE,SADH;AAEL,cAAU,EAAE,CAAC,CAAC,OAAO,CAAC,OAAR,CAAgB,OAAjB,EAA0B,SAA1B,CAAD;AAFP,GAAP;AAIA,SAAO,CAAC,IAAR,CAAa,IAAb;AAEA,SAAO,OAAP;AACD;;AAED,SAAS,gCAAT,CAA0C,IAA1C,EAAgD,OAAhD,EAAuD;AACrD,MAAM,SAAS,GAAG,IAAI,CAAC,KAAL,CAAW,IAAI,CAAC,GAAL,EAAX,CAAlB;;AACA,MAAI,OAAO,KAAK,IAAhB,EAAsB;AAEpB,WAAO,GAAG,EAAV;AACD;;AAED,OAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,IAAI,CAAC,MAAL,CAAY,MAAhC,EAAwC,CAAC,EAAzC,EAA6C;AAC3C,QAAM,SAAS,GAAG,IAAI,CAAC,MAAL,CAAY,CAAZ,CAAlB;AACA,QAAM,UAAU,GAAG;AACjB,YAAM,EAAE,IAAI,CAAC,IADI;AAEjB,gBAAU,EAAE,CAAC,CAAC,SAAD,EAAY,SAAZ,CAAD;AAFK,KAAnB;AAIA,WAAO,CAAC,IAAR,CAAa,UAAb;AACD;;AACD,SAAO,OAAP;AACD;;AAQD,SAAS,uBAAT,CAAiC,OAAjC,EAA0C,SAA1C,EAAmD;AACjD,MAAM,QAAQ,GAAG,mEAAoB,CAAC,OAAD,EAAU,SAAV,CAArC;AACA,MAAI,aAAa,GAAG,KAApB;;AACA,MAAI,OAAO,CAAC,UAAR,CAAmB,MAAnB,GAA4B,CAAhC,EAAmC;AACjC,iBAAa,GAAG,OAAO,CAAC,UAAR,CAAmB,CAAnB,EAAsB,KAAtC;AACD;;AACD,OAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,QAAQ,CAAC,IAAT,CAAc,MAAlC,EAA0C,CAAC,EAA3C,EAA+C;AAC7C,QAAM,IAAI,GAAG,QAAQ,CAAC,IAAT,CAAc,CAAd,CAAb;AACA,QAAM,UAAU,GAAG,EAAnB;AACA,QAAM,IAAI,GAAG;AACX,YAAM,EAAE,IAAI,CAAC,IADF;AAEX,YAAM,EAAE,IAAI,CAAC,MAFF;AAGX,oBAAc,EAAE;AAHL,KAAb;AAKA,cAAU,CAAC,IAAX,CAAgB,IAAhB;AACA,QAAI,CAAC,UAAL,GAAkB,UAAlB;AACA,QAAI,CAAC,IAAL,GAAY,MAAZ;AACD;;AACD,SAAO,QAAP;AACD;;;;;;;;;;;;;;AC9OD;AAAA;AAAA,SAAS,gBAAT,CAA0B,MAA1B,EAAkC,cAAlC,EAAgD;AAE9C,MAAM,IAAI,GAAG,EAAb;AACA,MAAI,YAAY,GAAG,aAAnB;AACA,MAAI,eAAe,GAAG,IAAtB;;AAEA,MAAI,cAAc,CAAC,MAAnB,EAA2B;AACzB,SAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,cAAc,CAAC,MAAnC,EAA2C,CAAC,EAA5C,EAAgD;AAC9C,qBAAe,GAAG,cAAc,CAAC,CAAD,CAAhC;AACA,kBAAY,GAAG,iBAAiB,eAAhC;;AACA,cAAQ,MAAM,CAAC,aAAf;AACE,aAAK,QAAL;AACE,sBAAY,GAAG,iBAAiB,eAAjB,GAAmC,SAAlD;AACA;;AACF,aAAK,SAAL;AACE,sBAAY,GAAG,iBAAiB,eAAjB,GAAmC,UAAlD;AACA;;AACF,aAAK,MAAL;AACE,sBAAY,GAAG,iBAAiB,eAAhC;AACA;;AACF,aAAK,kBAAL;AACE,sBAAY,GAAG,iBAAiB,eAAjB,GAAmC,mBAAlD;AACA;;AACF,aAAK,YAAL;AACE,sBAAY,GAAG,iBAAiB,eAAjB,GAAmC,aAAlD;AACA;;AACF,aAAK,iBAAL;AACE,sBAAY,GAAG,iBAAiB,eAAjB,GAAmC,kBAAlD;AACA;;AACF,aAAK,iBAAL;AACE,sBAAY,GAAG,iBAAiB,eAAjB,GAAmC,kBAAlD;AACA;AArBJ;;AAuBA,UAAI,CAAC,IAAL,CAAU,YAAV;AACD;AACF;;AACD,MAAI,IAAI,CAAC,MAAL,KAAgB,CAApB,EAAuB;AACrB,QAAI,CAAC,IAAL,CAAU,YAAV;AACD;;AACD,SAAO,IAAP;AACD;;;;;;;;;;;;;;ACzCD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;AAOA,SAAS,0BAAT,CAAoC,OAApC,EAA6C,SAA7C,EAAsD;AACpD,MAAM,QAAQ,GAAG,mEAAoB,CAAC,OAAD,EAAU,SAAV,CAArC;;AAKA,MAAI,QAAQ,CAAC,IAAT,CAAc,MAAd,KAAyB,SAA7B,EAAwC;AACtC,QAAM,UAAU,GAAG,QAAQ,CAAC,IAA5B;AACA,YAAQ,CAAC,IAAT,GAAgB,EAAhB;AACA,YAAQ,CAAC,IAAT,CAAc,IAAd,CAAmB,UAAnB;AACD;;AACD,UAAQ,OAAO,CAAC,eAAhB;AACE,SAAK,MAAL;AACE,UAAM,UAAU,GAAG,EAAnB;AACA,UAAI,cAAc,GAAG,EAArB;;AACA,UAAI,OAAO,CAAC,OAAR,KAAoB,SAApB,IAAiC,OAAO,CAAC,OAAR,CAAgB,MAAhB,GAAyB,CAA9D,EAAiE;AAC/D,sBAAc,GAAG,4EAAoB,CAAC,OAAD,EAAU,QAAV,CAArC;;AAEA,aAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,QAAQ,CAAC,IAAT,CAAc,MAAlC,EAA0C,CAAC,EAA3C,EAA+C;AAE7C,cAAI,cAAc,CAAC,OAAf,CAAuB,QAAQ,CAAC,IAAT,CAAc,CAAd,EAAiB,IAAxC,KAAiD,CAArD,EAAwD;AACtD,sBAAU,CAAC,IAAX,CAAgB,QAAQ,CAAC,IAAT,CAAc,CAAd,CAAhB;AACD;AACF;;AAED,gBAAQ,CAAC,IAAT,GAAgB,UAAhB;AACD;;AACD,WAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,QAAQ,CAAC,IAAT,CAAc,MAAlC,EAA0C,CAAC,EAA3C,EAA+C;AAC7C,YAAM,IAAI,GAAG,QAAQ,CAAC,IAAT,CAAc,CAAd,CAAb;AACA,YAAM,UAAU,GAAG,EAAnB;;AACA,YAAI,IAAI,CAAC,SAAL,KAAmB,SAAvB,EAAkC;AAChC,oBAAU,CAAC,CAAD,CAAV,GAAgB,CAAC,CAAD,EAAI,IAAI,CAAC,SAAL,GAAiB,IAArB,CAAhB;AACD;;AACD,YAAI,CAAC,UAAL,GAAkB,UAAlB;AAEA,YAAI,CAAC,MAAL,GAAc,IAAI,CAAC,IAAnB;AACD;;AACD;;AACF,SAAK,OAAL;AACE,UAAI,QAAQ,CAAC,IAAT,CAAc,MAAd,GAAuB,CAA3B,EAA8B;AAC5B,YAAM,IAAI,GAAG,QAAQ,CAAC,IAAT,CAAc,CAAd,CAAb;AACA,YAAM,UAAU,GAAG,EAAnB;AACA,YAAI,WAAW,GAAG,CAAlB;AACA,YAAI,gBAAc,GAAG,EAArB;;AACA,YAAI,OAAO,CAAC,OAAR,KAAoB,SAApB,IAAiC,OAAO,CAAC,OAAR,CAAgB,MAAhB,GAAyB,CAA9D,EAAiE;AAC/D,0BAAc,GAAG,4EAAoB,CAAC,OAAD,EAAU,QAAV,CAArC;AACA,qBAAW,GAAG,gBAAc,CAAC,MAA7B;AACD,SAHD,MAGO;AACL,qBAAW,GAAG,QAAQ,CAAC,IAAT,CAAc,MAA5B;AACD;;AACD,YAAI,IAAI,CAAC,SAAL,KAAmB,SAAvB,EAAkC;AAChC,oBAAU,CAAC,CAAD,CAAV,GAAgB,CAAC,WAAD,EAAc,IAAI,CAAC,SAAL,GAAiB,IAA/B,CAAhB;AACD;;AACD,YAAI,CAAC,UAAL,GAAkB,UAAlB;AAEA,YAAI,CAAC,OAAL,GAAe,SAAf;AACA,YAAI,CAAC,IAAL,GAAY,SAAZ;AACA,YAAI,CAAC,MAAL,GAAc,SAAd;AACA,YAAI,CAAC,aAAL,GAAqB,SAArB;AACA,YAAI,CAAC,OAAL,GAAe,SAAf;AACA,YAAI,CAAC,MAAL,GAAc,aAAd;;AACA,YAAI,OAAO,CAAC,aAAZ,EAA2B;AACzB,cAAI,CAAC,MAAL,GAAc,OAAO,CAAC,aAAtB;AACD;;AACD,gBAAQ,CAAC,IAAT,GAAgB,CAAC,IAAD,CAAhB;AACD;;AACD;AAvDJ;;AAyDA,SAAO,QAAP;AACD;;AAQD,SAAS,oBAAT,CAA8B,OAA9B,EAAuC,SAAvC,EAAgD;AAC9C,MAAM,QAAQ,GAAG,mEAAoB,CAAC,OAAD,EAAU,SAAV,CAArC;;AAEA,MAAI,QAAQ,CAAC,IAAT,CAAc,MAAd,KAAyB,SAA7B,EAAwC;AACtC,QAAM,IAAI,GAAG,QAAQ,CAAC,IAAtB;AACA,YAAQ,CAAC,IAAT,GAAgB,EAAhB;AACA,YAAQ,CAAC,IAAT,CAAc,IAAd,CAAmB,IAAnB;AACD;;AAED,MAAM,OAAO,GAAG,EAAhB;;AACA,OAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,QAAQ,CAAC,IAAT,CAAc,MAAlC,EAA0C,CAAC,EAA3C,EAA+C;AAE7C,QAAI,QAAQ,GAAG,IAAf;AAEA,QAAM,IAAI,GAAG,IAAI,CAAC,KAAL,CAAW,IAAI,CAAC,SAAL,CAAe,QAAQ,CAAC,IAAT,CAAc,CAAd,CAAf,CAAX,CAAb;AAEA,QAAI,CAAC,UAAL,GAAkB,EAAlB;AAEA,QAAI,CAAC,IAAL,GAAY,MAAZ;AAGA,QAAM,OAAO,GAAG,IAAI,CAAC,OAArB;;AACA,QAAI,IAAI,CAAC,OAAL,KAAiB,SAArB,EAAgC;AAC9B,UAAI,CAAC,OAAL,GAAe,YAAf;AACD;;AAED,QAAI,OAAO,CAAC,OAAR,KAAoB,SAAxB,EAAmC;AACjC,UAAI,OAAO,CAAC,OAAR,CAAgB,MAAhB,KAA2B,SAA/B,EAA0C;AACxC,aAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,OAAO,CAAC,OAAR,CAAgB,MAApC,EAA4C,CAAC,EAA7C,EAAiD;AAC/C,cAAM,OAAO,GAAG,OAAO,CAAC,OAAR,CAAgB,CAAhB,CAAhB;;AACA,kBAAQ,OAAO,CAAC,UAAhB;AACE,iBAAK,OAAL;AAEE,kBAAI;AACF,oBAAM,KAAK,GAAG,OAAO,CAAC,gBAAtB;AACA,oBAAM,EAAE,GAAG,IAAI,MAAJ,CAAW,OAAO,CAAC,WAAnB,EAAgC,KAAhC,CAAX;;AACA,oBAAI,EAAE,CAAC,IAAH,CAAQ,IAAI,CAAC,IAAb,CAAJ,EAAwB;AAGtB,yBAAO,CAAC,aAAR,GAAwB,IAAxB;AACD,iBAJD,MAIO;AACL,0BAAQ,GAAG,KAAX;AACD;AACF,eAVD,CAUE,OAAO,GAAP,EAAY;AACZ,uBAAO,CAAC,aAAR,GAAwB,4BAAxB;AAEA;AACD;;AACD;;AACF,iBAAK,OAAL;AACE,kBAAI,IAAI,CAAC,cAAL,CAAoB,OAAO,CAAC,eAA5B,CAAJ,EAAkD;AAChD,oBAAM,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,eAAT,CAArB;;AACA,oBAAI,QAAQ,KAAK,OAAO,CAAC,wBAAzB,EAAmD;AACjD,0BAAQ,GAAG,KAAX;AACD;AACF,eALD,MAKO;AAEL,wBAAQ,GAAG,KAAX;AACD;;AACD;AA7BJ;AA+BD;AACF;AACF;;AAED,QAAI,QAAJ,EAAc;AAEZ,UAAM,KAAK,GAAG;AACZ,YAAI,EAAE,MADM;AAEZ,kBAAU,EAAE,CAAC,IAAD;AAFA,OAAd;AAIA,aAAO,CAAC,IAAR,CAAa,KAAb;AACD;AACF;;AACD,UAAQ,CAAC,IAAT,GAAgB,OAAhB;AACA,SAAO,QAAP;AACD;;AAOD,SAAS,gCAAT,CAA0C,OAA1C,EAAmD,SAAnD,EAA4D;AAC1D,MAAM,QAAQ,GAAG,mEAAoB,CAAC,OAAD,EAAU,SAAV,CAArC;;AAUA,OAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,QAAQ,CAAC,IAAT,CAAc,MAAlC,EAA0C,CAAC,EAA3C,EAA+C;AAC7C,QAAM,OAAO,GAAG,QAAQ,CAAC,IAAT,CAAc,CAAd,CAAhB;AACA,QAAM,UAAU,GAAG,EAAnB;AACA,QAAI,iBAAiB,GAAG,CAAxB;;AACA,QAAI,OAAO,CAAC,cAAR,KAA2B,SAA/B,EAA0C;AACxC,uBAAiB,GAAG,OAAO,CAAC,cAAR,GAAyB,KAAK,OAAO,CAAC,OAAR,CAAgB,MAAlE;AACD;;AAED,QAAI,OAAO,CAAC,OAAR,KAAoB,SAAxB,EAAmC;AACjC,WAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,OAAO,CAAC,OAAR,CAAgB,MAApC,EAA4C,CAAC,EAA7C,EAAiD;AAC/C,kBAAU,CAAC,CAAD,CAAV,GAAgB,CAAC,OAAO,CAAC,OAAR,CAAgB,CAAhB,CAAD,EAAqB,CAAC,iBAAiB,GAAG,KAAK,CAA1B,IAA+B,IAApD,CAAhB;AACD;AACF;;AACD,WAAO,CAAC,UAAR,GAAqB,UAArB;AAEA,WAAO,CAAC,MAAR,GAAiB,SAAjB;;AACA,QAAI,OAAO,CAAC,IAAR,KAAiB,SAArB,EAAgC;AAC9B,aAAO,CAAC,MAAR,GAAiB,OAAO,CAAC,IAAzB;AACD;;AACD,QAAI,OAAO,CAAC,KAAR,KAAkB,SAAtB,EAAiC;AAC/B,aAAO,CAAC,MAAR,GAAiB,OAAO,CAAC,KAAzB;AACD;AACF;;AACD,SAAO,QAAP;AACD;;AAiBD,SAAS,iCAAT,CAA2C,OAA3C,EAAoD,SAApD,EAA6D;AAC3D,MAAM,QAAQ,GAAG,mEAAoB,CAAC,OAAD,EAAU,SAAV,CAArC;AACD;;AA0BD,SAAS,yBAAT,CAAmC,OAAnC,EAA4C,SAA5C,EAAqD;AACnD,MAAM,QAAQ,GAAG,mEAAoB,CAAC,OAAD,EAAU,SAAV,CAArC;AAEA,MAAM,YAAY,GAAG,EAArB;;AACA,OAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,QAAQ,CAAC,IAAT,CAAc,MAAlC,EAA0C,CAAC,EAA3C,EAA+C;AAC7C,QAAM,OAAO,GAAG,QAAQ,CAAC,IAAT,CAAc,CAAd,CAAhB;AACA,QAAM,UAAU,GAAG,EAAnB;;AAEA,QAAI,OAAO,CAAC,KAAR,CAAc,MAAd,KAAyB,SAA7B,EAAwC;AACtC,UAAM,IAAI,GAAG;AACX,iBAAS,EAAE,OAAO,CAAC,KAAR,CAAc,MAAd,GAAuB,IADvB;AAEX,kBAAU,EAAE,OAAO,CAAC,KAAR,CAAc,IAFf;AAGX,cAAM,EAAE,OAAO,CAAC,MAHL;AAIX,aAAK,EAAE,OAAO,CAAC,KAJJ;AAKX,mBAAW,EAAE,OAAO,CAAC,WALV;AAMX,6BAAqB,EAAE,OAAO,CAAC,qBANpB;AAOX,cAAM,EAAE,OAAO,CAAC,MAPL;AAQX,UAAE,EAAE,OAAO,CAAC,EARD;AASX,yBAAiB,EAAE,OAAO,CAAC,iBAAR,GAA4B,IATpC;AAUX,eAAO,EAAE,OAAO,CAAC,OAAR,GAAkB,IAVhB;AAWX,gBAAQ,EAAE,OAAO,CAAC,QAXP;AAYX,mBAAW,EAAE,OAAO,CAAC;AAZV,OAAb;;AAcA,UAAI;AACF,YAAI,CAAC,KAAL,CAAW,MAAX,GAAoB,IAAI,CAAC,KAAL,CAAW,MAAX,GAAoB,IAAxC;AACA,YAAI,CAAC,KAAL,CAAW,QAAX,GAAsB,IAAI,CAAC,KAAL,CAAW,QAAX,GAAsB,IAA5C;AACD,OAHD,CAGE,OAAO,GAAP,EAAY,CAEb;;AACD,gBAAU,CAAC,IAAX,CAAgB,IAAhB;AACA,aAAO,CAAC,UAAR,GAAqB,UAArB;AACA,aAAO,OAAO,CAAC,KAAf;AACA,aAAO,OAAO,CAAC,MAAf;AACA,aAAO,CAAC,IAAR,GAAe,MAAf;;AACA,UAAI,CAAC,OAAO,CAAC,QAAb,EAAuB;AACrB,oBAAY,CAAC,IAAb,CAAkB,OAAlB;AACD;;AACD,UAAI,OAAO,CAAC,QAAR,IAAoB,CAAC,OAAO,CAAC,kBAAjC,EAAqD;AACnD,oBAAY,CAAC,IAAb,CAAkB,OAAlB;AACD;AACF;AACF;;AACD,UAAQ,CAAC,IAAT,GAAgB,YAAhB;AAGA,SAAO,QAAP;AACD;;AAID,SAAS,gCAAT,CAA0C,OAA1C,EAAmD,SAAnD,EAA4D;AAC1D,MAAM,QAAQ,GAAG,mEAAoB,CAAC,OAAD,EAAU,SAAV,CAArC;AACD;;;;;;;;;;;;;;AC/SD;AAAA;AAAA,SAAS,oBAAT,CAA8B,OAA9B,EAAuC,QAAvC,EAA+C;AAC7C,MAAM,cAAc,GAAG,EAAvB;;AACA,OAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,OAAO,CAAC,OAAR,CAAgB,MAApC,EAA4C,CAAC,EAA7C,EAAiD;AAC/C,QAAM,OAAO,GAAG,OAAO,CAAC,OAAR,CAAgB,CAAhB,CAAhB;;AACA,YAAQ,OAAO,CAAC,UAAhB;AACE,WAAK,OAAL;AACE,aAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,QAAQ,CAAC,IAAT,CAAc,MAAlC,EAA0C,CAAC,EAA3C,EAA+C;AAC7C,cAAI,QAAQ,CAAC,IAAT,CAAc,CAAd,EAAiB,cAAjB,CAAgC,OAAO,CAAC,eAAxC,CAAJ,EAA8D;AAC5D,gBAAM,QAAQ,GAAG,QAAQ,CAAC,IAAT,CAAc,CAAd,EAAiB,OAAO,CAAC,eAAzB,CAAjB;;AACA,gBAAI,QAAQ,KAAK,OAAO,CAAC,wBAAzB,EAAmD;AAEjD,kBAAI,cAAc,CAAC,OAAf,CAAuB,QAAQ,CAAC,IAAT,CAAc,CAAd,EAAiB,IAAxC,MAAkD,CAAC,CAAvD,EAA0D;AACxD,8BAAc,CAAC,IAAf,CAAoB,QAAQ,CAAC,IAAT,CAAc,CAAd,EAAiB,IAArC;AACD;AACF;AACF;AACF;;AACD;;AACF,WAAK,OAAL;AAEE,aAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,QAAQ,CAAC,IAAT,CAAc,MAAlC,EAA0C,CAAC,EAA3C,EAA+C;AAC7C,cAAI,OAAO,CAAC,KAAR,KAAkB,QAAQ,CAAC,IAAT,CAAc,CAAd,EAAiB,IAAvC,EAA6C;AAE3C,gBAAI,cAAc,CAAC,OAAf,CAAuB,QAAQ,CAAC,IAAT,CAAc,CAAd,EAAiB,IAAxC,MAAkD,CAAC,CAAvD,EAA0D;AACxD,4BAAc,CAAC,IAAf,CAAoB,QAAQ,CAAC,IAAT,CAAc,CAAd,EAAiB,IAArC;AACD;AACF;AACF;;AACD;;AACF,WAAK,OAAL;AAEE,YAAI;AACF,cAAM,KAAK,GAAG,OAAO,CAAC,gBAAtB;AACA,cAAM,EAAE,GAAG,IAAI,MAAJ,CAAW,OAAO,CAAC,WAAnB,EAAgC,KAAhC,CAAX;;AAEA,eAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,QAAQ,CAAC,IAAT,CAAc,MAAlC,EAA0C,CAAC,EAA3C,EAA+C;AAC7C,gBAAI,EAAE,CAAC,IAAH,CAAQ,QAAQ,CAAC,IAAT,CAAc,CAAd,EAAiB,IAAzB,CAAJ,EAAoC;AAElC,kBAAI,cAAc,CAAC,OAAf,CAAuB,QAAQ,CAAC,IAAT,CAAc,CAAd,EAAiB,IAAxC,MAAkD,CAAC,CAAvD,EAA0D;AACxD,8BAAc,CAAC,IAAf,CAAoB,QAAQ,CAAC,IAAT,CAAc,CAAd,EAAiB,IAArC;AACD;AACF;AACF;AACF,SAZD,CAYE,OAAO,GAAP,EAAY;AACZ,iBAAO,CAAC,aAAR,GAAwB,4BAAxB;AACD;;AACD;AA1CJ;AA4CD;;AACD,SAAO,cAAP;AACD;;;;;;;;;;;;;;AC9CD;AAAA;AAAA;AAAA;AAAA,SAAS,cAAT,CAAwB,UAAxB,EAAoC,WAApC,EAA+C;AAC7C,MAAM,IAAI,GAAG,EAAb;AACA,MAAI,YAAY,GAAG,UAAnB;;AAEA,MAAI,WAAW,CAAC,MAAhB,EAAwB;AACtB,SAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,WAAW,CAAC,MAAhC,EAAwC,CAAC,EAAzC,EAA6C;AAC3C,UAAM,WAAW,GAAG,WAAW,CAAC,CAAD,CAA/B;AACA,kBAAY,GAAG,cAAc,WAA7B;AACA,UAAI,CAAC,IAAL,CAAU,YAAV;AACD;AACF;;AACD,MAAI,IAAI,CAAC,MAAL,KAAgB,CAApB,EAAuB;AACrB,QAAI,CAAC,IAAL,CAAU,YAAV;AACD;;AACD,MAAI,CAAC,IAAL,CAAU,SAAV;AACA,MAAI,CAAC,IAAL,CAAU,UAAV;AAEA,SAAO,IAAP;AACD;;AAOD,SAAS,mBAAT,CAA6B,WAA7B,EAAwC;AACtC,MAAM,IAAI,GAAG,EAAb;;AAEA,MAAI,WAAW,CAAC,MAAhB,EAAwB;AACtB,SAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,WAAW,CAAC,MAAhC,EAAwC,CAAC,EAAzC,EAA6C;AAC3C,UAAM,WAAW,GAAG,WAAW,CAAC,CAAD,CAA/B;AACA,UAAM,UAAU,GAAG,cAAc,WAAjC;AACA,UAAI,CAAC,IAAL,CAAU,UAAV;AACA,UAAM,SAAS,GAAG,aAAa,WAA/B;AACA,UAAI,CAAC,IAAL,CAAU,SAAV;AACD;AACF;;AACD,MAAI,IAAI,CAAC,MAAL,KAAgB,CAApB,EAAuB;AACrB,QAAI,CAAC,IAAL,CAAU,UAAV;AACA,QAAI,CAAC,IAAL,CAAU,SAAV;AACD;;AACD,SAAO,IAAP;AACD;;AAOD,SAAS,oBAAT,CAA8B,WAA9B,EAAyC;AACvC,MAAM,IAAI,GAAG,EAAb;AACA,MAAI,YAAY,GAAG,UAAnB;;AAEA,MAAI,WAAW,CAAC,MAAhB,EAAwB;AACtB,SAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,WAAW,CAAC,MAAhC,EAAwC,CAAC,EAAzC,EAA6C;AAC3C,UAAM,WAAW,GAAG,WAAW,CAAC,CAAD,CAA/B;AACA,kBAAY,GAAG,cAAc,WAAd,GAA4B,UAA3C;AACA,UAAI,CAAC,IAAL,CAAU,YAAV;AACD;AACF;;AACD,MAAI,IAAI,CAAC,MAAL,KAAgB,CAApB,EAAuB;AACrB,QAAI,CAAC,IAAL,CAAU,YAAV;AACD;;AACD,SAAO,IAAP;AACD;;;;;;;;;;;;;;ACjED;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;AAMA,SAAS,yBAAT,CAAmC,OAAnC,EAA4C,SAA5C,EAAqD;AACnD,MAAM,QAAQ,GAAG,mEAAoB,CAAC,OAAD,EAAU,SAAV,CAArC;;AAQA,MAAI,QAAQ,CAAC,IAAT,CAAc,MAAd,KAAyB,SAA7B,EAAwC;AACtC,QAAM,UAAU,GAAG,QAAQ,CAAC,IAA5B;AACA,YAAQ,CAAC,IAAT,GAAgB,EAAhB;AACA,YAAQ,CAAC,IAAT,CAAc,IAAd,CAAmB,UAAnB;AACD;;AACD,MAAM,YAAY,GAAG,EAArB;;AACA,OAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,QAAQ,CAAC,IAAT,CAAc,MAAlC,EAA0C,CAAC,EAA3C,EAA+C;AAC7C,QAAM,OAAO,GAAG,QAAQ,CAAC,IAAT,CAAc,CAAd,CAAhB;AACA,QAAM,UAAU,GAAG,EAAnB;AACA,QAAI,iBAAiB,GAAG,CAAxB;;AAEA,QAAI,OAAO,CAAC,SAAR,KAAsB,SAA1B,EAAqC;AACnC,uBAAiB,GAAG,OAAO,CAAC,SAAR,GAAoB,KAAK,OAAO,CAAC,KAAR,CAAc,OAAd,CAAsB,MAAnE;AACD;;AACD,QAAI,OAAO,CAAC,cAAR,KAA2B,SAA/B,EAA0C;AACxC,uBAAiB,GAAG,OAAO,CAAC,cAAR,GAAyB,KAAK,OAAO,CAAC,OAAR,CAAgB,MAAlE;AACD;;AAED,SAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,OAAO,CAAC,KAAR,CAAc,OAAd,CAAsB,MAA1C,EAAkD,CAAC,EAAnD,EAAuD;AACrD,gBAAU,CAAC,CAAD,CAAV,GAAgB,CAAC,OAAO,CAAC,KAAR,CAAc,OAAd,CAAsB,CAAtB,CAAD,EAA2B,CAAC,iBAAiB,GAAG,KAAK,CAA1B,IAA+B,IAA1D,CAAhB;AACD;;AACD,WAAO,CAAC,UAAR,GAAqB,UAArB;AAEA,WAAO,CAAC,MAAR,GAAiB,OAAO,CAAC,MAAR,CAAe,IAAhC;AAQA,WAAO,CAAC,UAAR,GAAqB,OAAO,CAAC,MAAR,CAAe,IAApC;;AACA,QAAI,yEAAkB,CAAC,OAAD,EAAU,OAAV,CAAtB,EAA0C;AACxC,UAAI,CAAC,OAAO,CAAC,QAAb,EAAuB;AACrB,oBAAY,CAAC,IAAb,CAAkB,OAAlB;AACD;;AACD,UAAI,OAAO,CAAC,QAAR,IAAoB,CAAC,OAAO,CAAC,kBAAjC,EAAqD;AACnD,oBAAY,CAAC,IAAb,CAAkB,OAAlB;AACD;AACF;AACF;;AACD,MAAM,WAAW,GAAG;AAAE,QAAI,EAAE;AAAR,GAApB;AAEA,SAAO,WAAP;AACD;;AAED,SAAS,mBAAT,CAA6B,OAA7B,EAAsC,SAAtC,EAA+C;AAC7C,MAAM,QAAQ,GAAG,mEAAoB,CAAC,OAAD,EAAU,SAAV,CAArC;AAIA,MAAM,YAAY,GAAG,EAArB;;AACA,OAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,QAAQ,CAAC,IAAT,CAAc,MAAlC,EAA0C,CAAC,EAA3C,EAA+C;AAC7C,QAAM,OAAO,GAAG,QAAQ,CAAC,IAAT,CAAc,CAAd,CAAhB;AACA,QAAM,UAAU,GAAG,EAAnB;;AAEA,QAAI,OAAO,CAAC,KAAR,CAAc,MAAd,KAAyB,SAAzB,IAAsC,yEAAkB,CAAC,OAAD,EAAU,OAAV,CAA5D,EAAgF;AAC9E,UAAI,eAAe,GAAG,OAAO,CAAC,MAAR,CAAe,IAArC;AAEA,UAAM,KAAK,GAAG,OAAO,CAAC,MAAR,CAAe,IAAf,CAAoB,KAApB,CAA0B,GAA1B,CAAd;;AACA,UAAI,KAAK,CAAC,MAAN,GAAe,CAAnB,EAAsB;AACpB,uBAAe,GAAG,KAAK,CAAC,CAAD,CAAvB;AACD;;AACD,aAAO,CAAC,MAAR,CAAe,iBAAf,GAAmC,eAAnC;AAEA,UAAI,UAAU,GAAG,SAAjB;;AACA,UAAI,OAAO,CAAC,KAAR,KAAkB,SAAlB,IAA+B,OAAO,CAAC,KAAR,CAAc,MAAd,KAAyB,SAA5D,EAAuE;AACrE,gBAAQ,OAAO,CAAC,KAAR,CAAc,MAAtB;AACE,eAAK,CAAL;AACE,sBAAU,GAAG,IAAb;AACA;;AACF,eAAK,CAAL;AACE,sBAAU,GAAG,SAAb;AACA;;AACF,eAAK,CAAL;AACE,sBAAU,GAAG,UAAb;AACA;;AACF,eAAK,CAAL;AACE,sBAAU,GAAG,SAAb;AACA;;AACF;AACE,sBAAU,GAAG,SAAb;AACA;AAfJ;AAiBD;;AACD,aAAO,CAAC,KAAR,CAAc,WAAd,GAA4B,UAA5B;AACA,UAAM,IAAI,GAAG;AACX,iBAAS,EAAE,OAAO,CAAC,KAAR,CAAc,MAAd,GAAuB,IADvB;AAEX,kBAAU,EAAE,OAAO,CAAC,KAAR,CAAc,IAFf;AAGX,cAAM,EAAE,OAAO,CAAC,MAHL;AAIX,aAAK,EAAE,OAAO,CAAC,KAJJ;AAKX,mBAAW,EAAE,OAAO,CAAC,WALV;AAMX,6BAAqB,EAAE,OAAO,CAAC,qBANpB;AAOX,cAAM,EAAE,OAAO,CAAC,MAPL;AAQX,UAAE,EAAE,OAAO,CAAC,EARD;AASX,yBAAiB,EAAE,OAAO,CAAC,iBAAR,GAA4B,IATpC;AAUX,eAAO,EAAE,OAAO,CAAC,OAAR,GAAkB,IAVhB;AAWX,gBAAQ,EAAE,OAAO,CAAC,QAXP;AAYX,mBAAW,EAAE,OAAO,CAAC;AAZV,OAAb;;AAcA,UAAI;AACF,YAAI,CAAC,KAAL,CAAW,MAAX,GAAoB,IAAI,CAAC,KAAL,CAAW,MAAX,GAAoB,IAAxC;AACA,YAAI,CAAC,KAAL,CAAW,QAAX,GAAsB,IAAI,CAAC,KAAL,CAAW,QAAX,GAAsB,IAA5C;AACD,OAHD,CAGE,OAAO,GAAP,EAAY,CAEb;;AACD,gBAAU,CAAC,IAAX,CAAgB,IAAhB;AACA,aAAO,CAAC,UAAR,GAAqB,UAArB;AACA,aAAO,OAAO,CAAC,KAAf;AACA,aAAO,OAAO,CAAC,MAAf;AACA,aAAO,CAAC,IAAR,GAAe,MAAf;;AACA,UAAI,CAAC,OAAO,CAAC,QAAb,EAAuB;AACrB,oBAAY,CAAC,IAAb,CAAkB,OAAlB;AACD;;AACD,UAAI,OAAO,CAAC,QAAR,IAAoB,CAAC,OAAO,CAAC,kBAAjC,EAAqD;AACnD,oBAAY,CAAC,IAAb,CAAkB,OAAlB;AACD;AACF;AACF;;AACD,MAAM,WAAW,GAAG;AAAE,QAAI,EAAE;AAAR,GAApB;AAIA,SAAO,WAAP;AACD;;AAmBD,SAAS,+BAAT,CAAyC,OAAzC,EAAkD,SAAlD,EAA2D;AACzD,MAAM,QAAQ,GAAG,mEAAoB,CAAC,OAAD,EAAU,SAAV,CAArC;AAEA,MAAI,SAAS,GAAG,CAAhB;;AACA,MAAI;AACF,aAAS,GAAG,QAAQ,CAAC,IAAT,CAAc,CAAd,EAAiB,KAAjB,CAAuB,MAAvB,GAAgC,IAA5C;AACD,GAFD,CAEE,OAAO,GAAP,EAAY,CAEb;;AACD,MAAM,YAAY,GAAG;AACnB,UAAM,EAAE,WADW;AAEnB,aAAS,EAAE,SAFQ;AAGnB,aAAS,EAAE,CAHQ;AAInB,eAAW,EAAE,CAJM;AAKnB,sBAAkB,EAAE,CALD;AAMnB,qBAAiB,EAAE,CANA;AAOnB,oBAAgB,EAAE,CAPC;AAQnB,4BAAwB,EAAE,CARP;AASnB,qBAAiB,EAAE,CATA;AAUnB,6BAAyB,EAAE,CAVR;AAWnB,oBAAgB,EAAE,CAXC;AAYnB,4BAAwB,EAAE;AAZP,GAArB;AAcA,MAAM,WAAW,GAAG,EAApB;AACA,MAAM,UAAU,GAAG,EAAnB;;AACA,OAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,QAAQ,CAAC,IAAT,CAAc,MAAlC,EAA0C,CAAC,EAA3C,EAA+C;AAC7C,QAAM,OAAO,GAAG,QAAQ,CAAC,IAAT,CAAc,CAAd,CAAhB;;AACA,QAAI,OAAO,CAAC,KAAR,CAAc,MAAd,KAAyB,SAA7B,EAAwC;AACtC,UAAI,OAAO,CAAC,KAAR,KAAkB,SAAlB,IAA+B,OAAO,CAAC,KAAR,CAAc,MAAd,KAAyB,SAAxD,IAAqE,yEAAkB,CAAC,OAAD,EAAU,OAAV,CAA3F,EAA+G;AAC7G,oBAAY,CAAC,SAAb,IAA0B,CAA1B;;AACA,gBAAQ,OAAO,CAAC,KAAR,CAAc,MAAtB;AACE,eAAK,CAAL;AACE,wBAAY,CAAC,gBAAb,IAAiC,CAAjC;;AACA,gBAAI,OAAO,CAAC,QAAZ,EAAsB;AACpB,0BAAY,CAAC,wBAAb,IAAyC,CAAzC;AACA,0BAAY,CAAC,WAAb,IAA4B,CAA5B;AACD;;AACD;;AACF,eAAK,CAAL;AACE,wBAAY,CAAC,iBAAb,IAAkC,CAAlC;;AACA,gBAAI,OAAO,CAAC,QAAZ,EAAsB;AACpB,0BAAY,CAAC,yBAAb,IAA0C,CAA1C;AACA,0BAAY,CAAC,WAAb,IAA4B,CAA5B;AACD;;AACD;;AACF;AACE,wBAAY,CAAC,gBAAb,IAAiC,CAAjC;;AACA,gBAAI,OAAO,CAAC,QAAZ,EAAsB;AACpB,0BAAY,CAAC,wBAAb,IAAyC,CAAzC;AACA,0BAAY,CAAC,WAAb,IAA4B,CAA5B;AACD;;AACD;AArBJ;AAuBD;;AAED,UAAI,WAAW,CAAC,OAAZ,CAAoB,OAAO,CAAC,MAAR,CAAe,IAAnC,IAA2C,CAA/C,EAAkD;AAChD,mBAAW,CAAC,IAAZ,CAAiB,OAAO,CAAC,MAAR,CAAe,IAAhC;AACD;;AAED,UAAI,UAAU,CAAC,OAAX,CAAmB,OAAO,CAAC,KAAR,CAAc,IAAjC,IAAyC,CAA7C,EAAgD;AAC9C,kBAAU,CAAC,IAAX,CAAgB,OAAO,CAAC,KAAR,CAAc,IAA9B;AACD;;AAED,WAAK,IAAI,GAAC,GAAG,CAAb,EAAgB,GAAC,GAAG,OAAO,CAAC,WAAR,CAAoB,MAAxC,EAAgD,GAAC,EAAjD,EAAqD;AACnD,YAAI,OAAO,CAAC,WAAR,CAAoB,GAApB,EAAuB,OAAvB,CAA+B,GAA/B,KAAuC,CAA3C,EAA8C;AAC5C,sBAAY,CAAC,kBAAb,IAAmC,CAAnC;AACD,SAFD,MAEO;AACL,sBAAY,CAAC,iBAAb,IAAkC,CAAlC;AACD;AACF;AACF;AACF;;AACD,cAAY,CAAC,kBAAb,GAAkC,WAAW,CAAC,MAA9C;AACA,cAAY,CAAC,iBAAb,GAAiC,UAAU,CAAC,MAA5C;AACA,UAAQ,CAAC,IAAT,GAAgB,CACd;AACE,UAAM,EAAE,WADV;AAEE,aAAS,EAAE,SAFb;AAGE,QAAI,EAAE,MAHR;AAIE,cAAU,EAAE,CAAC,YAAD;AAJd,GADc,CAAhB;AAYA,SAAO,QAAP;AACD;;AAQD,SAAS,2BAAT,CAAqC,OAArC,EAA8C,SAA9C,EAAuD;AAErD,MAAM,QAAQ,GAAG,mEAAoB,CAAC,OAAD,EAAU,SAAV,CAArC;AACA,MAAM,WAAW,GAAG;AAAE,QAAI,EAAE;AAAR,GAApB;AAEA,MAAI,SAAS,GAAG,CAAhB;;AACA,MAAI;AACF,aAAS,GAAG,QAAQ,CAAC,IAAT,CAAc,CAAd,EAAiB,KAAjB,CAAuB,MAAvB,GAAgC,IAA5C;AACD,GAFD,CAEE,OAAO,GAAP,EAAY,CAEb;;AACD,MAAM,YAAY,GAAG;AACnB,UAAM,EAAE,WADW;AAEnB,aAAS,EAAE,SAFQ;AAGnB,aAAS,EAAE,GAHQ;AAInB,eAAW,EAAE,GAJM;AAKnB,sBAAkB,EAAE,GALD;AAMnB,qBAAiB,EAAE,GANA;AAOnB,oBAAgB,EAAE,GAPC;AAQnB,4BAAwB,EAAE,GARP;AASnB,qBAAiB,EAAE,GATA;AAUnB,6BAAyB,EAAE,GAVR;AAWnB,oBAAgB,EAAE,GAXC;AAYnB,4BAAwB,EAAE;AAZP,GAArB;AAcA,MAAM,WAAW,GAAG,EAApB;AACA,MAAM,UAAU,GAAG,EAAnB;;AACA,OAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,QAAQ,CAAC,IAAT,CAAc,MAAlC,EAA0C,CAAC,EAA3C,EAA+C;AAC7C,QAAM,OAAO,GAAG,QAAQ,CAAC,IAAT,CAAc,CAAd,CAAhB;;AACA,QAAI,OAAO,CAAC,KAAR,CAAc,MAAd,KAAyB,SAA7B,EAAwC;AACtC,UAAI,OAAO,CAAC,KAAR,KAAkB,SAAlB,IAA+B,OAAO,CAAC,KAAR,CAAc,MAAd,KAAyB,SAAxD,IAAqE,yEAAkB,CAAC,OAAD,EAAU,OAAV,CAA3F,EAA+G;AAC7G,oBAAY,CAAC,SAAb,IAA0B,GAA1B;;AACA,gBAAQ,OAAO,CAAC,KAAR,CAAc,MAAtB;AACE,eAAK,CAAL;AACE,wBAAY,CAAC,gBAAb,IAAiC,GAAjC;;AACA,gBAAI,OAAO,CAAC,QAAZ,EAAsB;AACpB,0BAAY,CAAC,wBAAb,IAAyC,GAAzC;AACA,0BAAY,CAAC,WAAb,IAA4B,GAA5B;AACD;;AACD;;AACF,eAAK,CAAL;AACE,wBAAY,CAAC,iBAAb,IAAkC,GAAlC;;AACA,gBAAI,OAAO,CAAC,QAAZ,EAAsB;AACpB,0BAAY,CAAC,yBAAb,IAA0C,GAA1C;AACA,0BAAY,CAAC,WAAb,IAA4B,GAA5B;AACD;;AACD;;AACF;AACE,wBAAY,CAAC,gBAAb,IAAiC,GAAjC;;AACA,gBAAI,OAAO,CAAC,QAAZ,EAAsB;AACpB,0BAAY,CAAC,wBAAb,IAAyC,GAAzC;AACA,0BAAY,CAAC,WAAb,IAA4B,GAA5B;AACD;;AACD;AArBJ;AAuBD;;AAED,UAAI,WAAW,CAAC,OAAZ,CAAoB,OAAO,CAAC,MAAR,CAAe,IAAnC,IAA2C,GAA/C,EAAoD;AAClD,mBAAW,CAAC,IAAZ,CAAiB,OAAO,CAAC,MAAR,CAAe,IAAhC;AACD;;AAED,UAAI,UAAU,CAAC,OAAX,CAAmB,OAAO,CAAC,KAAR,CAAc,IAAjC,IAAyC,GAA7C,EAAkD;AAChD,kBAAU,CAAC,IAAX,CAAgB,OAAO,CAAC,KAAR,CAAc,IAA9B;AACD;;AAED,WAAK,IAAI,GAAC,GAAG,CAAb,EAAgB,GAAC,GAAG,OAAO,CAAC,WAAR,CAAoB,MAAxC,EAAgD,GAAC,EAAjD,EAAqD;AACnD,YAAI,OAAO,CAAC,WAAR,CAAoB,GAApB,EAAuB,OAAvB,CAA+B,GAA/B,KAAuC,CAA3C,EAA8C;AAC5C,sBAAY,CAAC,kBAAb,IAAmC,GAAnC;AACD,SAFD,MAEO;AACL,sBAAY,CAAC,iBAAb,IAAkC,GAAlC;AACD;AACF;AACF;AACF;;AAED,MAAI,UAAU,GAAG,IAAjB;;AACA,MAAI,OAAO,CAAC,IAAR,KAAiB,SAArB,EAAgC;AAC9B,cAAU,GAAG,OAAO,CAAC,IAArB;AACD;;AACD,MAAI,OAAO,CAAC,aAAR,KAA0B,SAA9B,EAAyC;AACvC,cAAU,GAAG,OAAO,CAAC,aAArB;AACD;;AACD,aAAW,CAAC,IAAZ,GAAmB,CACjB;AACE,UAAM,EAAE,UADV;AAEE,cAAU,EAAE,CAAC,CAAC,GAAD,EAAM,SAAN,CAAD;AAFd,GADiB,CAAnB;;AAMA,UAAQ,OAAO,CAAC,eAAhB;AACE,SAAK,kBAAL;AACE,UAAI,UAAU,KAAK,IAAnB,EAAyB;AACvB,mBAAW,CAAC,IAAZ,CAAiB,CAAjB,EAAoB,MAApB,GAA6B,kBAA7B;AACD;;AACD,iBAAW,CAAC,IAAZ,CAAiB,CAAjB,EAAoB,UAApB,GAAiC,CAAC,CAAC,YAAY,CAAC,SAAd,EAAyB,SAAzB,CAAD,CAAjC;AACA;;AACF,SAAK,qBAAL;AACE,UAAI,UAAU,KAAK,IAAnB,EAAyB;AACvB,mBAAW,CAAC,IAAZ,CAAiB,CAAjB,EAAoB,MAApB,GAA6B,qBAA7B;AACD;;AACD,iBAAW,CAAC,IAAZ,CAAiB,CAAjB,EAAoB,UAApB,GAAiC,CAAC,CAAC,YAAY,CAAC,SAAb,GAAyB,YAAY,CAAC,WAAvC,EAAoD,SAApD,CAAD,CAAjC;AACA;;AACF,SAAK,gBAAL;AACE,UAAI,UAAU,KAAK,IAAnB,EAAyB;AACvB,mBAAW,CAAC,IAAZ,CAAiB,CAAjB,EAAoB,MAApB,GAA6B,uBAA7B;AACD;;AACD,iBAAW,CAAC,IAAZ,CAAiB,CAAjB,EAAoB,UAApB,GAAiC,CAAC,CAAC,YAAY,CAAC,iBAAd,EAAiC,SAAjC,CAAD,CAAjC;AACA;;AACF,SAAK,uBAAL;AACE,UAAI,UAAU,KAAK,IAAnB,EAAyB;AACvB,mBAAW,CAAC,IAAZ,CAAiB,CAAjB,EAAoB,MAApB,GAA6B,uBAA7B;AACD;;AACD,iBAAW,CAAC,IAAZ,CAAiB,CAAjB,EAAoB,UAApB,GAAiC,CAAC,CAAC,YAAY,CAAC,iBAAb,GAAiC,YAAY,CAAC,yBAA/C,EAA0E,SAA1E,CAAD,CAAjC;AACA;;AACF,SAAK,yBAAL;AACE,UAAI,UAAU,KAAK,IAAnB,EAAyB;AACvB,mBAAW,CAAC,IAAZ,CAAiB,CAAjB,EAAoB,MAApB,GAA6B,yBAA7B;AACD;;AACD,iBAAW,CAAC,IAAZ,CAAiB,CAAjB,EAAoB,UAApB,GAAiC,CAAC,CAAC,YAAY,CAAC,yBAAd,EAAyC,SAAzC,CAAD,CAAjC;AACA;;AACF,SAAK,eAAL;AACE,UAAI,UAAU,KAAK,IAAnB,EAAyB;AACvB,mBAAW,CAAC,IAAZ,CAAiB,CAAjB,EAAoB,MAApB,GAA6B,sBAA7B;AACD;;AACD,iBAAW,CAAC,IAAZ,CAAiB,CAAjB,EAAoB,UAApB,GAAiC,CAAC,CAAC,YAAY,CAAC,gBAAd,EAAgC,SAAhC,CAAD,CAAjC;AACA;;AACF,SAAK,sBAAL;AACE,UAAI,UAAU,KAAK,IAAnB,EAAyB;AACvB,mBAAW,CAAC,IAAZ,CAAiB,CAAjB,EAAoB,MAApB,GAA6B,sBAA7B;AACD;;AACD,iBAAW,CAAC,IAAZ,CAAiB,CAAjB,EAAoB,UAApB,GAAiC,CAAC,CAAC,YAAY,CAAC,gBAAb,GAAgC,YAAY,CAAC,wBAA9C,EAAwE,SAAxE,CAAD,CAAjC;AACA;;AACF,SAAK,wBAAL;AACE,UAAI,UAAU,KAAK,IAAnB,EAAyB;AACvB,mBAAW,CAAC,IAAZ,CAAiB,CAAjB,EAAoB,MAApB,GAA6B,wBAA7B;AACD;;AACD,iBAAW,CAAC,IAAZ,CAAiB,CAAjB,EAAoB,UAApB,GAAiC,CAAC,CAAC,YAAY,CAAC,wBAAd,EAAwC,SAAxC,CAAD,CAAjC;AACA;;AACF,SAAK,eAAL;AACE,UAAI,UAAU,KAAK,IAAnB,EAAyB;AACvB,mBAAW,CAAC,IAAZ,CAAiB,CAAjB,EAAoB,MAApB,GAA6B,sBAA7B;AACD;;AACD,iBAAW,CAAC,IAAZ,CAAiB,CAAjB,EAAoB,UAApB,GAAiC,CAAC,CAAC,YAAY,CAAC,gBAAd,EAAgC,SAAhC,CAAD,CAAjC;AACA;;AACF,SAAK,sBAAL;AACE,UAAI,UAAU,KAAK,IAAnB,EAAyB;AACvB,mBAAW,CAAC,IAAZ,CAAiB,CAAjB,EAAoB,MAApB,GAA6B,sBAA7B;AACD;;AACD,iBAAW,CAAC,IAAZ,CAAiB,CAAjB,EAAoB,UAApB,GAAiC,CAAC,CAAC,YAAY,CAAC,gBAAb,GAAgC,YAAY,CAAC,wBAA9C,EAAwE,SAAxE,CAAD,CAAjC;AACA;;AACF,SAAK,wBAAL;AACE,UAAI,UAAU,KAAK,IAAnB,EAAyB;AACvB,mBAAW,CAAC,IAAZ,CAAiB,CAAjB,EAAoB,MAApB,GAA6B,wBAA7B;AACD;;AACD,iBAAW,CAAC,IAAZ,CAAiB,CAAjB,EAAoB,UAApB,GAAiC,CAAC,CAAC,YAAY,CAAC,wBAAd,EAAwC,SAAxC,CAAD,CAAjC;AACA;;AACF,SAAK,gBAAL;AACE,UAAI,UAAU,KAAK,IAAnB,EAAyB;AACvB,mBAAW,CAAC,IAAZ,CAAiB,CAAjB,EAAoB,MAApB,GAA6B,uBAA7B;AACD;;AACD,iBAAW,CAAC,IAAZ,CAAiB,CAAjB,EAAoB,UAApB,GAAiC,CAAC,CAAC,YAAY,CAAC,WAAd,EAA2B,SAA3B,CAAD,CAAjC;AACA;;AACF,SAAK,wBAAL;AACE,UAAI,UAAU,KAAK,IAAnB,EAAyB;AACvB,mBAAW,CAAC,IAAZ,CAAiB,CAAjB,EAAoB,MAApB,GAA6B,wBAA7B;AACD;;AACD,iBAAW,CAAC,IAAZ,CAAiB,CAAjB,EAAoB,UAApB,GAAiC,CAAC,CAAC,YAAY,CAAC,kBAAd,EAAkC,SAAlC,CAAD,CAAjC;AACA;;AACF,SAAK,uBAAL;AACE,UAAI,UAAU,KAAK,IAAnB,EAAyB;AACvB,mBAAW,CAAC,IAAZ,CAAiB,CAAjB,EAAoB,MAApB,GAA6B,uBAA7B;AACD;;AACD,iBAAW,CAAC,IAAZ,CAAiB,CAAjB,EAAoB,UAApB,GAAiC,CAAC,CAAC,YAAY,CAAC,iBAAd,EAAiC,SAAjC,CAAD,CAAjC;AACA;;AACF;AACE,UAAI,UAAU,KAAK,IAAnB,EAAyB;AACvB,mBAAW,CAAC,IAAZ,CAAiB,CAAjB,EAAoB,MAApB,GAA6B,kBAA7B;AACD;;AACD,iBAAW,CAAC,IAAZ,CAAiB,CAAjB,EAAoB,UAApB,GAAiC,CAAC,CAAC,YAAY,CAAC,SAAd,EAAyB,SAAzB,CAAD,CAAjC;AACA;AA1FJ;;AA8FA,SAAO,WAAP;AACD;;;;;;;;;;;;;;AC/aD;AAAA;AAAA,SAAS,kBAAT,CAA4B,MAA5B,EAAoC,OAApC,EAA2C;AACzC,MAAI,MAAM,CAAC,OAAP,KAAmB,SAAvB,EAAkC;AAChC,WAAO,IAAP;AACD;;AACD,MAAI,MAAM,CAAC,OAAP,CAAe,MAAf,KAA0B,CAA9B,EAAiC;AAC/B,WAAO,IAAP;AACD;;AACD,OAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,MAAM,CAAC,OAAP,CAAe,MAAnC,EAA2C,CAAC,EAA5C,EAAgD;AAC9C,QAAM,OAAO,GAAG,MAAM,CAAC,OAAP,CAAe,CAAf,CAAhB;;AACA,YAAQ,OAAO,CAAC,UAAhB;AACE,WAAK,OAAL;AAGE,YAAI,OAAO,CAAC,MAAR,CAAe,cAAf,CAA8B,OAAO,CAAC,eAAtC,CAAJ,EAA4D;AAE1D,cAAM,IAAI,GAAG,OAAO,CAAC,MAAR,CAAe,OAAO,CAAC,eAAvB,CAAb;;AACA,cAAI,IAAI,KAAK,OAAO,CAAC,wBAArB,EAA+C;AAC7C,mBAAO,IAAP;AACD;AACF;;AACD;AAXJ;AAaD;;AACD,SAAO,KAAP;AACD;;;;;;;;;;;;;;AC7BD;AAAA;AAAA,SAAS,aAAT,CAAuB,UAAvB,EAAmC,WAAnC,EAA8C;AAE5C,MAAM,IAAI,GAAG,EAAb;AACA,MAAI,YAAY,GAAG,SAAnB;AACA,MAAI,WAAW,GAAG,IAAlB;AACA,MAAI,UAAU,GAAG,IAAjB;AACA,MAAM,eAAe,GAAG,IAAxB;;AACA,MAAI,WAAW,CAAC,MAAhB,EAAwB;AACtB,SAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,WAAW,CAAC,MAAhC,EAAwC,CAAC,EAAzC,EAA6C;AAC3C,iBAAW,GAAG,WAAW,CAAC,CAAD,CAAzB;AACA,kBAAY,GAAG,aAAa,WAA5B;AACA,UAAI,CAAC,IAAL,CAAU,YAAV;AACD;AACF;;AACD,MAAI,UAAU,CAAC,MAAX,IAAqB,WAAW,CAAC,MAArC,EAA6C;AAC3C,SAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,WAAW,CAAC,MAAhC,EAAwC,CAAC,EAAzC,EAA6C;AAC3C,iBAAW,GAAG,WAAW,CAAC,CAAD,CAAzB;;AACA,WAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,UAAU,CAAC,MAA/B,EAAuC,CAAC,EAAxC,EAA4C;AAC1C,kBAAU,GAAG,UAAU,CAAC,CAAD,CAAvB;AACA,oBAAY,GAAG,aAAa,WAAb,GAA2B,GAA3B,GAAiC,UAAhD;AACA,YAAI,CAAC,IAAL,CAAU,YAAV;AACD;AACF;AACF;;AACD,MAAI,IAAI,CAAC,MAAL,KAAgB,CAApB,EAAuB;AACrB,QAAI,CAAC,IAAL,CAAU,YAAV;AACD;;AACD,SAAO,IAAP;AACD;;;;;;;;;;;;;;AChCD;AAAA;AAAA;AAAA;AAAA;AAAA;;AAEA,SAAS,qBAAT,CAA+B,OAA/B,EAAwC,SAAxC,EAAiD;AAC/C,MAAM,QAAQ,GAAG,mEAAoB,CAAC,OAAD,EAAU,SAAV,CAArC;;AAKA,MAAI,QAAQ,CAAC,IAAT,CAAc,MAAd,KAAyB,SAA7B,EAAwC;AACtC,QAAM,UAAU,GAAG,QAAQ,CAAC,IAA5B;AACA,YAAQ,CAAC,IAAT,GAAgB,EAAhB;AACA,YAAQ,CAAC,IAAT,CAAc,IAAd,CAAmB,UAAnB;AACD;;AAGD,MAAM,OAAO,GAAG,EAAhB;;AACA,OAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,QAAQ,CAAC,IAAT,CAAc,MAAlC,EAA0C,CAAC,EAA3C,EAA+C;AAC7C,QAAM,OAAO,GAAG,QAAQ,CAAC,IAAT,CAAc,CAAd,CAAhB;AACA,QAAM,IAAI,GAAG,CACX,OAAO,CAAC,KAAR,CAAc,MAAd,GAAuB,IADZ,EAEX,OAAO,CAAC,MAFG,EAGX,OAAO,CAAC,KAAR,CAAc,IAHH,EAIX,OAAO,CAAC,KAAR,CAAc,MAJH,EAKX,OAAO,CAAC,KAAR,CAAc,MAAd,GAAuB,IALZ,EAMX,OAAO,CAAC,KAAR,CAAc,QAAd,GAAyB,IANd,EAOX,OAAO,CAAC,KAAR,CAAc,MAPH,EAQX,OAAO,CAAC,KAAR,CAAc,IARH,EASX,OAAO,CAAC,KAAR,CAAc,UAAd,CAAyB,OATd,EAUX,OAAO,CAAC,KAAR,CAAc,UAAd,CAAyB,QAVd,CAAb;AAaA,WAAO,CAAC,IAAR,CAAa,IAAb;AACD;;AAED,MAAM,OAAO,GAAG,QAAQ,CAAC,IAAT,CAAc,CAAd,CAAhB;AACA,MAAM,UAAU,GAAG,EAAnB;AACA,YAAU,CAAC,CAAD,CAAV,GAAgB,CAAC,OAAO,CAAC,KAAR,CAAc,MAAf,EAAuB,OAAO,CAAC,KAAR,CAAc,MAAd,GAAuB,IAA9C,CAAhB;AACA,SAAO,CAAC,UAAR,GAAqB,UAArB;AACA,SAAO,CAAC,IAAR,GAAe,OAAf;AACA,SAAO,CAAC,OAAR,GAAkB,CAChB;AAAE,QAAI,EAAE,MAAR;AAAgB,QAAI,EAAE;AAAtB,GADgB,EAEhB;AAAE,QAAI,EAAE;AAAR,GAFgB,EAGhB;AAAE,QAAI,EAAE;AAAR,GAHgB,EAIhB;AAAE,QAAI,EAAE;AAAR,GAJgB,EAKhB;AAAE,QAAI,EAAE,cAAR;AAAwB,QAAI,EAAE;AAA9B,GALgB,EAMhB;AAAE,QAAI,EAAE,gBAAR;AAA0B,QAAI,EAAE;AAAhC,GANgB,EAOhB;AAAE,QAAI,EAAE;AAAR,GAPgB,EAQhB;AAAE,QAAI,EAAE;AAAR,GARgB,EAShB;AAAE,QAAI,EAAE;AAAR,GATgB,EAUhB;AAAE,QAAI,EAAE;AAAR,GAVgB,CAAlB;AAYA,SAAO,CAAC,IAAR,GAAe,OAAf;AAEA,UAAQ,CAAC,IAAT,GAAgB,CAAC,OAAD,CAAhB;AAGA,SAAO,QAAP;AACD;;AAoBD,SAAS,oBAAT,CAA8B,OAA9B,EAAuC,SAAvC,EAAgD;AAC9C,MAAM,QAAQ,GAAG,mEAAoB,CAAC,OAAD,EAAU,SAAV,CAArC;;AAEA,OAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,QAAQ,CAAC,IAAT,CAAc,MAAlC,EAA0C,CAAC,EAA3C,EAA+C;AAC7C,QAAM,OAAO,GAAG,QAAQ,CAAC,IAAT,CAAc,CAAd,CAAhB;AACA,QAAM,UAAU,GAAG,EAAnB;;AACA,QAAI,OAAO,CAAC,KAAR,CAAc,MAAd,KAAyB,SAA7B,EAAwC;AACtC,UAAM,IAAI,GAAG;AACX,iBAAS,EAAE,OAAO,CAAC,KAAR,CAAc,MAAd,GAAuB,IADvB;AAEX,eAAO,EAAE,OAAO,CAAC,KAAR,CAAc,IAFZ;AAGX,cAAM,EAAE,OAAO,CAAC,MAHL;AAIX,aAAK,EAAE;AACL,cAAI,EAAE,OAAO,CAAC,KAAR,CAAc,IADf;AAEL,gBAAM,EAAE,OAAO,CAAC,KAAR,CAAc,MAAd,GAAuB,IAF1B;AAGL,kBAAQ,EAAE,OAAO,CAAC,KAAR,CAAc,QAAd,GAAyB,IAH9B;AAIL,gBAAM,EAAE,OAAO,CAAC,KAAR,CAAc,MAJjB;AAKL,gBAAM,EAAE,OAAO,CAAC,KAAR,CAAc,MALjB;AAML,cAAI,EAAE,OAAO,CAAC,KAAR,CAAc;AANf;AAJI,OAAb;AAaA,gBAAU,CAAC,IAAX,CAAgB,IAAhB;AACA,aAAO,CAAC,UAAR,GAAqB,UAArB;AACA,aAAO,OAAO,CAAC,KAAf;AACA,aAAO,OAAO,CAAC,MAAf;AACA,aAAO,CAAC,IAAR,GAAe,MAAf;AACD;AACF;;AAGD,SAAO,QAAP;AACD;;AAOD,SAAS,0BAAT,CAAoC,OAApC,EAA6C,SAA7C,EAAsD;AACpD,MAAM,QAAQ,GAAG,mEAAoB,CAAC,OAAD,EAAU,SAAV,CAArC;;AAKA,MAAI,QAAQ,CAAC,IAAT,CAAc,MAAd,KAAyB,SAA7B,EAAwC;AACtC,QAAM,UAAU,GAAG,QAAQ,CAAC,IAA5B;AACA,YAAQ,CAAC,IAAT,GAAgB,EAAhB;AACA,YAAQ,CAAC,IAAT,CAAc,IAAd,CAAmB,UAAnB;AACD;;AACD,OAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,QAAQ,CAAC,IAAT,CAAc,MAAlC,EAA0C,CAAC,EAA3C,EAA+C;AAC7C,QAAM,OAAO,GAAG,QAAQ,CAAC,IAAT,CAAc,CAAd,CAAhB;AAGA,QAAM,UAAU,GAAG,EAAnB;;AACA,QAAI,OAAO,CAAC,KAAR,CAAc,MAAd,KAAyB,SAA7B,EAAwC;AACtC,gBAAU,CAAC,CAAD,CAAV,GAAgB,CAAC,OAAO,CAAC,KAAR,CAAc,MAAf,EAAuB,OAAO,CAAC,KAAR,CAAc,MAAd,GAAuB,IAA9C,CAAhB;AAGD;;AACD,WAAO,CAAC,UAAR,GAAqB,UAArB;;AAEA,QAAI,OAAO,CAAC,KAAR,CAAc,IAAd,KAAuB,SAA3B,EAAsC;AACpC,aAAO,CAAC,MAAR,GAAiB,OAAO,CAAC,KAAR,CAAc,IAA/B;AACD,KAFD,MAEO;AACL,aAAO,CAAC,MAAR,GAAiB,OAAO,CAAC,KAAzB;AACD;AACF;;AACD,SAAO,QAAP;AACD;;;;;;;;;;;;;;AChJD;AAAA;AAAA,SAAS,aAAT,CAAuB,UAAvB,EAAmC,WAAnC,EAA8C;AAC5C,MAAM,IAAI,GAAG,EAAb;AACA,MAAI,YAAY,GAAG,UAAnB;AACA,MAAI,WAAW,GAAG,IAAlB;AACA,MAAI,UAAU,GAAG,IAAjB;AACA,MAAM,eAAe,GAAG,IAAxB;;AACA,MAAI,WAAW,CAAC,MAAhB,EAAwB;AACtB,SAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,WAAW,CAAC,MAAhC,EAAwC,CAAC,EAAzC,EAA6C;AAC3C,iBAAW,GAAG,WAAW,CAAC,CAAD,CAAzB;AACA,kBAAY,GAAG,cAAc,WAA7B;AACA,UAAI,CAAC,IAAL,CAAU,YAAV;AACD;AACF;;AACD,MAAI,UAAU,CAAC,MAAX,IAAqB,WAAW,CAAC,MAArC,EAA6C;AAC3C,SAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,WAAW,CAAC,MAAhC,EAAwC,CAAC,EAAzC,EAA6C;AAC3C,iBAAW,GAAG,WAAW,CAAC,CAAD,CAAzB;;AACA,WAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,UAAU,CAAC,MAA/B,EAAuC,CAAC,EAAxC,EAA4C;AAC1C,kBAAU,GAAG,UAAU,CAAC,CAAD,CAAvB;AACA,oBAAY,GAAG,cAAc,WAAd,GAA4B,GAA5B,GAAkC,UAAjD;AACA,YAAI,CAAC,IAAL,CAAU,YAAV;AACD;AACF;AACF;;AACD,MAAI,IAAI,CAAC,MAAL,KAAgB,CAApB,EAAuB;AACrB,QAAI,CAAC,IAAL,CAAU,YAAV;AACD;;AACD,SAAO,IAAP;AACD;;;;;;;;;;;;;;AC3BD;AAAA;AAAA,SAAS,oBAAT,CAA8B,OAA9B,EAAuC,SAAvC,EAAgD;AAE9C,MAAM,QAAQ,GAAG;AACf,QAAI,EAAE;AADS,GAAjB;;AAGA,OAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,SAAS,CAAC,IAAV,CAAe,MAAnC,EAA2C,CAAC,EAA5C,EAAgD;AAC9C,QAAI,SAAS,CAAC,IAAV,CAAe,CAAf,EAAkB,MAAlB,KAA6B,OAAjC,EAA0C;AAExC,cAAQ,CAAC,IAAT,GAAgB,SAAS,CAAC,IAAV,CAAe,CAAf,EAAkB,QAAlB,CAA2B,IAA3C;AACA;AACD;AACF;;AACD,SAAO,QAAP;AACD;;;;;;;;;;;;;;ACbD;AAAA;AAAA;AAAA,yBAEC;;AADQ,2BAAc,4CAAd;AACT;AAAC,CAFD;;;;;;;;;;;;;;ACEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;;AAEA;AAYE,+BAAY,gBAAZ,EAAmC,EAAnC,EAA4C,UAA5C,EAA6D,WAA7D,EAA+E,YAA/E,EAAgG;AAC9F,SAAK,GAAL,GAAW,gBAAgB,CAAC,GAA5B;AACA,SAAK,IAAL,GAAY,gBAAgB,CAAC,IAA7B;AACA,SAAK,SAAL,GAAiB,gBAAgB,CAAC,SAAlC;AACA,SAAK,eAAL,GAAuB,gBAAgB,CAAC,eAAxC;AACA,SAAK,CAAL,GAAS,EAAT;AACA,SAAK,UAAL,GAAkB,UAAlB;AACA,SAAK,WAAL,GAAmB,WAAnB;AACA,SAAK,YAAL,GAAoB,YAApB;AACA,SAAK,eAAL,GAAuB,KAAvB;AACD;;AAMD,4DAAgB,OAAhB,EAA4B;AAE1B,QAAI,YAAY,GAAG,KAAnB;AACA,QAAI,gBAAgB,GAAG,KAAvB;AACA,QAAI,MAAM,GAAG,UAAb;AACA,QAAI,UAAU,GAAG,EAAjB;AAEA,WAAO,GAAG,KAAK,WAAL,CAAiB,eAAjB,CAAiC,OAAjC,CAAV;;AACA,QAAI,OAAO,KAAK,SAAZ,IAAyB,OAAO,KAAK,EAAzC,EAA6C;AAC3C,cAAQ,IAAR;AACE,aAAK,aAAa,IAAb,CAAkB,OAAlB,CAAL;AACE,gBAAM,GAAG,UAAT;AACA,sBAAY,GAAG,IAAf;AACA;;AACF,aAAK,iBAAiB,IAAjB,CAAsB,OAAtB,CAAL;AACE,gBAAM,GAAG,UAAT;AACA,0BAAgB,GAAG,IAAnB;AAEA,oBAAU,GAAG,OAAO,CAAC,KAAR,CAAc,MAAd,EAAsB,CAAtB,CAAb;AACA;;AACF;AACE,gBAAM,GAAG,OAAT;AAZJ;;AAeA,UAAI,CAAC,MAAM,CAAC,UAAP,CAAkB,GAAlB,EAAuB,CAAvB,CAAL,EAAgC;AAC9B,cAAM,GAAG,MAAM,MAAf;AACD;AACF;;AACD,QAAM,OAAO,GAAG,IAAhB;AACA,WAAO,KAAK,UAAL,CACJ,iBADI,CACc;AACjB,SAAG,EAAE,KAAK,GAAL,GAAW,MADC;AAEjB,UAAI,EAAE,OAFW;AAGjB,YAAM,EAAE,KAHS;AAIjB,aAAO,EAAE;AACP,wBAAgB,kBADT;AAEP,qBAAa,EAAE,KAAK;AAFb;AAJQ,KADd,EAUJ,IAVI,CAUC,UAAC,QAAD,EAAc;AAElB,UAAI,YAAJ,EAAkB;AAChB,eAAO,OAAO,CAAC,uBAAR,CAAgC,QAAhC,CAAP;AACD;;AACD,UAAI,gBAAJ,EAAsB;AACpB,eAAO,OAAO,CAAC,sBAAR,CAA+B,QAA/B,EAAyC,UAAzC,CAAP;AACD;;AACD,aAAO,OAAO,CAAC,yBAAR,CAAkC,QAAlC,CAAP;AACD,KAnBI,CAAP;AAoBD,GAjDD;;AAmDA,oEAAwB,QAAxB,EAAqC;AACnC,QAAM,eAAe,GAAG,EAAxB;AACA,QAAM,OAAO,GAAG,EAAhB;AACA,QAAM,YAAY,GAAG,CAAC,MAAD,EAAS,QAAT,EAAmB,SAAnB,EAA8B,eAA9B,EAA+C,WAA/C,EAA4D,WAA5D,EAAyE,YAAzE,EAAuF,QAAvF,EAAiG,SAAjG,CAArB;;AACA,SAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,QAAQ,CAAC,IAAT,CAAc,MAAlC,EAA0C,CAAC,EAA3C,EAA+C;AAC7C,UAAM,IAAI,GAAG,MAAM,CAAC,IAAP,CAAY,QAAQ,CAAC,IAAT,CAAc,CAAd,CAAZ,CAAb;;AACA,WAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,IAAI,CAAC,MAAzB,EAAiC,CAAC,EAAlC,EAAsC;AACpC,YAAM,OAAO,GAAG,IAAI,CAAC,CAAD,CAApB;;AACA,YAAI,YAAY,CAAC,OAAb,CAAqB,OAArB,MAAkC,CAAC,CAAvC,EAA0C;AACxC,cAAM,QAAQ,GAAG,QAAQ,CAAC,IAAT,CAAc,CAAd,EAAiB,OAAjB,CAAjB;AACA,cAAM,WAAW,GAAG,OAAO,GAAG,GAAV,GAAgB,QAApC;;AACA,cAAI,OAAO,CAAC,OAAR,CAAgB,WAAhB,IAA+B,CAAnC,EAAsC;AACpC,mBAAO,CAAC,IAAR,CAAa,WAAb;AACD;AACF;AACF;AACF;;AACD,QAAI,OAAO,CAAC,MAAR,GAAiB,CAArB,EAAwB;AAEtB,aAAO,CAAC,IAAR;;AACA,WAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,OAAO,CAAC,MAA5B,EAAoC,CAAC,EAArC,EAAyC;AACvC,uBAAe,CAAC,IAAhB,CAAqB;AACnB,cAAI,EAAE,OAAO,CAAC,CAAD,CADM;AAEnB,oBAAU,EAAE;AAFO,SAArB;AAID;AACF;;AACD,WAAO,eAAP;AACD,GA5BD;;AA8BA,mEAAuB,QAAvB,EAAsC,GAAtC,EAAiD;AAC/C,QAAM,QAAQ,GAAG,GAAG,CAAC,KAAJ,CAAU,GAAV,CAAjB;AACA,QAAM,UAAU,GAAG,QAAQ,CAAC,CAAD,CAA3B;AACA,QAAM,eAAe,GAAG,QAAQ,CAAC,CAAD,CAAhC;AACA,QAAM,eAAe,GAAG,EAAxB;AACA,QAAM,YAAY,GAAG,EAArB;;AACA,SAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,QAAQ,CAAC,IAAT,CAAc,MAAlC,EAA0C,CAAC,EAA3C,EAA+C;AAC7C,UAAM,IAAI,GAAG,MAAM,CAAC,IAAP,CAAY,QAAQ,CAAC,IAAT,CAAc,CAAd,CAAZ,CAAb;;AACA,WAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,IAAI,CAAC,MAAzB,EAAiC,CAAC,EAAlC,EAAsC;AACpC,YAAM,OAAO,GAAG,IAAI,CAAC,CAAD,CAApB;;AACA,YAAI,UAAU,KAAK,OAAnB,EAA4B;AAE1B,cAAI,OAAO,QAAQ,CAAC,IAAT,CAAc,CAAd,EAAiB,UAAjB,CAAP,KAAwC,QAA5C,EAAsD;AACpD,iBAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,QAAQ,CAAC,IAAT,CAAc,CAAd,EAAiB,UAAjB,EAA6B,MAAjD,EAAyD,CAAC,EAA1D,EAA8D;AAC5D,kBAAI,QAAQ,CAAC,IAAT,CAAc,CAAd,EAAiB,UAAjB,EAA6B,CAA7B,MAAoC,eAAxC,EAAyD;AAEvD,oBAAM,QAAQ,GAAG,QAAQ,CAAC,IAAT,CAAc,CAAd,EAAiB,IAAlC;;AACA,oBAAI,YAAY,CAAC,OAAb,CAAqB,QAArB,IAAiC,CAArC,EAAwC;AACtC,8BAAY,CAAC,IAAb,CAAkB,QAAlB;AACD;AACF;AACF;AACF,WAVD,MAUO;AACL,gBAAI,QAAQ,CAAC,IAAT,CAAc,CAAd,EAAiB,UAAjB,MAAiC,eAArC,EAAsD;AAEpD,kBAAM,QAAQ,GAAG,QAAQ,CAAC,IAAT,CAAc,CAAd,EAAiB,IAAlC;;AACA,kBAAI,YAAY,CAAC,OAAb,CAAqB,QAArB,IAAiC,CAArC,EAAwC;AACtC,4BAAY,CAAC,IAAb,CAAkB,QAAlB;AACD;AACF;AACF;AACF;AACF;AACF;;AACD,QAAI,YAAY,CAAC,MAAb,GAAsB,CAA1B,EAA6B;AAE3B,WAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,YAAY,CAAC,MAAjC,EAAyC,CAAC,EAA1C,EAA8C;AAC5C,uBAAe,CAAC,IAAhB,CAAqB;AACnB,cAAI,EAAE,YAAY,CAAC,CAAD;AADC,SAArB;AAGD;AACF;;AACD,WAAO,eAAP;AACD,GA3CD;;AAkDA,sEAA0B,MAA1B,EAAqC;AACnC,QAAI,MAAM,CAAC,IAAP,CAAY,MAAZ,KAAuB,CAA3B,EAA8B;AAC5B,aAAO,EAAP;AACD;;AACD,WAAO,6CAAC,CAAC,GAAF,CAAM,MAAM,CAAC,IAAb,EAAmB,aAAC;AACzB,UAAI,CAAC,GAAG;AACN,YAAI,EAAE,EADA;AAEN,kBAAU,EAAE;AAFN,OAAR;;AAIA,UAAI;AACF,SAAC,GAAG;AACF,cAAI,EAAE,CAAC,CAAC,IADN;AAEF,oBAAU,EAAE;AAFV,SAAJ;AAID,OALD,CAKE,OAAO,CAAP,EAAU;AACV,eAAO,CAAC,GAAR,CAAY,UAAZ;AACD;;AACD,aAAO,CAAP;AACD,KAdM,CAAP;AAeD,GAnBD;;AA0BA,2DAAe,UAAf,EAA8B;AAC5B,QAAM,MAAM,GAAG,EAAf;;AACA,SAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,UAAU,CAAC,MAA/B,EAAuC,CAAC,EAAxC,EAA4C;AAC1C,UAAI,UAAU,CAAC,CAAD,CAAV,CAAc,aAAd,KAAgC,YAApC,EAAkD;AAChD,YAAM,UAAU,GAAG,UAAU,CAAC,CAAD,CAAV,CAAc,KAAjC;;AACA,YAAI,KAAK,WAAL,CAAiB,eAAjB,CAAiC,UAAjC,CAAJ,EAAkD;AAEhD,cAAI,WAAW,GAAG,KAAK,WAAL,CAAiB,OAAjB,CAAyB,UAAzB,CAAlB;;AACA,cAAI,WAAW,CAAC,MAAZ,GAAqB,CAAzB,EAA4B;AAG1B,gBAAI,WAAW,CAAC,UAAZ,CAAuB,GAAvB,CAAJ,EAAiC;AAC/B,yBAAW,GAAG,WAAW,CAAC,KAAZ,CAAkB,CAAlB,EAAqB,CAAC,CAAtB,CAAd;AACA,kBAAM,YAAY,GAAG,WAAW,CAAC,KAAZ,CAAkB,GAAlB,CAArB;AACA,oBAAM,CAAC,IAAP,CAAY,KAAZ,CAAkB,MAAlB,EAA0B,YAA1B;AACD,aAJD,MAIO;AACL,oBAAM,CAAC,IAAP,CAAY,WAAZ;AACD;AACF;AACF,SAdD,MAcO;AACL,gBAAM,CAAC,IAAP,CAAY,UAAZ;AACD;AACF;AACF;;AAED,WAAO,MAAP;AACD,GA1BD;;AAiCA,0DAAc,UAAd,EAA6B;AAC3B,QAAM,MAAM,GAAG,EAAf;;AACA,SAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,UAAU,CAAC,MAA/B,EAAuC,CAAC,EAAxC,EAA4C;AAC1C,UAAI,UAAU,CAAC,CAAD,CAAV,CAAc,aAAd,KAAgC,WAApC,EAAiD;AAC/C,YAAM,UAAU,GAAG,UAAU,CAAC,CAAD,CAAV,CAAc,KAAjC;;AACA,YAAI,KAAK,WAAL,CAAiB,eAAjB,CAAiC,UAAjC,CAAJ,EAAkD;AAEhD,cAAI,WAAW,GAAG,KAAK,WAAL,CAAiB,OAAjB,CAAyB,UAAzB,CAAlB;;AACA,cAAI,WAAW,CAAC,MAAZ,GAAqB,CAAzB,EAA4B;AAG1B,gBAAI,WAAW,CAAC,UAAZ,CAAuB,GAAvB,CAAJ,EAAiC;AAC/B,yBAAW,GAAG,WAAW,CAAC,KAAZ,CAAkB,CAAlB,EAAqB,CAAC,CAAtB,CAAd;AACA,kBAAM,YAAY,GAAG,WAAW,CAAC,KAAZ,CAAkB,GAAlB,CAArB;AACA,oBAAM,CAAC,IAAP,CAAY,KAAZ,CAAkB,MAAlB,EAA0B,YAA1B;AACD,aAJD,MAIO;AACL,oBAAM,CAAC,IAAP,CAAY,WAAZ;AACD;AACF;AACF,SAdD,MAcO;AACL,gBAAM,CAAC,IAAP,CAAY,UAAZ;AACD;AACF;AACF;;AACD,WAAO,MAAP;AACD,GAzBD;;AAgCA,8DAAkB,UAAlB,EAA4B;AAC1B,QAAM,MAAM,GAAG,EAAf;;AACA,SAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,UAAU,CAAC,MAA/B,EAAuC,CAAC,EAAxC,EAA4C;AAC1C,UAAI,UAAU,CAAC,CAAD,CAAV,CAAc,aAAd,KAAgC,eAApC,EAAqD;AACnD,YAAM,UAAU,GAAG,UAAU,CAAC,CAAD,CAAV,CAAc,KAAjC;;AACA,YAAI,KAAK,WAAL,CAAiB,eAAjB,CAAiC,UAAjC,CAAJ,EAAkD;AAEhD,cAAI,WAAW,GAAG,KAAK,WAAL,CAAiB,OAAjB,CAAyB,UAAzB,CAAlB;;AACA,cAAI,WAAW,CAAC,MAAZ,GAAqB,CAAzB,EAA4B;AAG1B,gBAAI,WAAW,CAAC,UAAZ,CAAuB,GAAvB,CAAJ,EAAiC;AAC/B,yBAAW,GAAG,WAAW,CAAC,KAAZ,CAAkB,CAAlB,EAAqB,CAAC,CAAtB,CAAd;AACA,kBAAM,YAAY,GAAG,WAAW,CAAC,KAAZ,CAAkB,GAAlB,CAArB;AACA,oBAAM,CAAC,IAAP,CAAY,KAAZ,CAAkB,MAAlB,EAA0B,YAA1B;AACD,aAJD,MAIO;AACL,oBAAM,CAAC,IAAP,CAAY,WAAZ;AACD;AACF;AACF,SAdD,MAcO;AACL,gBAAM,CAAC,IAAP,CAAY,UAAZ;AACD;AACF;AACF;;AACD,WAAO,MAAP;AACD,GAzBD;;AA2BA,gEAAoB,OAApB,EAA2B;AACzB,SAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,OAAO,CAAC,MAA5B,EAAoC,CAAC,EAArC,EAAyC;AACvC,UAAM,OAAO,GAAG,OAAO,CAAC,CAAD,CAAvB;;AACA,cAAQ,OAAO,CAAC,UAAhB;AACE,aAAK,OAAL;AAKE,cAAM,WAAW,GAAG,OAAO,CAAC,gBAA5B;AACA,cAAM,cAAc,GAAG,KAAK,WAAL,CAAiB,OAAjB,CAAyB,WAAzB,CAAvB;AACA,iBAAO,CAAC,wBAAR,GAAmC,cAAnC;AACA;AATJ;AAWD;;AACD,WAAO,OAAP;AACD,GAhBD;;AAuBA,8DAAkB,MAAlB,EAAwB;AACtB,QAAI,IAAI,GAAG,EAAX;AACA,QAAM,YAAY,GAAG,SAArB;AACA,QAAI,WAAW,GAAG,IAAlB;AACA,QAAI,UAAU,GAAG,IAAjB;AACA,QAAI,cAAc,GAAG,IAArB;;AACA,QAAI,MAAM,CAAC,UAAP,KAAsB,SAA1B,EAAqC;AACnC,iBAAW,GAAG,KAAK,cAAL,CAAoB,MAAM,CAAC,UAA3B,CAAd;AACA,gBAAU,GAAG,KAAK,aAAL,CAAmB,MAAM,CAAC,UAA1B,CAAb;AACA,oBAAc,GAAG,KAAK,iBAAL,CAAuB,MAAM,CAAC,UAA9B,CAAjB;AACD;;AACD,QAAI,MAAM,CAAC,OAAP,KAAmB,SAAvB,EAAkC;AAEhC,WAAK,mBAAL,CAAyB,MAAM,CAAC,OAAhC;AACD;;AACD,QAAI,MAAM,CAAC,KAAP,KAAiB,SAArB,EAAgC;AAC9B,YAAM,CAAC,aAAP,GAAuB,KAAK,WAAL,CAAiB,OAAjB,CAAyB,MAAM,CAAC,KAAhC,CAAvB;AACD;;AACD,YAAQ,MAAM,CAAC,UAAf;AACE,WAAK,YAAL;AACA,WAAK,iBAAL;AAEE,YAAI,GAAG,gFAAgB,CAAC,MAAD,EAAS,cAAT,CAAvB;AACA;;AACF,WAAK,qBAAL;AAUE;;AACF,WAAK,oBAAL;AACE,YAAI,GAAG,gFAAmB,CAAC,WAAD,CAA1B;AACA;;AACF,WAAK,SAAL;AACA,WAAK,cAAL;AAEE,YAAI,GAAG,2EAAc,CAAC,UAAD,EAAa,WAAb,CAArB;AACA;;AACF,WAAK,eAAL;AAGE,YAAI,GAAG,iFAAoB,CAAC,WAAD,CAA3B;AACA;;AACF,WAAK,eAAL;AACA,WAAK,oBAAL;AACA,WAAK,QAAL;AACA,WAAK,aAAL;AAEE,YAAI,GAAG,yEAAa,CAAC,UAAD,EAAa,WAAb,CAApB;AACA;;AACF,WAAK,cAAL;AACA,WAAK,eAAL;AAEE,YAAI,GAAG,0EAAa,CAAC,UAAD,EAAa,WAAb,CAApB;AACA;;AACF,WAAK,mBAAL;AAEE;;AACF,WAAK,uBAAL;AAEE;;AACF,WAAK,cAAL;AAEE;AAlDJ;;AAoDA,WAAO,IAAP;AACD,GAvED;;AAyEA,uDAAW,SAAX,EAAoB;AAClB,QAAM,OAAO,GAAG,EAAhB;;AACA,SAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,SAAS,CAAC,IAAV,CAAe,MAAnC,EAA2C,CAAC,EAA5C,EAAgD;AAC9C,UAAM,KAAK,GAAG,SAAS,CAAC,IAAV,CAAe,CAAf,EAAkB,MAAlB,CAAyB,KAAvC;;AACA,UAAI,OAAO,CAAC,cAAR,CAAuB,KAAvB,CAAJ,EAAmC;AACjC,eAAO,CAAC,KAAD,CAAP,CAAe,IAAf,CAAoB,SAAS,CAAC,IAAV,CAAe,CAAf,CAApB;AACD,OAFD,MAEO;AACL,eAAO,CAAC,KAAD,CAAP,GAAiB,CAAC,SAAS,CAAC,IAAV,CAAe,CAAf,CAAD,CAAjB;AACD;AACF;;AACD,WAAO,OAAP;AACD,GAXD;;AAaA,+DAAmB,UAAnB,EAA+B,OAA/B,EAAwC,SAAxC,EAAiD;AAC/C,QAAI,MAAM,GAAG;AAAE,UAAI,EAAE;AAAR,KAAb;;AACA,YAAQ,UAAR;AACE,WAAK,YAAL;AACE,cAAM,GAAG,+FAA6B,CAAC,OAAD,EAAU,SAAV,CAAtC;AACA;;AACF,WAAK,iBAAL;AACE,cAAM,GAAG,yFAAuB,CAAC,OAAD,EAAU,SAAV,CAAhC;AACA,eAAO,MAAP;;AACF,WAAK,SAAL;AACE,cAAM,GAAG,yFAA0B,CAAC,OAAD,EAAU,SAAV,CAAnC;AACA,eAAO,MAAP;;AACF,WAAK,cAAL;AACE,cAAM,GAAG,mFAAoB,CAAC,OAAD,EAAU,SAAV,CAA7B;AACA,eAAO,MAAP;;AACF,WAAK,oBAAL;AACE,cAAM,GAAG,wFAAyB,CAAC,OAAD,EAAU,SAAV,CAAlC;AACA,eAAO,MAAP;;AACF,WAAK,eAAL;AACE,cAAM,GAAG,+FAAgC,CAAC,OAAD,EAAU,SAAV,CAAzC;AACA;;AACF,WAAK,QAAL;AACE,cAAM,GAAG,uFAAyB,CAAC,OAAD,EAAU,SAAV,CAAlC;AACA;;AACF,WAAK,aAAL;AACE,cAAM,GAAG,iFAAmB,CAAC,OAAD,EAAU,SAAV,CAA5B;AACA;;AACF,WAAK,eAAL;AACE,cAAM,GAAG,yFAA2B,CAAC,OAAD,EAAU,SAAV,CAApC;AACA;;AACF,WAAK,oBAAL;AACE,cAAM,GAAG,6FAA+B,CAAC,OAAD,EAAU,SAAV,CAAxC;AACA;;AACF,WAAK,cAAL;AACE,cAAM,GAAG,mFAAoB,CAAC,OAAD,EAAU,SAAV,CAA7B;AACA;;AACF,WAAK,eAAL;AACE,cAAM,GAAG,oFAAqB,CAAC,OAAD,EAAU,SAAV,CAA9B;AACA;;AACF;AACE,eAAO,CAAC,GAAR,CAAY,qBAAZ;AACA;AAvCJ;;AAyCA,WAAO,MAAP;AACD,GA5CD;;AA8CA,0DAAc,OAAd,EAAuB,MAAvB,EAA6B;AAE3B,SAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,MAAM,CAAC,IAAP,CAAY,MAAhC,EAAwC,CAAC,EAAzC,EAA6C;AAC3C,YAAM,CAAC,IAAP,CAAY,CAAZ,EAAe,SAAf,GAA2B,MAAM,CAAC,IAAP,CAAY,CAAZ,EAAe,MAA1C;AACD;;AACD,WAAO,MAAP;AACD,GAND;;AAQA,2DAAe,OAAf,EAAwB,MAAxB,EAA8B;AAE5B,QAAI,OAAO,CAAC,OAAR,KAAoB,SAApB,IAAiC,OAAO,CAAC,OAAR,CAAgB,MAAhB,GAAyB,CAA9D,EAAiE;AAC/D,UAAM,UAAU,GAAG,EAAnB;;AACA,WAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,OAAO,CAAC,OAAR,CAAgB,MAApC,EAA4C,CAAC,EAA7C,EAAiD;AAC/C,YAAM,OAAO,GAAG,OAAO,CAAC,OAAR,CAAgB,CAAhB,CAAhB;;AAEA,aAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,MAAM,CAAC,IAAP,CAAY,MAAhC,EAAwC,CAAC,EAAzC,EAA6C;AAC3C,cAAM,UAAU,GAAG,MAAM,CAAC,IAAP,CAAY,CAAZ,EAAe,SAAlC;;AACA,cAAI,OAAO,CAAC,UAAR,KAAuB,UAA3B,EAAuC;AAErC,gBAAI,OAAO,CAAC,aAAZ,EAA2B;AACzB,oBAAM,CAAC,IAAP,CAAY,CAAZ,EAAe,MAAf,GAAwB,OAAO,CAAC,aAAR,GAAwB,GAAxB,GAA8B,UAAtD;AACD;;AAED,sBAAU,CAAC,IAAX,CAAgB,MAAM,CAAC,IAAP,CAAY,CAAZ,CAAhB;AACD;AACF;AACF;;AAED,UAAI,UAAU,CAAC,MAAX,GAAoB,CAAxB,EAA2B;AACzB,cAAM,CAAC,IAAP,GAAc,UAAd;AACD;AACF,KArBD,MAqBO;AAEL,UAAI,OAAO,CAAC,aAAZ,EAA2B;AACzB,aAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,MAAM,CAAC,IAAP,CAAY,MAAhC,EAAwC,CAAC,EAAzC,EAA6C;AAC3C,gBAAM,CAAC,IAAP,CAAY,CAAZ,EAAe,MAAf,GAAwB,OAAO,CAAC,aAAhC;AACD;AACF;AACF;;AAED,WAAO,MAAP;AACD,GAjCD;;AAwCA,6DAAiB,SAAjB,EAA0B;AAIxB,QAAM,UAAU,GAAG;AAAE,UAAI,EAAE;AAAR,KAAnB;;AACA,QAAI,CAAC,SAAD,IAAc,CAAC,SAAS,CAAC,IAA7B,EAAmC;AACjC,aAAO,UAAP;AACD;;AACD,QAAM,OAAO,GAAG,KAAK,UAAL,CAAgB,SAAhB,CAAhB;AAGA,QAAM,UAAU,GAAG,MAAM,CAAC,IAAP,CAAY,OAAZ,CAAnB;;AACA,SAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,UAAU,CAAC,MAA/B,EAAuC,CAAC,EAAxC,EAA4C;AAC1C,UAAM,IAAI,GAAG,UAAU,CAAC,CAAD,CAAvB;AACA,UAAM,UAAU,GAAG,OAAO,CAAC,IAAD,CAAP,CAAc,CAAd,EAAiB,MAAjB,CAAwB,UAA3C;AAEA,UAAM,OAAO,GAAG,OAAO,CAAC,IAAD,CAAP,CAAc,CAAd,EAAiB,MAAjC;AAGA,UAAI,MAAM,GAAG,KAAK,kBAAL,CAAwB,UAAxB,EAAoC,OAApC,EAA6C,SAA7C,CAAb;AAEA,YAAM,GAAG,KAAK,aAAL,CAAmB,OAAnB,EAA4B,MAA5B,CAAT;AAEA,YAAM,GAAG,KAAK,cAAL,CAAoB,OAApB,EAA6B,MAA7B,CAAT;;AAEA,WAAK,IAAI,GAAC,GAAG,CAAb,EAAgB,GAAC,GAAG,MAAM,CAAC,IAAP,CAAY,MAAhC,EAAwC,GAAC,EAAzC,EAA6C;AAC3C,kBAAU,CAAC,IAAX,CAAgB,IAAhB,CAAqB,MAAM,CAAC,IAAP,CAAY,GAAZ,CAArB;AACD;AACF;;AACD,WAAO,UAAP;AACD,GA9BD;;AAmCA,6DAAiB,MAAjB,EAAyB,SAAzB,EAAkC,CAmBjC,CAnBD;;AA2BA,gEAAoB,MAApB,EAA4B,SAA5B,EAAqC;AACnC,QAAI,YAAY,GAAG,UAAnB;;AACA,YAAQ,SAAS,CAAC,aAAlB;AACE,WAAK,YAAL;AACE,oBAAY,GAAG,UAAf;AACA;;AACF,WAAK,WAAL;AACE,oBAAY,GAAG,SAAf;AACA;;AACF,WAAK,eAAL;AACE,oBAAY,GAAG,aAAf;AACA;AATJ;;AAWA,WAAO,KAAK,UAAL,CACJ,iBADI,CACc;AACjB,SAAG,EAAE,KAAK,GAAL,GAAW,YADC;AAEjB,YAAM,EAAE,KAFS;AAGjB,aAAO,EAAE;AACP,wBAAgB,kBADT;AAEP,qBAAa,EAAE,KAAK;AAFb;AAHQ,KADd,EASJ,IATI,CASC,KAAK,cATN,CAAP;AAUD,GAvBD;;AAyBA,2DAAe,MAAf,EAAqB;AACnB,WAAO,6CAAC,CAAC,GAAF,CAAM,MAAM,CAAC,IAAb,EAAmB,UAAC,CAAD,EAAI,CAAJ,EAAK;AAC7B,aAAO;AACL,YAAI,EAAE,CAAC,CAAC,IADH;AAEL,aAAK,EAAE,CAAC,CAAC;AAFJ,OAAP;AAID,KALM,CAAP;AAMD,GAPD;;AAeA,6DAAiB,MAAjB,EAAyB,MAAzB,EAA+B;AAC7B,QAAI,SAAS,GAAG,UAAhB;;AACA,YAAQ,MAAM,CAAC,UAAf;AACE,WAAK,YAAL;AACE,iBAAS,GAAG,UAAZ;AACA;;AACF,WAAK,WAAL;AACE,iBAAS,GAAG,SAAZ;AACA;;AACF,WAAK,eAAL;AACE,iBAAS,GAAG,aAAZ;AACA;AATJ;;AAWA,WAAO,KAAK,UAAL,CACJ,iBADI,CACc;AACjB,SAAG,EAAE,KAAK,GAAL,GAAW,SADC;AAEjB,YAAM,EAAE,KAFS;AAGjB,aAAO,EAAE;AACP,wBAAgB,kBADT;AAEP,qBAAa,EAAE,KAAK;AAFb;AAHQ,KADd,EASJ,IATI,CASC,KAAK,cATN,CAAP;AAUD,GAvBD;;AAyBA,kDAAM,OAAN,EAAa;AACX,QAAM,OAAO,GAAU,EAAvB;AAEA,QAAM,OAAO,GAAG,IAAhB;AACA,QAAM,YAAY,GAAG,IAArB;AACA,WAAO,CAAC,OAAR,CAAgB,OAAhB,CAAwB,kBAAM;AAK5B,aAAO,CAAC,IAAR,CAAa,MAAb;AACD,KAND;AAOA,QAAI,QAAQ,GAAG,OAAO,CAAC,QAAvB;AAGA,QAAM,EAAE,GAAG,iFAAc,CAAC,QAAD,CAAzB;;AACA,QAAI,iFAAc,CAAC,QAAD,CAAd,GAA2B,KAAK,eAApC,EAAqD;AAEnD,cAAQ,GAAG,+EAAY,CAAC,KAAK,eAAL,GAAuB,IAAxB,CAAvB;AAED;;AAED,QAAM,QAAQ,GAAG,KAAK,CAAL,CAAO,KAAP,EAAjB;;AAGA,QAAI,OAAO,CAAC,MAAR,KAAmB,CAAvB,EAA0B;AAExB,cAAQ,CAAC,OAAT,CAAiB;AACf,YAAI,EAAE;AADS,OAAjB;AAGA,aAAO,QAAQ,CAAC,OAAhB;AACD;;AACD,QAAM,UAAU,GAAG,KAAK,CAAL,CAAO,GAAP,CAAW;AAC5B,WAAK,EAAE,OAAO,CAAC,mBAAR,CAA4B,OAA5B;AADqB,KAAX,CAAnB;AAGA,cAAU,CAAC,IAAX,CAAgB,mBAAO;AAErB,cAAQ,CAAC,OAAT,CAAiB,OAAO,CAAC,KAAzB;AACD,KAHD;AAIA,WAAO,QAAQ,CAAC,OAAhB;AACD,GAxCD;;AA0CA,4DAAgB,YAAhB,EAA8B,OAA9B,EAAqC;AAGnC,QAAM,QAAQ,GAAG,KAAK,CAAL,CAAO,KAAP,EAAjB;AACA,QAAM,MAAM,GAAG,EAAf;AACA,QAAM,WAAW,GAAG;AAClB,YAAM,EAAE,KADU;AAElB,SAAG,EAAE,KAAK,GAAL,GAAW,OAFE;AAGlB,YAAM,EAAE,MAHU;AAIlB,aAAO,EAAE;AACP,wBAAgB,kBADT;AAEP,qBAAa,EAAE,KAAK;AAFb;AAJS,KAApB;AASA,SAAK,UAAL,CAAgB,iBAAhB,CAAkC,WAAlC,EAA+C,IAA/C,CACE,oBAAQ;AACN,UAAI,OAAO,GAAG,IAAd;;AACA,UAAI,QAAQ,CAAC,MAAT,KAAoB,GAAxB,EAA6B;AAC3B,eAAO,CAAC,GAAR,CAAY,UAAZ;AACA,eAAO,GAAG,IAAI,KAAJ,CAAU,iBAAiB,QAAQ,CAAC,MAApC,CAAV;AACA,gBAAQ,CAAC,MAAT,CAAgB,OAAhB;AACD;;AACD,UAAI,CAAC,QAAQ,CAAC,IAAd,EAAoB;AAClB,eAAO,GAAG,IAAI,KAAJ,CAAU,SAAV,CAAV;AACA,gBAAQ,CAAC,MAAT,CAAgB,OAAhB;AACD;;AAID,cAAQ,CAAC,OAAT,CAAiB;AAAE,cAAM,EAAE,YAAV;AAAwB,gBAAQ,EAAE;AAAlC,OAAjB;AACD,KAhBH,EAiBE,oBAAQ;AACN,aAAO,CAAC,KAAR,CAAc,mCAAd,EAAmD,QAAQ,CAAC,IAAT,GAAgB,QAAQ,CAAC,IAAT,CAAc,OAA9B,GAAwC,QAA3F;AACA,UAAM,KAAK,GAAG,IAAI,KAAJ,CAAU,qBAAV,CAAd;AACA,cAAQ,CAAC,MAAT,CAAgB,KAAhB;AACD,KArBH;AAwBA,WAAO,QAAQ,CAAC,OAAhB;AACD,GAvCD;;AA8CA,sDAAU,SAAV,EAAmB;AACjB,WAAO,KAAK,gBAAL,CAAsB,SAAtB,CAAP;AACD,GAFD;;AASA,gEAAoB,cAApB,EAAkC;AAChC,QAAM,QAAQ,GAAG,KAAK,CAAL,CAAO,KAAP,EAAjB;AACA,QAAM,SAAS,GAAG,EAAlB;AACA,QAAM,OAAO,GAAG,IAAhB;AAGA,QAAI,KAAK,GAAG,CAAZ;;AACA,WAAO,KAAK,GAAG,cAAc,CAAC,MAA9B,EAAsC;AACpC,UAAM,OAAO,GAAG,cAAc,CAAC,KAAD,CAA9B;AACA,UAAM,OAAO,GAAG,KAAK,iBAAL,CAAuB,OAAvB,CAAhB;;AACA,WAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,OAAO,CAAC,MAA5B,EAAoC,CAAC,EAArC,EAAyC;AACvC,iBAAS,CAAC,IAAV,CAAe,OAAO,CAAC,eAAR,CAAwB,OAAxB,EAAiC,OAAO,CAAC,CAAD,CAAxC,CAAf;AACD;;AACD,WAAK;AACN;;AASD,SAAK,CAAL,CAAO,GAAP,CAAW,SAAX,EAAsB,IAAtB,CACE,mBAAO;AACL,UAAM,QAAQ,GAAG;AACf,YAAI,EAAE;AADS,OAAjB;AAGA,UAAI,CAAC,GAAG,CAAR;;AAEA,aAAO,CAAC,GAAG,OAAO,CAAC,MAAnB,EAA2B;AACzB,gBAAQ,CAAC,IAAT,CAAc,IAAd,CAAmB,OAAO,CAAC,CAAD,CAA1B;AACA,SAAC;AACF;;AAUD,cAAQ,CAAC,OAAT,CAAiB,OAAO,CAAC,SAAR,CAAkB,QAAlB,CAAjB;AACD,KArBH,EAsBE,kBAAM;AACJ,cAAQ,CAAC,MAAT,CAAgB,MAAhB;AACD,KAxBH,EAyBE,mBAAO;AACL,cAAQ,CAAC,MAAT,CAAgB,OAAhB;AACD,KA3BH;AA6BA,WAAO,QAAQ,CAAC,OAAhB;AACD,GArDD;;AAuDA;AACE,WAAO,KAAK,UAAL,CACJ,iBADI,CACc;AACjB,SAAG,EAAE,KAAK,GAAL,GAAW,OADC;AAEjB,aAAO,EAAE;AACP,wBAAgB,kBADT;AAEP,qBAAa,EAAE,KAAK;AAFb,OAFQ;AAMjB,YAAM,EAAE;AANS,KADd,EASJ,IATI,CASC,oBAAQ;AACZ,aAAO,QAAQ,CAAC,IAAhB;AACD,KAXI,CAAP;AAYD,GAbD;;AAoBA;AACE,WAAO,KAAK,UAAL,CACJ,iBADI,CACc;AACjB,SAAG,EAAE,KAAK,GAAL,GAAW,OADC;AAEjB,aAAO,EAAE;AACP,wBAAgB,kBADT;AAEP,qBAAa,EAAE,KAAK;AAFb,OAFQ;AAMjB,YAAM,EAAE;AANS,KADd,EASJ,IATI,CASC,UAAC,QAAD,EAA6B;AACjC,UAAI,QAAQ,CAAC,MAAT,KAAoB,GAAxB,EAA6B;AAC3B,eAAO;AACL,gBAAM,EAAE,SADH;AAEL,iBAAO,EAAE,wBAFJ;AAGL,eAAK,EAAE;AAHF,SAAP;AAKD;;AACD,aAAO;AACL,cAAM,EAAE,OADH;AAEL,eAAO,EAAE,4BAFJ;AAGL,aAAK,EAAE;AAHF,OAAP;AAKD,KAtBI,CAAP;AAuBD,GAxBD;;AAyBF;AAAC,CApyBD;;;;;;;;;;;;;;ACpBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;;AAEA;AAAA,wCAEC;;AADQ,0CAAc,mDAAd;AACT;AAAC,CAFD;;;;;;;;;;;;;;;;;;;;ACFA;;AAEA;AAAkD;;AAchD,wCAAY,MAAZ,EAAoB,SAApB,EAA+B,WAA/B,EAA4C,YAA5C,EAAwD;AAAxD,gBACE,kBAAM,MAAN,EAAc,SAAd,KAAwB,IAD1B;;AAEE,SAAI,CAAC,KAAL,GAAa,MAAb;AACA,SAAI,CAAC,YAAL,GAAoB,YAApB;AACA,SAAI,CAAC,WAAL,GAAmB,WAAnB;AAEA,SAAI,CAAC,WAAL,GAAmB,CACjB;AACE,UAAI,EAAE,YADR;AAEE,WAAK,EAAE;AAFT,KADiB,EAKjB;AACE,UAAI,EAAE,oBADR;AAEE,WAAK,EAAE;AAFT,KALiB,EASjB;AACE,UAAI,EAAE,qBADR;AAEE,WAAK,EAAE;AAFT,KATiB,EAajB;AACE,UAAI,EAAE,SADR;AAEE,WAAK,EAAE;AAFT,KAbiB,EAiBjB;AACE,UAAI,EAAE,iBADR;AAEE,WAAK,EAAE;AAFT,KAjBiB,EAqBjB;AACE,UAAI,EAAE,uBADR;AAEE,WAAK,EAAE;AAFT,KArBiB,EAyBjB;AACE,UAAI,EAAE,gBADR;AAEE,WAAK,EAAE;AAFT,KAzBiB,EA6BjB;AACE,UAAI,EAAE,QADR;AAEE,WAAK,EAAE;AAFT,KA7BiB,EAiCjB;AACE,UAAI,EAAE,gBADR;AAEE,WAAK,EAAE;AAFT,KAjCiB,EAqCjB;AACE,UAAI,EAAE,eADR;AAEE,WAAK,EAAE;AAFT,KArCiB,EAyCjB;AACE,UAAI,EAAE,oBADR;AAEE,WAAK,EAAE;AAFT,KAzCiB,EA6CjB;AACE,UAAI,EAAE,iBADR;AAEE,WAAK,EAAE;AAFT,KA7CiB,EAiDjB;AACE,UAAI,EAAE,kBADR;AAEE,WAAK,EAAE;AAFT,KAjDiB,EAqDjB;AACE,UAAI,EAAE,cADR;AAEE,WAAK,EAAE;AAFT,KArDiB,EAyDjB;AACE,UAAI,EAAE,kBADR;AAEE,WAAK,EAAE;AAFT,KAzDiB,EA6DjB;AACE,UAAI,EAAE,SADR;AAEE,WAAK,EAAE;AAFT,KA7DiB,CAAnB;AAwEA,SAAI,CAAC,cAAL,GAAsB;AACpB,gBAAU,EAAE,CACV;AACE,YAAI,EAAE,gBADR;AAEE,aAAK,EAAE;AAFT,OADU,CADQ;AAOpB,qBAAe,EAAE,CACf;AACE,YAAI,EAAE,gBADR;AAEE,aAAK,EAAE;AAFT,OADe,CAPG;AAapB,yBAAmB,EAAE,CACnB;AACE,YAAI,EAAE,gBADR;AAEE,aAAK,EAAE;AAFT,OADmB,EAKnB;AACE,YAAI,EAAE,YADR;AAEE,aAAK,EAAE;AAFT,OALmB,EASnB;AACE,YAAI,EAAE,YADR;AAEE,aAAK,EAAE;AAFT,OATmB,EAanB;AACE,YAAI,EAAE,qBADR;AAEE,aAAK,EAAE;AAFT,OAbmB,CAbD;AA+BpB,aAAO,EAAE,CACP;AACE,YAAI,EAAE,aADR;AAEE,aAAK,EAAE;AAFT,OADO,EAKP;AACE,YAAI,EAAE,YADR;AAEE,aAAK,EAAE;AAFT,OALO,CA/BW;AAyCpB,wBAAkB,EAAE,CAClB;AACE,YAAI,EAAE,aADR;AAEE,aAAK,EAAE;AAFT,OADkB,CAzCA;AA+CpB,oBAAc,EAAE,CACd;AACE,YAAI,EAAE,aADR;AAEE,aAAK,EAAE;AAFT,OADc,CA/CI;AAqDpB,kBAAY,EAAE,CACZ;AACE,YAAI,EAAE,aADR;AAEE,aAAK,EAAE;AAFT,OADY,EAKZ;AACE,YAAI,EAAE,YADR;AAEE,aAAK,EAAE;AAFT,OALY,CArDM;AA+DpB,YAAM,EAAE,CACN;AACE,YAAI,EAAE,aADR;AAEE,aAAK,EAAE;AAFT,OADM,EAKN;AACE,YAAI,EAAE,YADR;AAEE,aAAK,EAAE;AAFT,OALM,CA/DY;AAyEpB,iBAAW,EAAE,CACX;AACE,YAAI,EAAE,aADR;AAEE,aAAK,EAAE;AAFT,OADW,EAKX;AACE,YAAI,EAAE,YADR;AAEE,aAAK,EAAE;AAFT,OALW,CAzEO;AAmFpB,mBAAa,EAAE,CACb;AACE,YAAI,EAAE,aADR;AAEE,aAAK,EAAE;AAFT,OADa,EAKb;AACE,YAAI,EAAE,YADR;AAEE,aAAK,EAAE;AAFT,OALa,CAnFK;AA6FpB,wBAAkB,EAAE,CAClB;AACE,YAAI,EAAE,aADR;AAEE,aAAK,EAAE;AAFT,OADkB,EAKlB;AACE,YAAI,EAAE,YADR;AAEE,aAAK,EAAE;AAFT,OALkB,CA7FA;AAuGpB,kBAAY,EAAE,CACZ;AACE,YAAI,EAAE,aADR;AAEE,aAAK,EAAE;AAFT,OADY,EAKZ;AACE,YAAI,EAAE,YADR;AAEE,aAAK,EAAE;AAFT,OALY,CAvGM;AAiHpB,mBAAa,EAAE,CACb;AACE,YAAI,EAAE,aADR;AAEE,aAAK,EAAE;AAFT,OADa,EAKb;AACE,YAAI,EAAE,YADR;AAEE,aAAK,EAAE;AAFT,OALa,CAjHK;AA2HpB,uBAAiB,EAAE,CACjB;AACE,YAAI,EAAE,aADR;AAEE,aAAK,EAAE;AAFT,OADiB,EAKjB;AACE,YAAI,EAAE,YADR;AAEE,aAAK,EAAE;AAFT,OALiB,CA3HC;AAqIpB,2BAAqB,EAAE,CACrB;AACE,YAAI,EAAE,aADR;AAEE,aAAK,EAAE;AAFT,OADqB,EAKrB;AACE,YAAI,EAAE,YADR;AAEE,aAAK,EAAE;AAFT,OALqB,CArIH;AA+IpB,kBAAY,EAAE,CACZ;AACE,YAAI,EAAE,aADR;AAEE,aAAK,EAAE;AAFT,OADY,EAKZ;AACE,YAAI,EAAE,YADR;AAEE,aAAK,EAAE;AAFT,OALY;AA/IM,KAAtB;AA4JA,SAAI,CAAC,WAAL,GAAmB;AACjB,gBAAU,EAAE,CACV;AACE,YAAI,EAAE,kBADR;AAEE,aAAK,EAAE,QAFT;AAGE,YAAI,EAAE;AAHR,OADU,EAMV;AACE,YAAI,EAAE,mBADR;AAEE,aAAK,EAAE,SAFT;AAGE,YAAI,EAAE;AAHR,OANU,EAWV;AACE,YAAI,EAAE,gBADR;AAEE,aAAK,EAAE,UAFT;AAGE,YAAI,EAAE;AAHR,OAXU,EAgBV;AACE,YAAI,EAAE,UADR;AAEE,aAAK,EAAE,IAFT;AAGE,YAAI,EAAE;AAHR,OAhBU,EAqBV;AACE,YAAI,EAAE,aADR;AAEE,aAAK,EAAE,OAFT;AAGE,YAAI,EAAE;AAHR,OArBU,EA0BV;AACE,YAAI,EAAE,eADR;AAEE,aAAK,EAAE,SAFT;AAGE,YAAI,EAAE;AAHR,OA1BU,EA+BV;AACE,YAAI,EAAE,eADR;AAEE,aAAK,EAAE,SAFT;AAGE,YAAI,EAAE;AAHR,OA/BU,EAoCV;AACE,YAAI,EAAE,cADR;AAEE,aAAK,EAAE,OAFT;AAGE,YAAI,EAAE;AAHR,OApCU,CADK;AA2CjB,wBAAkB,EAAE,CAClB;AACE,YAAI,EAAE,aADR;AAEE,aAAK,EAAE;AAFT,OADkB,EAKlB;AACE,YAAI,EAAE,mBADR;AAEE,aAAK,EAAE;AAFT,OALkB,CA3CH;AAqDjB,aAAO,EAAE,CACP;AACE,YAAI,EAAE,aADR;AAEE,aAAK,EAAE;AAFT,OADO,EAKP;AACE,YAAI,EAAE,mBADR;AAEE,aAAK,EAAE;AAFT,OALO,EASP;AACE,YAAI,EAAE,OADR;AAEE,aAAK,EAAE;AAFT,OATO,CArDQ;AAmEjB,kBAAY,EAAE,CACZ;AACE,YAAI,EAAE,aADR;AAEE,aAAK,EAAE;AAFT,OADY,EAKZ;AACE,YAAI,EAAE,mBADR;AAEE,aAAK,EAAE;AAFT,OALY,EASZ;AACE,YAAI,EAAE,OADR;AAEE,aAAK,EAAE;AAFT,OATY,CAnEG;AAiFjB,YAAM,EAAE,CACN;AACE,YAAI,EAAE,aADR;AAEE,aAAK,EAAE;AAFT,OADM,EAKN;AACE,YAAI,EAAE,mBADR;AAEE,aAAK,EAAE;AAFT,OALM,EASN;AACE,YAAI,EAAE,kBADR;AAEE,aAAK,EAAE;AAFT,OATM,EAaN;AACE,YAAI,EAAE,OADR;AAEE,aAAK,EAAE;AAFT,OAbM,CAjFS;AAmGjB,iBAAW,EAAE,CACX;AACE,YAAI,EAAE,aADR;AAEE,aAAK,EAAE;AAFT,OADW,EAKX;AACE,YAAI,EAAE,mBADR;AAEE,aAAK,EAAE;AAFT,OALW,EASX;AACE,YAAI,EAAE,kBADR;AAEE,aAAK,EAAE;AAFT,OATW,EAaX;AACE,YAAI,EAAE,OADR;AAEE,aAAK,EAAE;AAFT,OAbW,CAnGI;AAqHjB,mBAAa,EAAE,CACb;AACE,YAAI,EAAE,aADR;AAEE,aAAK,EAAE;AAFT,OADa,EAKb;AACE,YAAI,EAAE,mBADR;AAEE,aAAK,EAAE;AAFT,OALa,EASb;AACE,YAAI,EAAE,kBADR;AAEE,aAAK,EAAE;AAFT,OATa,EAab;AACE,YAAI,EAAE,OADR;AAEE,aAAK,EAAE;AAFT,OAba,CArHE;AAuIjB,wBAAkB,EAAE,CAClB;AACE,YAAI,EAAE,aADR;AAEE,aAAK,EAAE;AAFT,OADkB,EAKlB;AACE,YAAI,EAAE,mBADR;AAEE,aAAK,EAAE;AAFT,OALkB,EASlB;AACE,YAAI,EAAE,kBADR;AAEE,aAAK,EAAE;AAFT,OATkB,EAalB;AACE,YAAI,EAAE,OADR;AAEE,aAAK,EAAE;AAFT,OAbkB,CAvIH;AAyJjB,kBAAY,EAAE,CACZ;AACE,YAAI,EAAE,aADR;AAEE,aAAK,EAAE;AAFT,OADY,EAKZ;AACE,YAAI,EAAE,mBADR;AAEE,aAAK,EAAE;AAFT,OALY,EASZ;AACE,YAAI,EAAE,kBADR;AAEE,aAAK,EAAE;AAFT,OATY,EAaZ;AACE,YAAI,EAAE,OADR;AAEE,aAAK,EAAE;AAFT,OAbY;AAzJG,KAAnB;AA6KA,SAAI,CAAC,cAAL,GAAsB,CACpB;AACE,UAAI,EAAE,MADR;AAEE,WAAK,EAAE;AAFT,KADoB,EAKpB;AACE,UAAI,EAAE,SADR;AAEE,WAAK,EAAE;AAFT,KALoB,EASpB;AACE,UAAI,EAAE,QADR;AAEE,WAAK,EAAE;AAFT,KAToB,EAapB;AACE,UAAI,EAAE,kBADR;AAEE,WAAK,EAAE;AAFT,KAboB,EAiBpB;AACE,UAAI,EAAE,YADR;AAEE,WAAK,EAAE;AAFT,KAjBoB,EAqBpB;AACE,UAAI,EAAE,iBADR;AAEE,WAAK,EAAE;AAFT,KArBoB,EAyBpB;AACE,UAAI,EAAE,iBADR;AAEE,WAAK,EAAE;AAFT,KAzBoB,CAAtB;AA+BA,SAAI,CAAC,gBAAL,GAAwB,CACtB;AACE,UAAI,EAAE,MADR;AAEE,WAAK,EAAE;AAFT,KADsB,EAKtB;AACE,UAAI,EAAE,OADR;AAEE,WAAK,EAAE;AAFT,KALsB,CAAxB;AAWA,SAAI,CAAC,gBAAL,GAAwB,CACtB;AACE,UAAI,EAAE,YADR;AAEE,WAAK,EAAE;AAFT,KADsB,EAKtB;AACE,UAAI,EAAE,eADR;AAEE,WAAK,EAAE;AAFT,KALsB,EAStB;AACE,UAAI,EAAE,sBADR;AAEE,WAAK,EAAE;AAFT,KATsB,EAatB;AACE,UAAI,EAAE,uBADR;AAEE,WAAK,EAAE;AAFT,KAbsB,EAiBtB;AACE,UAAI,EAAE,yBADR;AAEE,WAAK,EAAE;AAFT,KAjBsB,EAqBtB;AACE,UAAI,EAAE,qBADR;AAEE,WAAK,EAAE;AAFT,KArBsB,EAyBtB;AACE,UAAI,EAAE,wBADR;AAEE,WAAK,EAAE;AAFT,KAzBsB,EA6BtB;AACE,UAAI,EAAE,sBADR;AAEE,WAAK,EAAE;AAFT,KA7BsB,EAiCtB;AACE,UAAI,EAAE,qBADR;AAEE,WAAK,EAAE;AAFT,KAjCsB,EAqCtB;AACE,UAAI,EAAE,sBADR;AAEE,WAAK,EAAE;AAFT,KArCsB,EAyCtB;AACE,UAAI,EAAE,wBADR;AAEE,WAAK,EAAE;AAFT,KAzCsB,EA6CtB;AACE,UAAI,EAAE,sBADR;AAEE,WAAK,EAAE;AAFT,KA7CsB,EAiDtB;AACE,UAAI,EAAE,wBADR;AAEE,WAAK,EAAE;AAFT,KAjDsB,EAqDtB;AACE,UAAI,EAAE,uBADR;AAEE,WAAK,EAAE;AAFT,KArDsB,CAAxB;AA0DA,SAAI,CAAC,MAAL,CAAY,eAAZ,GAA8B,KAAI,CAAC,MAAL,CAAY,eAAZ,IAA+B,OAA7D;AACA,SAAI,CAAC,MAAL,CAAY,eAAZ,GAA8B,KAAI,CAAC,MAAL,CAAY,eAAZ,IAA+B,kBAA7D;AAEA,SAAI,CAAC,MAAL,CAAY,aAAZ,GAA4B,KAAI,CAAC,MAAL,CAAY,aAAZ,IAA6B,MAAzD;AAEA,SAAI,CAAC,MAAL,CAAY,UAAZ,GAAyB,KAAI,CAAC,MAAL,CAAY,UAAZ,IAA0B,QAAnD;AAEA,SAAI,CAAC,MAAL,CAAY,UAAZ,GAAyB,KAAI,CAAC,MAAL,CAAY,UAAZ,IAA0B,EAAnD;;AACD;;AAOD,qEAAgB,SAAhB,EAAyB;AACvB,QAAI,KAAK,MAAL,CAAY,UAAhB,EAA4B;AAC1B,WAAK,MAAL,CAAY,UAAZ,CAAuB,MAAvB,CAA8B,KAAK,MAAL,CAAY,UAAZ,CAAuB,OAAvB,CAA+B,SAA/B,CAA9B,EAAyE,CAAzE;AACA,WAAK,SAAL,CAAe,OAAf;AACD;AACF,GALD;;AAUA;AACE,QAAI,CAAC,KAAK,MAAL,CAAY,UAAjB,EAA6B;AAC3B,WAAK,MAAL,CAAY,UAAZ,GAAyB,EAAzB;AACD;;AACD,QAAM,uBAAuB,GAAG,KAAK,cAAL,CAAoB,KAAK,MAAL,CAAY,UAAhC,CAAhC;AACA,QAAM,oBAAoB,GAAG,uBAAuB,CAAC,CAAD,CAAvB,CAA2B,KAAxD;AACA,SAAK,MAAL,CAAY,UAAZ,CAAuB,IAAvB,CAA4B;AAC1B,UAAI,EAAE,IADoB;AAE1B,WAAK,EAAE,IAFmB;AAG1B,mBAAa,EAAE;AAHW,KAA5B;AAKD,GAXD;;AAkBA,wEAAmB,SAAnB,EAA4B;AAC1B,QAAI,SAAJ,EAAe;AAEb,aAAO,KAAK,UAAL,CAAgB,mBAAhB,CAAoC,KAAK,MAAzC,EAAiD,SAAjD,EAA4D,IAA5D,CAAiE,KAAK,YAAL,CAAkB,mBAAlB,CAAsC,IAAtC,CAAjE,CAAP;AACD;AACF,GALD;;AAYA,kEAAa,MAAb,EAAmB;AACjB,QAAI,KAAK,MAAL,CAAY,OAAhB,EAAyB;AACvB,WAAK,MAAL,CAAY,OAAZ,CAAoB,MAApB,CAA2B,KAAK,MAAL,CAAY,OAAZ,CAAoB,OAApB,CAA4B,MAA5B,CAA3B,EAAgE,CAAhE;AACA,WAAK,SAAL,CAAe,OAAf;AACD;AACF,GALD;;AAUA;AACE,QAAI,CAAC,KAAK,MAAL,CAAY,OAAjB,EAA0B;AACxB,WAAK,MAAL,CAAY,OAAZ,GAAsB,EAAtB;AACD;;AACD,QAAM,oBAAoB,GAAG,KAAK,WAAL,CAAiB,KAAK,MAAL,CAAY,UAA7B,CAA7B;AACA,QAAM,iBAAiB,GAAG,oBAAoB,CAAC,CAAD,CAApB,CAAwB,IAAlD;AACA,SAAK,MAAL,CAAY,OAAZ,CAAoB,IAApB,CAAyB;AACvB,UAAI,EAAE,IADiB;AAEvB,WAAK,EAAE,IAFgB;AAGvB,gBAAU,EAAE;AAHW,KAAzB;AAKD,GAXD;;AAkBA,qEAAgB,MAAhB,EAAsB;AACpB,QAAI,MAAJ,EAAY;AAEV,aAAO,KAAK,UAAL,CAAgB,gBAAhB,CAAiC,KAAK,MAAtC,EAA8C,MAA9C,EAAsD,IAAtD,CAA2D,KAAK,YAAL,CAAkB,mBAAlB,CAAsC,IAAtC,CAA3D,CAAP;AACD;AACF,GALD;;AAWA;AACE,WAAO,KAAK,UAAL,CAAgB,eAAhB,CAAgC,KAAK,MAArC,EAA6C,IAA7C,CAAkD,KAAK,YAAL,CAAkB,mBAAlB,CAAsC,IAAtC,CAAlD,CAAP;AAED,GAHD;;AASA;AAEE,QAAI,KAAK,MAAL,CAAY,UAAhB,EAA4B;AAC1B,WAAK,MAAL,CAAY,UAAZ,GAAyB,EAAzB;AACD;;AACD,SAAK,gBAAL;AACD,GAND;;AAYA;AACE,SAAK,gBAAL;AACD,GAFD;;AAQA;AACE,SAAK,SAAL,CAAe,OAAf;AACD,GAFD;;AAnoBO,6CAAc,kDAAd;AAsoBT;AAAC,CAvoBD,CAAkD,iEAAlD;;;;;;;;;;;;;ACJA,wE;;;;;;;;;;;ACAA,qE;;;;;;;;;;;ACAA,oD","file":"datasource/sensu-core/module.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./datasource/sensu-core/module.ts\");\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","/**\n *\n */\nimport { getResponseForTarget } from './utils';\n\n/**\n * [convertAggregatesToDataPoints description]\n * @param  {[type]} response [description]\n * @return {[type]}        [description]\n */\nfunction convertAggregatesToDataPoints(aTarget, responses) {\n  const response = getResponseForTarget(aTarget, responses);\n  // the result has no \"datapoints\", need to create it based on the check data\n\n  // when we have a checkname and an clientName, the response is different, the\n  // data is not an array, but contains the same information, recreate and push\n  if (response.data.length === undefined) {\n    const singleData = response.data;\n    response.data = [];\n    response.data.push(singleData);\n  }\n  // storage for new data series constructed by aggregate responses\n  let newData = null;\n  for (let i = 0; i < response.data.length; i++) {\n    const anAggregate = response.data[i];\n    // checks is defined when the aggregate mode is either \"Clients\" or \"List\"\n    if (anAggregate.checks !== undefined) {\n      // create a new block of datapoints for each aggregate result json entry\n      //\n      const checkType = typeof anAggregate.checks;\n      switch (checkType) {\n        case 'number':\n          // checksType is a number, which is an aggregate list response\n          newData = convertEventDataToAggregateModeList(anAggregate, newData);\n          break;\n        case 'object':\n          // checkType is an object, which is an aggregate clients response\n          newData = convertEventDataToAggregateModeClient(anAggregate, newData);\n          break;\n      }\n      continue;\n    }\n    // clients is defined when the aggregate mode is \"Checks\"\n    if (anAggregate.clients !== undefined) {\n      newData = convertEventDataToAggregateModeChecks(anAggregate, newData);\n      continue;\n    }\n    // summary is defined when the aggregate mode is \"Results OK/WARNING/CRITICAL/UNKNOWN\"\n    if (anAggregate.summary !== undefined) {\n      newData = convertEventDataToAggregateModeResults(anAggregate, newData);\n      continue;\n    }\n\n    // this is a simple aggregate response (no mode)\n    const datapoints = [];\n    // timestamp is the query now (just use now)\n    const timestamp = Math.floor(Date.now());\n    datapoints[0] = [0, timestamp];\n    anAggregate.datapoints = datapoints;\n    // set the target to be the name of the aggregate\n    anAggregate.target = anAggregate.name;\n  }\n  if (newData !== null) {\n    // overwrite the old data field with the new expanded set\n    response.data = newData;\n  }\n  return response;\n}\n\nfunction convertEventDataToAggregateModeResults(anEvent, dataSet) {\n  const timestamp = Math.floor(Date.now());\n  if (dataSet === null) {\n    // initialize empty array\n    dataSet = [];\n  }\n  // iterate over the checks\n  for (let i = 0; i < anEvent.summary.length; i++) {\n    const aSummary = anEvent.summary[i];\n    const checkData = {\n      target: anEvent.check,\n      clients: aSummary.clients,\n      datapoints: [[aSummary.total, timestamp]],\n    };\n    dataSet.push(checkData);\n  }\n  return dataSet;\n}\n// An aggregate checks result has the format\n// {\n//    clients: [\n//      clientName\n//    ],\n//    name: checkName\n// }\nfunction convertEventDataToAggregateModeChecks(anEvent, dataSet) {\n  const timestamp = Math.floor(Date.now());\n  if (dataSet === null) {\n    // initialize empty array\n    dataSet = [];\n  }\n  // iterate over the checks\n  for (let i = 0; i < anEvent.clients.length; i++) {\n    const clientName = anEvent.clients[i];\n    const checkData = {\n      target: anEvent.name,\n      datapoints: [[clientName, timestamp]],\n    };\n    dataSet.push(checkData);\n  }\n  return dataSet;\n}\n\n// An aggregate clients result has the format\n// {\n//    checks: [\n//      checkName\n//    ],\n//    name: clientName\n// }\nfunction convertEventDataToAggregateModeClient(anEvent, dataSet) {\n  const timestamp = Math.floor(Date.now());\n  if (dataSet === null) {\n    // initialize empty array\n    dataSet = [];\n  }\n  // iterate over the checks\n  for (let i = 0; i < anEvent.checks.length; i++) {\n    const checkName = anEvent.checks[i];\n    const clientData = {\n      target: anEvent.name,\n      datapoints: [[checkName, timestamp]],\n    };\n    dataSet.push(clientData);\n  }\n  return dataSet;\n}\n// An aggregate list result has the format\n// {\n//   checks: int,\n//   clients: int,\n//   results: {\n//    critical: int,\n//    ok: int,\n//    stale: int,\n//    total: int,\n//    unknown: int,\n//    warning: int\n//   }\n// }\nfunction convertEventDataToAggregateModeList(anEvent, dataSet) {\n  if (dataSet === null) {\n    // initialize empty array\n    dataSet = [];\n  }\n  const timestamp = Math.floor(Date.now());\n  let item = {\n    target: 'checks',\n    datapoints: [[anEvent.checks, timestamp]],\n  };\n  dataSet.push(item);\n  item = {\n    target: 'clients',\n    datapoints: [[anEvent.clients, timestamp]],\n  };\n  dataSet.push(item);\n  item = {\n    target: 'critical',\n    datapoints: [[anEvent.results.critical, timestamp]],\n  };\n  dataSet.push(item);\n  item = {\n    target: 'ok',\n    datapoints: [[anEvent.results.ok, timestamp]],\n  };\n  dataSet.push(item);\n  item = {\n    target: 'stale',\n    datapoints: [[anEvent.results.stale, timestamp]],\n  };\n  dataSet.push(item);\n  item = {\n    target: 'total',\n    datapoints: [[anEvent.results.total, timestamp]],\n  };\n  dataSet.push(item);\n  item = {\n    target: 'unknown',\n    datapoints: [[anEvent.results.unknown, timestamp]],\n  };\n  dataSet.push(item);\n  item = {\n    target: 'warning',\n    datapoints: [[anEvent.results.warning, timestamp]],\n  };\n  dataSet.push(item);\n\n  return dataSet;\n}\n\nfunction convertToAggregateModeClientJSON(data, dataSet) {\n  const timestamp = Math.floor(Date.now());\n  if (dataSet === null) {\n    // initialize empty array\n    dataSet = [];\n  }\n  // iterate over the checks\n  for (let i = 0; i < data.checks.length; i++) {\n    const checkName = data.checks[i];\n    const clientData = {\n      target: data.name,\n      datapoints: [[checkName, timestamp]],\n    };\n    dataSet.push(clientData);\n  }\n  return dataSet;\n}\n\n/**\n * [convertAggregatesToJSON description]\n * @param  {[type]} response [description]\n * @param  {[type]} aTarget  [description]\n * @return {[type]}          [description]\n */\nfunction convertAggregatesToJSON(aTarget, responses) {\n  const response = getResponseForTarget(aTarget, responses);\n  let aggregateName = 'ALL';\n  if (aTarget.dimensions.length > 0) {\n    aggregateName = aTarget.dimensions[0].value;\n  }\n  for (let i = 0; i < response.data.length; i++) {\n    const item = response.data[i];\n    const datapoints = [];\n    const data = {\n      client: item.name,\n      checks: item.checks,\n      aggregate_name: aggregateName,\n    };\n    datapoints.push(data);\n    item.datapoints = datapoints;\n    item.type = 'docs';\n  }\n  return response;\n}\n\nexport {\n  convertAggregatesToDataPoints,\n  convertEventDataToAggregateModeResults,\n  convertEventDataToAggregateModeChecks,\n  convertEventDataToAggregateModeClient,\n  convertEventDataToAggregateModeList,\n  convertToAggregateModeClientJSON,\n  convertAggregatesToJSON,\n};\n","/**\n *\n */\n\nfunction getAggregateURIs(target, aggregateNames) {\n  // https://sensuapp.org/docs/0.28/api/aggregates-api.html\n  const uris = [];\n  let dimensionURI = '/aggregates';\n  let anAggregateName = null;\n  // name, name/clients, name/checks, name/results/severity\n  if (aggregateNames.length) {\n    for (let i = 0; i < aggregateNames.length; i++) {\n      anAggregateName = aggregateNames[i];\n      dimensionURI = '/aggregates/' + anAggregateName;\n      switch (target.aggregateMode) {\n        case 'checks':\n          dimensionURI = '/aggregates/' + anAggregateName + '/checks';\n          break;\n        case 'clients':\n          dimensionURI = '/aggregates/' + anAggregateName + '/clients';\n          break;\n        case 'list':\n          dimensionURI = '/aggregates/' + anAggregateName;\n          break;\n        case 'results_critical':\n          dimensionURI = '/aggregates/' + anAggregateName + '/results/critical';\n          break;\n        case 'results_ok':\n          dimensionURI = '/aggregates/' + anAggregateName + '/results/ok';\n          break;\n        case 'results_unknown':\n          dimensionURI = '/aggregates/' + anAggregateName + '/results/unknown';\n          break;\n        case 'results_warning':\n          dimensionURI = '/aggregates/' + anAggregateName + '/results/warning';\n          break;\n      }\n      uris.push(dimensionURI);\n    }\n  }\n  if (uris.length === 0) {\n    uris.push(dimensionURI);\n  }\n  return uris;\n}\n\nexport { getAggregateURIs };\n","/*\n\n */\nimport { getResponseForTarget } from './utils';\nimport { getClientsWithFilter } from './client_filters';\n\n/**\n * [convertClientsToDataPoints description]\n * @param  {[type]} response [description]\n * @return {[type]}          [description]\n */\nfunction convertClientsToDataPoints(aTarget, responses) {\n  const response = getResponseForTarget(aTarget, responses);\n\n  // the result has no \"datapoints\", need to create it based on the check data\n  // when we have a checkname and an clientName, the response is different, the\n  // data is not an array, but contains the same information, recreate and push\n  if (response.data.length === undefined) {\n    const singleData = response.data;\n    response.data = [];\n    response.data.push(singleData);\n  }\n  switch (aTarget.clientQueryMode) {\n    case 'list':\n      const filterData = [];\n      let arrClientNames = [];\n      if (aTarget.filters !== undefined && aTarget.filters.length > 0) {\n        arrClientNames = getClientsWithFilter(aTarget, response);\n        // iterate over the data and store the matching clients in the new filteredData\n        for (let i = 0; i < response.data.length; i++) {\n          // push matching client names\n          if (arrClientNames.indexOf(response.data[i].name) >= 0) {\n            filterData.push(response.data[i]);\n          }\n        }\n        // now replace data with filtered data\n        response.data = filterData;\n      }\n      for (let i = 0; i < response.data.length; i++) {\n        const data = response.data[i];\n        const datapoints = [];\n        if (data.timestamp !== undefined) {\n          datapoints[0] = [1, data.timestamp * 1000];\n        }\n        data.datapoints = datapoints;\n        // set the target\n        data.target = data.name;\n      }\n      break;\n    case 'count':\n      if (response.data.length > 0) {\n        const data = response.data[0];\n        const datapoints = [];\n        let clientCount = 0;\n        let arrClientNames = [];\n        if (aTarget.filters !== undefined && aTarget.filters.length > 0) {\n          arrClientNames = getClientsWithFilter(aTarget, response);\n          clientCount = arrClientNames.length;\n        } else {\n          clientCount = response.data.length;\n        }\n        if (data.timestamp !== undefined) {\n          datapoints[0] = [clientCount, data.timestamp * 1000];\n        }\n        data.datapoints = datapoints;\n        // set the target\n        data.address = undefined;\n        data.name = undefined;\n        data.socket = undefined;\n        data.subscriptions = undefined;\n        data.version = undefined;\n        data.target = 'ClientCount';\n        if (aTarget.aliasReplaced) {\n          data.target = aTarget.aliasReplaced;\n        }\n        response.data = [data];\n      }\n      break;\n  }\n  return response;\n}\n\n/**\n * [convertClientsToJSON description]\n * @param  {[type]} response [description]\n * @param  {[type]} aTarget  [description]\n * @return {[type]}          [description]\n */\nfunction convertClientsToJSON(aTarget, responses) {\n  const response = getResponseForTarget(aTarget, responses);\n\n  if (response.data.length === undefined) {\n    const data = response.data;\n    response.data = [];\n    response.data.push(data);\n  }\n  // start with an empty list\n  const newData = [];\n  for (let i = 0; i < response.data.length; i++) {\n    // default to adding the items, filters will set this to false as needed\n    let pushItem = true;\n    // clone it\n    const item = JSON.parse(JSON.stringify(response.data[i]));\n    // empty datapoints\n    item.datapoints = [];\n    // set the type to docs\n    item.type = 'docs';\n    //item.value = 0;\n    // if there\"s no address, it is a JIT client\n    const address = item.address;\n    if (item.address === 'unknown') {\n      item.address = 'JIT Client';\n    }\n    // check filters\n    if (aTarget.filters !== undefined) {\n      if (aTarget.filters.length !== undefined) {\n        for (let j = 0; j < aTarget.filters.length; j++) {\n          const aFilter = aTarget.filters[j];\n          switch (aFilter.filterType) {\n            case 'regex':\n              // make sure the regex is valid\n              try {\n                const flags = aFilter.filterRegexFlags;\n                const re = new RegExp(aFilter.filterRegex, flags);\n                if (re.test(item.name)) {\n                  // push this one\n                  //console.log(\"matched regex\");\n                  aFilter.filterMessage = 'OK';\n                } else {\n                  pushItem = false;\n                }\n              } catch (err) {\n                aFilter.filterMessage = 'Invalid Regular Expression';\n                //console.log(\"Invalid Regex Detected!\");\n                break;\n              }\n              break;\n            case 'field':\n              if (item.hasOwnProperty(aFilter.filterFieldName)) {\n                const fieldVal = item[aFilter.filterFieldName];\n                if (fieldVal !== aFilter.filterFieldValueReplaced) {\n                  pushItem = false;\n                }\n              } else {\n                // no field, no push\n                pushItem = false;\n              }\n              break;\n          }\n        }\n      }\n    }\n    // push into the datapoints\n    if (pushItem) {\n      //itemData.datapoints.push(itemData);\n      const entry = {\n        type: 'docs',\n        datapoints: [item],\n      };\n      newData.push(entry);\n    }\n  }\n  response.data = newData;\n  return response;\n}\n\n/**\n * [convertClientHistoryToDataPoints description]\n * @param  {[type]} response [description]\n * @return {[type]}        [description]\n */\nfunction convertClientHistoryToDataPoints(aTarget, responses) {\n  const response = getResponseForTarget(aTarget, responses);\n\n  // the result has no \"datapoints\", need to create it based on the check data\n  // when we have a checkname and an clientName, the response is different, the\n  // data is not an array, but contains the same information, recreate and push\n  //if (response.data.length === undefined) {\n  //  var singleData = response.data;\n  //  response.data = [];\n  //  response.data.push(singleData);\n  //}\n  for (let i = 0; i < response.data.length; i++) {\n    const anEvent = response.data[i];\n    const datapoints = [];\n    let startingTimestamp = 0;\n    if (anEvent.last_execution !== undefined) {\n      startingTimestamp = anEvent.last_execution - 60 * anEvent.history.length;\n    }\n    // time needs to be in MS, we get EPOCH from Sensu\n    if (anEvent.history !== undefined) {\n      for (let y = 0; y < anEvent.history.length; y++) {\n        datapoints[y] = [anEvent.history[y], (startingTimestamp + 60 * y) * 1000];\n      }\n    }\n    anEvent.datapoints = datapoints;\n    // set the target to be the check name\n    anEvent.target = 'unknown';\n    if (anEvent.name !== undefined) {\n      anEvent.target = anEvent.name;\n    }\n    if (anEvent.check !== undefined) {\n      anEvent.target = anEvent.check;\n    }\n  }\n  return response;\n}\n\n/**\n * Returns JSON with the following:\n *    #Checks\n *    #Checks silenced\n *    #Checks OK\n *    #Checks warning\n *    #Checks Critical\n *    #Clients\n *    #Clients silenced\n *    #Clients OK\n *    #Clients warning\n *    #Clients Critical\n * @param  {[type]} responses [description]\n * @return {[type]}           [description]\n */\nfunction convertClientSummaryMetricsToJSON(aTarget, responses) {\n  const response = getResponseForTarget(aTarget, responses);\n}\n\n/*\n  Client Health\n\n  Health is determined by taking the worst of the non-silenced results for a client\n\n  The \"unknown\" state can optionally be used as the worst state\n  Specifically:\n    /results/:client\n        status field is inspected for:\n        0 = OK\n        1 = WARNING\n        2 = CRITICAL\n        3 = UNKNOWN\n    /events/:client\n        status field is inspected\n\n */\n\n/**\n * [convertClientHealthToJSON description]\n * @param  {[type]} target   [description]\n * @param  {[type]} response [description]\n * @return {[type]}          [description]\n */\nfunction convertClientHealthToJSON(aTarget, responses) {\n  const response = getResponseForTarget(aTarget, responses);\n\n  const filteredData = [];\n  for (let i = 0; i < response.data.length; i++) {\n    const anEvent = response.data[i];\n    const datapoints = [];\n    //console.log(JSON.stringify(anEvent));\n    if (anEvent.check.issued !== undefined) {\n      const data = {\n        timestamp: anEvent.check.issued * 1000,\n        check_name: anEvent.check.name,\n        client: anEvent.client,\n        check: anEvent.check,\n        occurrences: anEvent.occurrences,\n        occurrences_watermark: anEvent.occurrences_watermark,\n        action: anEvent.action,\n        id: anEvent.id,\n        last_state_change: anEvent.last_state_change * 1000,\n        last_ok: anEvent.last_ok * 1000,\n        silenced: anEvent.silenced,\n        silenced_by: anEvent.silenced_by,\n      };\n      try {\n        data.check.issued = data.check.issued * 1000;\n        data.check.executed = data.check.executed * 1000;\n      } catch (err) {\n        // do nothing\n      }\n      datapoints.push(data);\n      anEvent.datapoints = datapoints;\n      delete anEvent.check;\n      delete anEvent.client;\n      anEvent.type = 'docs';\n      if (!anEvent.silenced) {\n        filteredData.push(anEvent);\n      }\n      if (anEvent.silenced && !aTarget.hideSilencedEvents) {\n        filteredData.push(anEvent);\n      }\n    }\n  }\n  response.data = filteredData;\n  //var str = JSON.stringify(response, null, 2);\n  //console.log(str);\n  return response;\n}\n\n// TODO\n//  This needs to return health of individual clients\nfunction convertClientHealthMetricsToJSON(aTarget, responses) {\n  const response = getResponseForTarget(aTarget, responses);\n}\n\nexport {\n  convertClientsToDataPoints,\n  convertClientsToJSON,\n  convertClientHistoryToDataPoints,\n  convertClientSummaryMetricsToJSON,\n  convertClientHealthToJSON,\n  convertClientHealthMetricsToJSON,\n};\n","function getClientsWithFilter(aTarget, response) {\n  const arrClientNames = [];\n  for (let i = 0; i < aTarget.filters.length; i++) {\n    const aFilter = aTarget.filters[i];\n    switch (aFilter.filterType) {\n      case 'field':\n        for (let j = 0; j < response.data.length; j++) {\n          if (response.data[j].hasOwnProperty(aFilter.filterFieldName)) {\n            const fieldVal = response.data[j][aFilter.filterFieldName];\n            if (fieldVal === aFilter.filterFieldValueReplaced) {\n              // matched field\n              if (arrClientNames.indexOf(response.data[j].name) === -1) {\n                arrClientNames.push(response.data[j].name);\n              }\n            }\n          }\n        }\n        break;\n      case 'fetch':\n        // iterate over all of the data\n        for (let j = 0; j < response.data.length; j++) {\n          if (aFilter.value === response.data[j].name) {\n            // add to list of tracked names\n            if (arrClientNames.indexOf(response.data[j].name) === -1) {\n              arrClientNames.push(response.data[j].name);\n            }\n          }\n        }\n        break;\n      case 'regex':\n        // make sure the regex is valid\n        try {\n          const flags = aFilter.filterRegexFlags;\n          const re = new RegExp(aFilter.filterRegex, flags);\n          // iterate over all of the data\n          for (let j = 0; j < response.data.length; j++) {\n            if (re.test(response.data[j].name)) {\n              // add to list of tracked names\n              if (arrClientNames.indexOf(response.data[j].name) === -1) {\n                arrClientNames.push(response.data[j].name);\n              }\n            }\n          }\n        } catch (err) {\n          aFilter.filterMessage = 'Invalid Regular Expression';\n        }\n        break;\n    }\n  }\n  return arrClientNames;\n}\n\nexport { getClientsWithFilter };\n","/*\n\n */\n\nfunction getClientsURIs(checkNames, clientNames) {\n  const uris = [];\n  let dimensionURI = '/clients';\n  // look for clientName in dimensions\n  if (clientNames.length) {\n    for (let i = 0; i < clientNames.length; i++) {\n      const aClientName = clientNames[i];\n      dimensionURI = '/clients/' + aClientName;\n      uris.push(dimensionURI);\n    }\n  }\n  if (uris.length === 0) {\n    uris.push(dimensionURI);\n  }\n  uris.push('/events');\n  uris.push('/results');\n\n  return uris;\n}\n\n/**\n * [getClientHealthURIs description]\n * @param  {[type]} clientNames [description]\n * @return {[type]}             [description]\n */\nfunction getClientHealthURIs(clientNames) {\n  const uris = [];\n  // look for clientName in dimensions\n  if (clientNames.length) {\n    for (let i = 0; i < clientNames.length; i++) {\n      const aClientName = clientNames[i];\n      const resultsURI = '/results/' + aClientName;\n      uris.push(resultsURI);\n      const eventsURI = '/events/' + aClientName;\n      uris.push(eventsURI);\n    }\n  }\n  if (uris.length === 0) {\n    uris.push('/results');\n    uris.push('/events');\n  }\n  return uris;\n}\n\n/**\n * [getClientHistoryURIs description]\n * @param  {[type]} clientNames [description]\n * @return {[type]}             [description]\n */\nfunction getClientHistoryURIs(clientNames) {\n  const uris = [];\n  let dimensionURI = '/clients';\n  // look for clientName in dimensions\n  if (clientNames.length) {\n    for (let i = 0; i < clientNames.length; i++) {\n      const aClientName = clientNames[i];\n      dimensionURI = '/clients/' + aClientName + '/history';\n      uris.push(dimensionURI);\n    }\n  }\n  if (uris.length === 0) {\n    uris.push(dimensionURI);\n  }\n  return uris;\n}\n\nexport { getClientsURIs, getClientHealthURIs, getClientHistoryURIs };\n","/**\n *\n */\nimport { getResponseForTarget } from './utils';\nimport { includeEventTarget } from './event_filters';\n/**\n * [convertEventsToDataPoints description]\n * @param  {[type]} response [description]\n * @return {[type]}        [description]\n */\nfunction convertEventsToDataPoints(aTarget, responses) {\n  const response = getResponseForTarget(aTarget, responses);\n\n  // convert history to datapoints\n\n  // the result has no \"datapoints\", need to create it based on the check data\n\n  // when we have a checkname and an clientName, the response is different, the\n  // data is not an array, but contains the same information, recreate and push\n  if (response.data.length === undefined) {\n    const singleData = response.data;\n    response.data = [];\n    response.data.push(singleData);\n  }\n  const filteredData = [];\n  for (let i = 0; i < response.data.length; i++) {\n    const anEvent = response.data[i];\n    const datapoints = [];\n    let startingTimestamp = 0;\n    // an event with client param has a timestamp at the toplevel\n    if (anEvent.timestamp !== undefined) {\n      startingTimestamp = anEvent.timestamp - 60 * anEvent.check.history.length;\n    }\n    if (anEvent.last_execution !== undefined) {\n      startingTimestamp = anEvent.last_execution - 60 * anEvent.history.length;\n    }\n    // time needs to be in MS, we get EPOCH from Sensu\n    for (let y = 0; y < anEvent.check.history.length; y++) {\n      datapoints[y] = [anEvent.check.history[y], (startingTimestamp + 60 * y) * 1000];\n    }\n    anEvent.datapoints = datapoints;\n    // set the target to be the check name\n    anEvent.target = anEvent.client.name;\n    /*\n    if (anEvent.check.name !== undefined) {\n      anEvent.target = anEvent.check.name;\n    } else {\n      anEvent.target = anEvent.check;\n    }\n    */\n    anEvent.clientName = anEvent.client.name;\n    if (includeEventTarget(aTarget, anEvent)) {\n      if (!anEvent.silenced) {\n        filteredData.push(anEvent);\n      }\n      if (anEvent.silenced && !aTarget.hideSilencedEvents) {\n        filteredData.push(anEvent);\n      }\n    }\n  }\n  const newResponse = { data: filteredData };\n\n  return newResponse;\n}\n\nfunction convertEventsToJSON(aTarget, responses) {\n  const response = getResponseForTarget(aTarget, responses);\n  // do not allow modification of response\n  //var newResponse = {};\n\n  const filteredData = [];\n  for (let i = 0; i < response.data.length; i++) {\n    const anEvent = response.data[i];\n    const datapoints = [];\n    //console.log(JSON.stringify(anEvent));\n    if (anEvent.check.issued !== undefined && includeEventTarget(aTarget, anEvent)) {\n      let clientShortname = anEvent.client.name;\n      // try to split on dot notation, take the first item\n      const parts = anEvent.client.name.split('.');\n      if (parts.length > 0) {\n        clientShortname = parts[0];\n      }\n      anEvent.client.client_short_name = clientShortname;\n      // now create text-based version of status\n      let statusText = 'UNKNOWN';\n      if (anEvent.check !== undefined && anEvent.check.status !== undefined) {\n        switch (anEvent.check.status) {\n          case 0:\n            statusText = 'OK';\n            break;\n          case 1:\n            statusText = 'WARNING';\n            break;\n          case 2:\n            statusText = 'CRITICAL';\n            break;\n          case 3:\n            statusText = 'UNKNOWN';\n            break;\n          default:\n            statusText = 'UNKNOWN';\n            break;\n        }\n      }\n      anEvent.check.status_text = statusText;\n      const data = {\n        timestamp: anEvent.check.issued * 1000,\n        check_name: anEvent.check.name,\n        client: anEvent.client,\n        check: anEvent.check,\n        occurrences: anEvent.occurrences,\n        occurrences_watermark: anEvent.occurrences_watermark,\n        action: anEvent.action,\n        id: anEvent.id,\n        last_state_change: anEvent.last_state_change * 1000,\n        last_ok: anEvent.last_ok * 1000,\n        silenced: anEvent.silenced,\n        silenced_by: anEvent.silenced_by,\n      };\n      try {\n        data.check.issued = data.check.issued * 1000;\n        data.check.executed = data.check.executed * 1000;\n      } catch (err) {\n        // do nothing\n      }\n      datapoints.push(data);\n      anEvent.datapoints = datapoints;\n      delete anEvent.check;\n      delete anEvent.client;\n      anEvent.type = 'docs';\n      if (!anEvent.silenced) {\n        filteredData.push(anEvent);\n      }\n      if (anEvent.silenced && !aTarget.hideSilencedEvents) {\n        filteredData.push(anEvent);\n      }\n    }\n  }\n  const newResponse = { data: filteredData };\n\n  //var str = JSON.stringify(newResponse, null, 2);\n  //console.log(str);\n  return newResponse;\n}\n\n/**\n * The takes /events output from Sensu and returns the following:\n * Count of WARNING, and Number Silenced\n * Count of CRITICAL, and number silenced\n * Count of UNKNOWN, and number silenced\n * Count of all Events\n * Count of all Events not Silenced\n * Count of all Silenced Events\n * Count of Clients Silenced\n * Count of Checks Silenced\n *\n * Filters are also applied\n *\n * @param  {[type]} target   [description]\n * @param  {[type]} response [description]\n * @return {[type]}          [description]\n */\nfunction convertEventsToEventMetricsJSON(aTarget, responses) {\n  const response = getResponseForTarget(aTarget, responses);\n  // timestamp is taken from first item in response\n  let timestamp = 0;\n  try {\n    timestamp = response.data[0].check.issued * 1000;\n  } catch (err) {\n    // do nothing\n  }\n  const eventMetrics = {\n    target: 'allEvents',\n    timestamp: timestamp,\n    numEvents: 0,\n    numSilenced: 0,\n    numClientsSilenced: 0,\n    numChecksSilenced: 0,\n    numWarningEvents: 0,\n    numWarningEventsSilenced: 0,\n    numCriticalEvents: 0,\n    numCriticalEventsSilenced: 0,\n    numUnknownEvents: 0,\n    numUnknownEventsSilenced: 0,\n  };\n  const clientNames = [];\n  const checkNames = [];\n  for (let i = 0; i < response.data.length; i++) {\n    const anEvent = response.data[i];\n    if (anEvent.check.issued !== undefined) {\n      if (anEvent.check !== undefined && anEvent.check.status !== undefined && includeEventTarget(aTarget, anEvent)) {\n        eventMetrics.numEvents += 1;\n        switch (anEvent.check.status) {\n          case 1:\n            eventMetrics.numWarningEvents += 1;\n            if (anEvent.silenced) {\n              eventMetrics.numWarningEventsSilenced += 1;\n              eventMetrics.numSilenced += 1;\n            }\n            break;\n          case 2:\n            eventMetrics.numCriticalEvents += 1;\n            if (anEvent.silenced) {\n              eventMetrics.numCriticalEventsSilenced += 1;\n              eventMetrics.numSilenced += 1;\n            }\n            break;\n          default:\n            eventMetrics.numUnknownEvents += 1;\n            if (anEvent.silenced) {\n              eventMetrics.numUnknownEventsSilenced += 1;\n              eventMetrics.numSilenced += 1;\n            }\n            break;\n        }\n      }\n      // store the client names to count later\n      if (clientNames.indexOf(anEvent.client.name) < 0) {\n        clientNames.push(anEvent.client.name);\n      }\n      // store the check names to count later\n      if (checkNames.indexOf(anEvent.check.name) < 0) {\n        checkNames.push(anEvent.check.name);\n      }\n      // inspect silenced_by for clientname:*, wich means the client is silenced\n      for (let i = 0; i < anEvent.silenced_by.length; i++) {\n        if (anEvent.silenced_by[i].indexOf('*') >= 0) {\n          eventMetrics.numClientsSilenced += 1;\n        } else {\n          eventMetrics.numChecksSilenced += 1;\n        }\n      }\n    }\n  }\n  eventMetrics.numClientsSilenced = clientNames.length;\n  eventMetrics.numChecksSilenced = checkNames.length;\n  response.data = [\n    {\n      target: 'allEvents',\n      timestamp: timestamp,\n      type: 'docs',\n      datapoints: [eventMetrics],\n    },\n  ];\n  //var str = JSON.stringify(response, null, 2);\n  //console.log(str);\n  //var x = response.data[0].datapoints[0][1];\n  //console.log(\"X = \" + x);\n  return response;\n}\n\n/**\n * [convertEventsToEventMetrics description]\n * @param  {[type]} aTarget   [description]\n * @param  {[type]} responses [description]\n * @return {[type]}           [description]\n */\nfunction convertEventsToEventMetrics(aTarget, responses) {\n  // find a response that matches the target\n  const response = getResponseForTarget(aTarget, responses);\n  const newResponse = { data: [] };\n  // timestamp is taken from first item in response\n  let timestamp = 0;\n  try {\n    timestamp = response.data[0].check.issued * 1000;\n  } catch (err) {\n    // do nothing\n  }\n  const eventMetrics = {\n    target: 'allEvents',\n    timestamp: timestamp,\n    numEvents: 0.0,\n    numSilenced: 0.0,\n    numClientsSilenced: 0.0,\n    numChecksSilenced: 0.0,\n    numWarningEvents: 0.0,\n    numWarningEventsSilenced: 0.0,\n    numCriticalEvents: 0.0,\n    numCriticalEventsSilenced: 0.0,\n    numUnknownEvents: 0.0,\n    numUnknownEventsSilenced: 0.0,\n  };\n  const clientNames = [];\n  const checkNames = [];\n  for (let i = 0; i < response.data.length; i++) {\n    const anEvent = response.data[i];\n    if (anEvent.check.issued !== undefined) {\n      if (anEvent.check !== undefined && anEvent.check.status !== undefined && includeEventTarget(aTarget, anEvent)) {\n        eventMetrics.numEvents += 1.0;\n        switch (anEvent.check.status) {\n          case 1:\n            eventMetrics.numWarningEvents += 1.0;\n            if (anEvent.silenced) {\n              eventMetrics.numWarningEventsSilenced += 1.0;\n              eventMetrics.numSilenced += 1.0;\n            }\n            break;\n          case 2:\n            eventMetrics.numCriticalEvents += 1.0;\n            if (anEvent.silenced) {\n              eventMetrics.numCriticalEventsSilenced += 1.0;\n              eventMetrics.numSilenced += 1.0;\n            }\n            break;\n          default:\n            eventMetrics.numUnknownEvents += 1.0;\n            if (anEvent.silenced) {\n              eventMetrics.numUnknownEventsSilenced += 1.0;\n              eventMetrics.numSilenced += 1.0;\n            }\n            break;\n        }\n      }\n      // store the client names to count later\n      if (clientNames.indexOf(anEvent.client.name) < 1.0) {\n        clientNames.push(anEvent.client.name);\n      }\n      // store the check names to count later\n      if (checkNames.indexOf(anEvent.check.name) < 1.0) {\n        checkNames.push(anEvent.check.name);\n      }\n      // inspect silenced_by for clientname:*, wich means the client is silenced\n      for (let i = 0; i < anEvent.silenced_by.length; i++) {\n        if (anEvent.silenced_by[i].indexOf('*') >= 0) {\n          eventMetrics.numClientsSilenced += 1.0;\n        } else {\n          eventMetrics.numChecksSilenced += 1.0;\n        }\n      }\n    }\n  }\n\n  let targetName = null;\n  if (aTarget.name !== undefined) {\n    targetName = aTarget.name;\n  }\n  if (aTarget.aliasReplaced !== undefined) {\n    targetName = aTarget.aliasReplaced;\n  }\n  newResponse.data = [\n    {\n      target: targetName,\n      datapoints: [[0.0, timestamp]],\n    },\n  ];\n  switch (aTarget.eventMetricMode) {\n    case 'all_events_count':\n      if (targetName === null) {\n        newResponse.data[0].target = 'all_events_count';\n      }\n      newResponse.data[0].datapoints = [[eventMetrics.numEvents, timestamp]];\n      break;\n    case 'active_events_count':\n      if (targetName === null) {\n        newResponse.data[0].target = 'active_events_count';\n      }\n      newResponse.data[0].datapoints = [[eventMetrics.numEvents - eventMetrics.numSilenced, timestamp]];\n      break;\n    case 'critical_count':\n      if (targetName === null) {\n        newResponse.data[0].target = 'critical_events_count';\n      }\n      newResponse.data[0].datapoints = [[eventMetrics.numCriticalEvents, timestamp]];\n      break;\n    case 'critical_active_count':\n      if (targetName === null) {\n        newResponse.data[0].target = 'critical_active_count';\n      }\n      newResponse.data[0].datapoints = [[eventMetrics.numCriticalEvents - eventMetrics.numCriticalEventsSilenced, timestamp]];\n      break;\n    case 'critical_silenced_count':\n      if (targetName === null) {\n        newResponse.data[0].target = 'critical_silenced_count';\n      }\n      newResponse.data[0].datapoints = [[eventMetrics.numCriticalEventsSilenced, timestamp]];\n      break;\n    case 'warning_count':\n      if (targetName === null) {\n        newResponse.data[0].target = 'warning_events_count';\n      }\n      newResponse.data[0].datapoints = [[eventMetrics.numWarningEvents, timestamp]];\n      break;\n    case 'warning_active_count':\n      if (targetName === null) {\n        newResponse.data[0].target = 'warning_active_count';\n      }\n      newResponse.data[0].datapoints = [[eventMetrics.numWarningEvents - eventMetrics.numWarningEventsSilenced, timestamp]];\n      break;\n    case 'warning_silenced_count':\n      if (targetName === null) {\n        newResponse.data[0].target = 'warning_silenced_count';\n      }\n      newResponse.data[0].datapoints = [[eventMetrics.numWarningEventsSilenced, timestamp]];\n      break;\n    case 'unknown_count':\n      if (targetName === null) {\n        newResponse.data[0].target = 'unknown_events_count';\n      }\n      newResponse.data[0].datapoints = [[eventMetrics.numUnknownEvents, timestamp]];\n      break;\n    case 'unknown_active_count':\n      if (targetName === null) {\n        newResponse.data[0].target = 'unknown_active_count';\n      }\n      newResponse.data[0].datapoints = [[eventMetrics.numUnknownEvents - eventMetrics.numUnknownEventsSilenced, timestamp]];\n      break;\n    case 'unknown_silenced_count':\n      if (targetName === null) {\n        newResponse.data[0].target = 'unknown_silenced_count';\n      }\n      newResponse.data[0].datapoints = [[eventMetrics.numUnknownEventsSilenced, timestamp]];\n      break;\n    case 'silenced_count':\n      if (targetName === null) {\n        newResponse.data[0].target = 'silenced_events_count';\n      }\n      newResponse.data[0].datapoints = [[eventMetrics.numSilenced, timestamp]];\n      break;\n    case 'clients_silenced_count':\n      if (targetName === null) {\n        newResponse.data[0].target = 'clients_silenced_count';\n      }\n      newResponse.data[0].datapoints = [[eventMetrics.numClientsSilenced, timestamp]];\n      break;\n    case 'checks_silenced_count':\n      if (targetName === null) {\n        newResponse.data[0].target = 'checks_silenced_count';\n      }\n      newResponse.data[0].datapoints = [[eventMetrics.numChecksSilenced, timestamp]];\n      break;\n    default:\n      if (targetName === null) {\n        newResponse.data[0].target = 'all_events_count';\n      }\n      newResponse.data[0].datapoints = [[eventMetrics.numEvents, timestamp]];\n      break;\n  }\n  //var str = JSON.stringify(newResponse, null, 2);\n  //console.log(str);\n  return newResponse;\n}\n\nexport { convertEventsToJSON, convertEventsToDataPoints, convertEventsToEventMetrics, convertEventsToEventMetricsJSON };\n","/**\n *\n */\n\n/**\n * No fields means it is a match\n * @param  {[type]}  target [description]\n * @return {Boolean}        [description]\n */\nfunction includeEventTarget(target, anEvent) {\n  if (target.filters === undefined) {\n    return true;\n  }\n  if (target.filters.length === 0) {\n    return true;\n  }\n  for (let i = 0; i < target.filters.length; i++) {\n    const aFilter = target.filters[i];\n    switch (aFilter.filterType) {\n      case 'field':\n        // filterFieldName\n        // filterFieldValue\n        if (anEvent.client.hasOwnProperty(aFilter.filterFieldName)) {\n          // matched field, check value\n          const aVal = anEvent.client[aFilter.filterFieldName];\n          if (aVal === aFilter.filterFieldValueReplaced) {\n            return true;\n          }\n        }\n        break;\n    }\n  }\n  return false;\n}\n\nexport { includeEventTarget };\n","/**\n *\n */\n\nfunction getEventsURIs(checkNames, clientNames) {\n  // https://sensuapp.org/docs/0.28/api/events-api.html\n  const uris = [];\n  let dimensionURI = '/events';\n  let aClientName = null;\n  let aCheckName = null;\n  const anAggregateName = null;\n  if (clientNames.length) {\n    for (let i = 0; i < clientNames.length; i++) {\n      aClientName = clientNames[i];\n      dimensionURI = '/events/' + aClientName;\n      uris.push(dimensionURI);\n    }\n  }\n  if (checkNames.length && clientNames.length) {\n    for (let i = 0; i < clientNames.length; i++) {\n      aClientName = clientNames[i];\n      for (let j = 0; j < checkNames.length; j++) {\n        aCheckName = checkNames[i];\n        dimensionURI = '/events/' + aClientName + '/' + aCheckName;\n        uris.push(dimensionURI);\n      }\n    }\n  }\n  if (uris.length === 0) {\n    uris.push(dimensionURI);\n  }\n  return uris;\n}\n\nexport { getEventsURIs };\n","import { getResponseForTarget } from './utils';\n\nfunction convertResultsToTable(aTarget, responses) {\n  const response = getResponseForTarget(aTarget, responses);\n\n  // the result has no \"datapoints\", need to create it based on the check data\n  // when we have a checkname and a clientName, the response is different, the\n  // data is not an array, but contains the same information, recreate and push\n  if (response.data.length === undefined) {\n    const singleData = response.data;\n    response.data = [];\n    response.data.push(singleData);\n  }\n  // this will be collapsed into table format, where the columns are predefined\n  // and each row is a response formatted to the columns\n  const rowData = [];\n  for (let i = 0; i < response.data.length; i++) {\n    const rowInfo = response.data[i];\n    const aRow = [\n      rowInfo.check.issued * 1000,\n      rowInfo.client,\n      rowInfo.check.name,\n      rowInfo.check.status,\n      rowInfo.check.issued * 1000,\n      rowInfo.check.executed * 1000,\n      rowInfo.check.output,\n      rowInfo.check.type,\n      rowInfo.check.thresholds.warning,\n      rowInfo.check.thresholds.critical,\n    ];\n    // now push into rowData\n    rowData.push(aRow);\n  }\n  // collapse everything into data[0]\n  const anEvent = response.data[0];\n  const datapoints = [];\n  datapoints[0] = [anEvent.check.status, anEvent.check.issued * 1000];\n  anEvent.datapoints = datapoints;\n  anEvent.type = 'table';\n  anEvent.columns = [\n    { text: 'Time', type: 'date' },\n    { text: 'client' },\n    { text: 'check.name' },\n    { text: 'check.status' },\n    { text: 'check.issued', type: 'date' },\n    { text: 'check.executed', type: 'date' },\n    { text: 'check.output' },\n    { text: 'check.type' },\n    { text: 'check.thresholds.warning' },\n    { text: 'check.thresholds.critical' },\n  ];\n  anEvent.rows = rowData;\n  // truncate the rest\n  response.data = [anEvent];\n  //var str = JSON.stringify(response, null, 2);\n  //console.log(str);\n  return response;\n}\n\n/*\nResponse come back as:\n{\n\"client\": \"p3-graphite-t1\",\n\"check\": {\n  \"thresholds\": {\n    \"warning\": 120,\n    \"critical\": 180\n  },\n  \"name\": \"keepalive\",\n  \"issued\": 1482067284,\n  \"executed\": 1482067284,\n  \"output\": \"Keepalive sent from client 3 seconds ago\",\n  \"status\": 0,\n  \"type\": \"standard\"\n}\n}\n */\nfunction convertResultsToJSON(aTarget, responses) {\n  const response = getResponseForTarget(aTarget, responses);\n\n  for (let i = 0; i < response.data.length; i++) {\n    const anEvent = response.data[i];\n    const datapoints = [];\n    if (anEvent.check.issued !== undefined) {\n      const data = {\n        timestamp: anEvent.check.issued * 1000,\n        message: anEvent.check.name,\n        client: anEvent.client,\n        check: {\n          name: anEvent.check.name,\n          issued: anEvent.check.issued * 1000,\n          executed: anEvent.check.executed * 1000,\n          output: anEvent.check.output,\n          status: anEvent.check.status,\n          type: anEvent.check.type,\n        },\n      };\n      datapoints.push(data);\n      anEvent.datapoints = datapoints;\n      delete anEvent.check;\n      delete anEvent.client;\n      anEvent.type = 'docs';\n    }\n  }\n  //var str = JSON.stringify(response, null, 2);\n  //console.log(str);\n  return response;\n}\n\n/**\n * [convertResultsToDataPoints description]\n * @param  {[type]} response [description]\n * @return {[type]}        [description]\n */\nfunction convertResultsToDataPoints(aTarget, responses) {\n  const response = getResponseForTarget(aTarget, responses);\n\n  // the result has no \"datapoints\", need to create it based on the check data\n  // when we have a checkname and an clientName, the response is different, the\n  // data is not an array, but contains the same information, recreate and push\n  if (response.data.length === undefined) {\n    const singleData = response.data;\n    response.data = [];\n    response.data.push(singleData);\n  }\n  for (let i = 0; i < response.data.length; i++) {\n    const anEvent = response.data[i];\n    //var str = JSON.stringify(anEvent, null, 2);\n    //console.log(str);\n    const datapoints = [];\n    if (anEvent.check.issued !== undefined) {\n      datapoints[0] = [anEvent.check.status, anEvent.check.issued * 1000];\n      // the duration is here...\n      // datapoints[0] = [anEvent.check.duration, (anEvent.check.issued * 1000)];\n    }\n    anEvent.datapoints = datapoints;\n    // set the target to be the check name\n    if (anEvent.check.name !== undefined) {\n      anEvent.target = anEvent.check.name;\n    } else {\n      anEvent.target = anEvent.check;\n    }\n  }\n  return response;\n}\n\nexport { convertResultsToTable, convertResultsToDataPoints, convertResultsToJSON };\n","function getResultURIs(checkNames, clientNames) {\n  const uris = [];\n  let dimensionURI = '/results';\n  let aClientName = null;\n  let aCheckName = null;\n  const anAggregateName = null;\n  if (clientNames.length) {\n    for (let i = 0; i < clientNames.length; i++) {\n      aClientName = clientNames[i];\n      dimensionURI = '/results/' + aClientName;\n      uris.push(dimensionURI);\n    }\n  }\n  if (checkNames.length && clientNames.length) {\n    for (let i = 0; i < clientNames.length; i++) {\n      aClientName = clientNames[i];\n      for (let j = 0; j < checkNames.length; j++) {\n        aCheckName = checkNames[i];\n        dimensionURI = '/results/' + aClientName + '/' + aCheckName;\n        uris.push(dimensionURI);\n      }\n    }\n  }\n  if (uris.length === 0) {\n    uris.push(dimensionURI);\n  }\n  return uris;\n}\n\nexport { getResultURIs };\n","function getResponseForTarget(aTarget, responses) {\n  // find a response that matches the target\n  const response = {\n    data: [],\n  };\n  for (let i = 0; i < responses.data.length; i++) {\n    if (responses.data[i].target === aTarget) {\n      // this is the response to convert\n      response.data = responses.data[i].response.data;\n      break;\n    }\n  }\n  return response;\n}\n\nexport { getResponseForTarget };\n","export class ConfigCtrl {\n  static templateUrl = 'datasource/sensu-core/partials/config.html';\n}\n","import angular from 'angular';\n\nimport _ from 'lodash';\n\nimport { interval_to_ms, secondsToHms } from 'grafana/app/core/utils/kbn';\n\nimport { getAggregateURIs } from './api/aggregate_requests';\nimport { convertAggregatesToDataPoints, convertAggregatesToJSON } from './api/aggregate_converters';\nimport { getClientsURIs, getClientHealthURIs, getClientHistoryURIs } from './api/client_requests';\nimport {\n  convertClientsToDataPoints,\n  convertClientsToJSON,\n  convertClientHealthToJSON,\n  convertClientHistoryToDataPoints,\n} from './api/client_converters';\nimport { getEventsURIs } from './api/event_requests';\nimport { convertEventsToDataPoints, convertEventsToJSON, convertEventsToEventMetrics, convertEventsToEventMetricsJSON } from './api/event_converters';\nimport { getResultURIs } from './api/result_requests';\nimport { convertResultsToJSON, convertResultsToTable } from './api/result_converters';\n\nexport class SensuCoreDatasource {\n  url: string;\n  name: string;\n  basicAuth: string;\n  withCredentials: any;\n  q: any;\n  backendSrv: any;\n  templateSrv: any;\n  uiSegmentSrv: any;\n  minimumInterval: any;\n\n  /** @ngInject */\n  constructor(instanceSettings: any, $q: any, backendSrv: any, templateSrv: any, uiSegmentSrv: any) {\n    this.url = instanceSettings.url;\n    this.name = instanceSettings.name;\n    this.basicAuth = instanceSettings.basicAuth;\n    this.withCredentials = instanceSettings.withCredentials;\n    this.q = $q;\n    this.backendSrv = backendSrv;\n    this.templateSrv = templateSrv;\n    this.uiSegmentSrv = uiSegmentSrv;\n    this.minimumInterval = 60000; // milliseconds\n  }\n\n  // Required for templating\n  // gets the clients from Sensu API\n  // https://sensuapp.org/docs/0.26/api/clients-api.html\n\n  metricFindQuery(options: any) {\n    //console.log(\"metricFindQuery entered: \" + options);\n    let isClientTags = false;\n    let isClientTagValue = false;\n    let aQuery = '/clients';\n    let tagToValue = '';\n    // substitute template vars\n    options = this.templateSrv.replaceWithText(options);\n    if (options !== undefined && options !== '') {\n      switch (true) {\n        case /clienttags/.test(options):\n          aQuery = '/clients';\n          isClientTags = true;\n          break;\n        case /clienttagvalue/.test(options):\n          aQuery = '/clients';\n          isClientTagValue = true;\n          // split out the tag from the query\n          tagToValue = options.split('tag=')[1];\n          break;\n        default:\n          aQuery = options;\n      }\n      // make sure there is a leading slash\n      if (!aQuery.startsWith('/', 0)) {\n        aQuery = '/' + aQuery;\n      }\n    }\n    const thisRef = this;\n    return this.backendSrv\n      .datasourceRequest({\n        url: this.url + aQuery,\n        data: options,\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: this.basicAuth,\n        },\n      })\n      .then((response: any) => {\n        //thisRef.clientQueryTags = _this.generateClientQueryTags(response);\n        if (isClientTags) {\n          return thisRef.generateClientQueryTags(response);\n        }\n        if (isClientTagValue) {\n          return thisRef.getClientQueryTagValue(response, tagToValue);\n        }\n        return thisRef.mapToClientNameAndVersion(response);\n      });\n  }\n\n  generateClientQueryTags(response: any) {\n    const clientQueryTags = [];\n    const allTags = [];\n    const excludedTags = ['name', 'socket', 'address', 'subscriptions', 'timestamp', 'keepalive', 'keepalives', 'redact', 'version'];\n    for (let i = 0; i < response.data.length; i++) {\n      const keys = Object.keys(response.data[i]);\n      for (let j = 0; j < keys.length; j++) {\n        const keyName = keys[j];\n        if (excludedTags.indexOf(keyName) === -1) {\n          const tagValue = response.data[i][keyName];\n          const fullKeyName = keyName + '=' + tagValue;\n          if (allTags.indexOf(fullKeyName) < 0) {\n            allTags.push(fullKeyName);\n          }\n        }\n      }\n    }\n    if (allTags.length > 0) {\n      // build the tags\n      allTags.sort();\n      for (let i = 0; i < allTags.length; i++) {\n        clientQueryTags.push({\n          text: allTags[i],\n          expandable: true,\n        });\n      }\n    }\n    return clientQueryTags;\n  }\n\n  getClientQueryTagValue(response: any, tag: string) {\n    const tagSplit = tag.split('=');\n    const tagToMatch = tagSplit[0];\n    const tagValueToMatch = tagSplit[1];\n    const clientQueryTags = [];\n    const allTagValues = [];\n    for (let i = 0; i < response.data.length; i++) {\n      const keys = Object.keys(response.data[i]);\n      for (let j = 0; j < keys.length; j++) {\n        const keyName = keys[j];\n        if (tagToMatch === keyName) {\n          // this can be a value or an array inside, check both\n          if (typeof response.data[i][tagToMatch] !== 'string') {\n            for (let z = 0; z < response.data[i][tagToMatch].length; z++) {\n              if (response.data[i][tagToMatch][z] === tagValueToMatch) {\n                //let tagValue = response.data[i][keyName];\n                const tagValue = response.data[i].name;\n                if (allTagValues.indexOf(tagValue) < 0) {\n                  allTagValues.push(tagValue);\n                }\n              }\n            }\n          } else {\n            if (response.data[i][tagToMatch] === tagValueToMatch) {\n              //let tagValue = response.data[i][keyName];\n              const tagValue = response.data[i].name;\n              if (allTagValues.indexOf(tagValue) < 0) {\n                allTagValues.push(tagValue);\n              }\n            }\n          }\n        }\n      }\n    }\n    if (allTagValues.length > 0) {\n      // build the tags\n      for (let i = 0; i < allTagValues.length; i++) {\n        clientQueryTags.push({\n          text: allTagValues[i],\n        });\n      }\n    }\n    return clientQueryTags;\n  }\n\n  /**\n   * [mapToClientNameAndVersion description]\n   * @param  {[type]} result [description]\n   * @return {[type]}        [description]\n   */\n  mapToClientNameAndVersion(result: any) {\n    if (result.data.length === 0) {\n      return {};\n    }\n    return _.map(result.data, d => {\n      let x = {\n        text: '',\n        expandable: true,\n      };\n      try {\n        x = {\n          text: d.name,\n          expandable: true,\n        };\n      } catch (e) {\n        console.log('bad data');\n      }\n      return x;\n    });\n  }\n\n  /**\n   * [getClientNames description]\n   * @param  {[type]} dimensions [description]\n   * @return {[type]}            [description]\n   */\n  getClientNames(dimensions: any) {\n    const values = [];\n    for (let i = 0; i < dimensions.length; i++) {\n      if (dimensions[i].dimensionType === 'clientName') {\n        const aDimension = dimensions[i].value;\n        if (this.templateSrv.getVariableName(aDimension)) {\n          // template variable found, expand it\n          let templateVar = this.templateSrv.replace(aDimension);\n          if (templateVar.length > 0) {\n            // the expanded variable comes back as { value1 , value2 }\n            // or it comes back as just a value\n            if (templateVar.startsWith('{')) {\n              templateVar = templateVar.slice(1, -1);\n              const templateVars = templateVar.split(',');\n              values.push.apply(values, templateVars);\n            } else {\n              values.push(templateVar);\n            }\n          }\n        } else {\n          values.push(aDimension);\n        }\n      }\n    }\n    //console.log(values);\n    return values;\n  }\n\n  /**\n   * [getCheckNames description]\n   * @param  {[any]} dimensions [description]\n   * @return {[type]}            [description]\n   */\n  getCheckNames(dimensions: any) {\n    const values = [];\n    for (let i = 0; i < dimensions.length; i++) {\n      if (dimensions[i].dimensionType === 'checkName') {\n        const aDimension = dimensions[i].value;\n        if (this.templateSrv.getVariableName(aDimension)) {\n          // template variable found, expand it\n          let templateVar = this.templateSrv.replace(aDimension);\n          if (templateVar.length > 0) {\n            // the expanded variable comes back as { value1 , value2 }\n            // or it comes back as just a value\n            if (templateVar.startsWith('{')) {\n              templateVar = templateVar.slice(1, -1);\n              const templateVars = templateVar.split(',');\n              values.push.apply(values, templateVars);\n            } else {\n              values.push(templateVar);\n            }\n          }\n        } else {\n          values.push(aDimension);\n        }\n      }\n    }\n    return values;\n  }\n\n  /**\n   * [getAggregateNames description]\n   * @param  {[type]} dimensions [description]\n   * @return {[type]}            [description]\n   */\n  getAggregateNames(dimensions) {\n    const values = [];\n    for (let i = 0; i < dimensions.length; i++) {\n      if (dimensions[i].dimensionType === 'aggregateName') {\n        const aDimension = dimensions[i].value;\n        if (this.templateSrv.getVariableName(aDimension)) {\n          // template variable found, expand it\n          let templateVar = this.templateSrv.replace(aDimension);\n          if (templateVar.length > 0) {\n            // the expanded variable comes back as { value1 , value2 }\n            // or it comes back as just a value\n            if (templateVar.startsWith('{')) {\n              templateVar = templateVar.slice(1, -1);\n              const templateVars = templateVar.split(',');\n              values.push.apply(values, templateVars);\n            } else {\n              values.push(templateVar);\n            }\n          }\n        } else {\n          values.push(aDimension);\n        }\n      }\n    }\n    return values;\n  }\n\n  replaceFilterValues(filters) {\n    for (let i = 0; i < filters.length; i++) {\n      const aFilter = filters[i];\n      switch (aFilter.filterType) {\n        case 'field':\n          // Field filters have these properties\n          // filterFieldName\n          // filterFieldValue\n          //var aFieldName = aFilter.filterFieldName;\n          const aFieldValue = aFilter.filterFieldValue;\n          const templatedValue = this.templateSrv.replace(aFieldValue);\n          aFilter.filterFieldValueReplaced = templatedValue;\n          break;\n      }\n    }\n    return filters;\n  }\n\n  /**\n   * [getQueryURIByType description]\n   * @param  {[type]} target [description]\n   * @return {[type]}        [Array of URIs]\n   */\n  getQueryURIByType(target) {\n    let uris = [];\n    const dimensionURI = '/events';\n    let clientNames = null;\n    let checkNames = null;\n    let aggregateNames = null;\n    if (target.dimensions !== undefined) {\n      clientNames = this.getClientNames(target.dimensions);\n      checkNames = this.getCheckNames(target.dimensions);\n      aggregateNames = this.getAggregateNames(target.dimensions);\n    }\n    if (target.filters !== undefined) {\n      // convert all templated values\n      this.replaceFilterValues(target.filters);\n    }\n    if (target.alias !== undefined) {\n      target.aliasReplaced = this.templateSrv.replace(target.alias);\n    }\n    switch (target.sourceType) {\n      case 'aggregates':\n      case 'aggregates_json':\n        // https://sensuapp.org/docs/0.28/api/aggregates-api.html\n        uris = getAggregateURIs(target, aggregateNames);\n        break;\n      case 'check_subscriptions':\n        // https://sensuapp.org/docs/0.28/api/checks-api.html\n        //\n        // Returns list of subscription names, with the corresponding checks for the subscription\n        // Dimensions are:\n        //    name - name of check\n        //    aggregate - name of aggregate\n        //    type (metric|check)\n        //    source - JIT client\n        //\n        break;\n      case 'client_health_json':\n        uris = getClientHealthURIs(clientNames);\n        break;\n      case 'clients':\n      case 'clients_json':\n        // https://sensuapp.org/docs/0.28/api/clients-api.html\n        uris = getClientsURIs(checkNames, clientNames);\n        break;\n      case 'clienthistory':\n        // https://sensuapp.org/docs/0.28/api/clients-api.html\n        // look for clientName in dimensions\n        uris = getClientHistoryURIs(clientNames);\n        break;\n      case 'event_metrics':\n      case 'event_metrics_json':\n      case 'events':\n      case 'events_json':\n        // https://sensuapp.org/docs/0.28/api/events-api.html\n        uris = getEventsURIs(checkNames, clientNames);\n        break;\n      case 'results_json':\n      case 'results_table':\n        // https://sensuapp.org/docs/0.28/api/results-api.html\n        uris = getResultURIs(checkNames, clientNames);\n        break;\n      case 'sensu_health_json':\n        // https://sensuapp.org/docs/0.28/api/health-and-info-api.html\n        break;\n      case 'silenced_entries_json':\n        // https://sensuapp.org/docs/0.28/api/silenced-api.html\n        break;\n      case 'stashes_json':\n        // https://sensuapp.org/docs/0.28/api/stashes-api.html\n        break;\n    }\n    return uris;\n  }\n\n  getBuckets(responses) {\n    const buckets = {};\n    for (let i = 0; i < responses.data.length; i++) {\n      const refId = responses.data[i].target.refId;\n      if (buckets.hasOwnProperty(refId)) {\n        buckets[refId].push(responses.data[i]);\n      } else {\n        buckets[refId] = [responses.data[i]];\n      }\n    }\n    return buckets;\n  }\n\n  processConversions(sourceType, aTarget, responses) {\n    let result = { data: [] };\n    switch (sourceType) {\n      case 'aggregates':\n        result = convertAggregatesToDataPoints(aTarget, responses);\n        break;\n      case 'aggregates_json':\n        result = convertAggregatesToJSON(aTarget, responses);\n        return result;\n      case 'clients':\n        result = convertClientsToDataPoints(aTarget, responses);\n        return result;\n      case 'clients_json':\n        result = convertClientsToJSON(aTarget, responses);\n        return result;\n      case 'client_health_json':\n        result = convertClientHealthToJSON(aTarget, responses);\n        return result;\n      case 'clienthistory':\n        result = convertClientHistoryToDataPoints(aTarget, responses);\n        break;\n      case 'events':\n        result = convertEventsToDataPoints(aTarget, responses);\n        break;\n      case 'events_json':\n        result = convertEventsToJSON(aTarget, responses);\n        break;\n      case 'event_metrics':\n        result = convertEventsToEventMetrics(aTarget, responses);\n        break;\n      case 'event_metrics_json':\n        result = convertEventsToEventMetricsJSON(aTarget, responses);\n        break;\n      case 'results_json':\n        result = convertResultsToJSON(aTarget, responses);\n        break;\n      case 'results_table':\n        result = convertResultsToTable(aTarget, responses);\n        break;\n      default:\n        console.log('Unknown source type');\n        break;\n    }\n    return result;\n  }\n\n  setRawTargets(aTarget, result) {\n    // keep the actual name\n    for (let i = 0; i < result.data.length; i++) {\n      result.data[i].rawTarget = result.data[i].target;\n    }\n    return result;\n  }\n\n  processFilters(aTarget, result) {\n    // if there are no filters, return all data[] items\n    if (aTarget.filters !== undefined && aTarget.filters.length > 0) {\n      const filterData = [];\n      for (let i = 0; i < aTarget.filters.length; i++) {\n        const aFilter = aTarget.filters[i];\n        // iterate over the data, find matching targets\n        for (let j = 0; j < result.data.length; j++) {\n          const aRawTarget = result.data[j].rawTarget;\n          if (aFilter.filterType === aRawTarget) {\n            // Prepend Alias\n            if (aTarget.aliasReplaced) {\n              result.data[j].target = aTarget.aliasReplaced + ' ' + aRawTarget;\n            }\n            // save this result\n            filterData.push(result.data[j]);\n          }\n        }\n      }\n      // if we have filtered data, replace the result with it\n      if (filterData.length > 0) {\n        result.data = filterData;\n      }\n    } else {\n      // if there are no filters, apply the alias (this is probably not what you want, but allow it...)\n      if (aTarget.aliasReplaced) {\n        for (let i = 0; i < result.data.length; i++) {\n          result.data[i].target = aTarget.aliasReplaced;\n        }\n      }\n    }\n\n    return result;\n  }\n  /**\n   * [parseQueryResult description]\n   * @param  {[type]} aTarget  [description]\n   * @param  {[type]} responses Array of Responses, containing data[{ target: aTarget, response: response}]\n   * @return {[type]}          [description]\n   */\n  parseQueryResult(responses) {\n    // This will match refId's for responses and bucket them together, then pass the bucket to the conversion routines\n    // This allows multiple responses intended for a single target to all be processed at once\n    // It is up to the processor to use the data sent, and return a result that can be used.\n    const allResults = { data: [] };\n    if (!responses || !responses.data) {\n      return allResults;\n    }\n    const buckets = this.getBuckets(responses);\n\n    // iterate over the keys in the buckets to get the target and source type\n    const bucketKeys = Object.keys(buckets);\n    for (let i = 0; i < bucketKeys.length; i++) {\n      const aKey = bucketKeys[i];\n      const sourceType = buckets[aKey][0].target.sourceType;\n      // also use the target from the first response\n      const aTarget = buckets[aKey][0].target;\n      // convert results according to the sourceType\n      // IMPORTANT: do not allow responses to be modifed, return a new object!\n      let result = this.processConversions(sourceType, aTarget, responses);\n      // update result with the rawTarget name (preserve name from aliasing)\n      result = this.setRawTargets(aTarget, result);\n      // apply filters\n      result = this.processFilters(aTarget, result);\n      // iterate over all of the results and push into allResults\n      for (let i = 0; i < result.data.length; i++) {\n        allResults.data.push(result.data[i]);\n      }\n    }\n    return allResults;\n  }\n\n  /**\n   *\n   */\n  getCheckInterval(client, checkName) {\n    // http://10.227.86.62/results/default-oel-67-x86-64/keepalive\n    /* The check may not have interval defined, which means it is defaulted to 60 seconds\n    {\n      \"client\": \"default-oel-67-x86-64\",\n      \"check\": {\n        \"thresholds\": {\n          \"warning\": 120,\n          \"critical\": 180\n        },\n        \"name\": \"keepalive\",\n        \"issued\": 1476277039,\n        \"executed\": 1476277039,\n        \"output\": \"No keepalive sent from client for 40860 seconds (>=180)\",\n        \"status\": 2,\n        \"type\": \"standard\"\n      }\n    }\n     */\n  }\n\n  /**\n   * [dimensionFindValues description]\n   * @param  {[type]} target    [description]\n   * @param  {[type]} dimension [description]\n   * @return {[type]}           [description]\n   */\n  dimensionFindValues(target, dimension) {\n    let dimensionURI = '/clients';\n    switch (dimension.dimensionType) {\n      case 'clientName':\n        dimensionURI = '/clients';\n        break;\n      case 'checkName':\n        dimensionURI = '/checks';\n        break;\n      case 'aggregateName':\n        dimensionURI = '/aggregates';\n        break;\n    }\n    return this.backendSrv\n      .datasourceRequest({\n        url: this.url + dimensionURI,\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: this.basicAuth,\n        },\n      })\n      .then(this.mapToTextValue);\n  }\n\n  mapToTextValue(result) {\n    return _.map(result.data, (d, i) => {\n      return {\n        text: d.name,\n        value: d.name,\n      };\n    });\n  }\n\n  /**\n   * [dimensionFindValues description]\n   * @param  {[type]} target    [description]\n   * @param  {[type]} filter [description]\n   * @return {[type]}           [description]\n   */\n  filterFindValues(target, filter) {\n    let filterURI = '/clients';\n    switch (filter.filterType) {\n      case 'clientName':\n        filterURI = '/clients';\n        break;\n      case 'checkName':\n        filterURI = '/checks';\n        break;\n      case 'aggregateName':\n        filterURI = '/aggregates';\n        break;\n    }\n    return this.backendSrv\n      .datasourceRequest({\n        url: this.url + filterURI,\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: this.basicAuth,\n        },\n      })\n      .then(this.mapToTextValue);\n  }\n\n  query(options) {\n    const queries: any[] = [];\n    //var queries = [];\n    const thisRef = this;\n    const singleTarget = null;\n    options.targets.forEach(target => {\n      // TODO handle hide and no target specified\n      //if (target.hide || !target.target) {\n      //  continue;\n      //}\n      queries.push(target);\n    });\n    let interval = options.interval;\n    //console.log(\"options interval = \" + interval);\n    //let yy = kbn.secondsToHms(this.minimumInterval / 1000);\n    const zz = interval_to_ms(interval);\n    if (interval_to_ms(interval) < this.minimumInterval) {\n      // console.log(\"Detected interval smaller than allowed: \" + interval);\n      interval = secondsToHms(this.minimumInterval / 1000);\n      // console.log(\"New Interval: \" + interval);\n    }\n    //console.log(\"interval after min check = \" + interval);\n    const deferred = this.q.defer();\n\n    // if there are no queries, return empty data\n    if (queries.length === 0) {\n      // console.log(\"no tags visible or specified, no data to fetch\");\n      deferred.resolve({\n        data: [],\n      });\n      return deferred.promise;\n    }\n    const allQueries = this.q.all({\n      first: thisRef.multipleDataQueries(queries),\n    });\n    allQueries.then(results => {\n      // return results from queries\n      deferred.resolve(results.first);\n    });\n    return deferred.promise;\n  }\n\n  singleDataQuery(singleTarget, uriType) {\n    //console.log(\"singleDataQuery entered\");\n    //var thisRef = this;\n    const deferred = this.q.defer();\n    const params = {};\n    const httpOptions = {\n      method: 'GET',\n      url: this.url + uriType,\n      params: params,\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: this.basicAuth,\n      },\n    };\n    this.backendSrv.datasourceRequest(httpOptions).then(\n      response => {\n        let anError = null;\n        if (response.status !== 200) {\n          console.log('error...');\n          anError = new Error('Bad Status: ' + response.status);\n          deferred.reject(anError);\n        }\n        if (!response.data) {\n          anError = new Error('No data');\n          deferred.reject(anError);\n        }\n        // this used to parse per response, instead this is returning the target and response to be later\n        // used by multiDone\n        // OLD: deferred.resolve(_this.parseQueryResult(singleTarget, response));\n        deferred.resolve({ target: singleTarget, response: response });\n      },\n      response => {\n        console.error('Unable to load data. Response: %o', response.data ? response.data.message : response);\n        const error = new Error('Unable to load data');\n        deferred.reject(error);\n      }\n    );\n\n    return deferred.promise;\n  }\n\n  /**\n   * Wrapper called when all queries have been completed.\n   * @param  {[type]} responses [description]\n   * @return {[type]}           [description]\n   */\n  multiDone(responses) {\n    return this.parseQueryResult(responses);\n  }\n\n  /**\n   * Leverages promises to perform multiple async queries\n   * @param  {[type]} pendingQueries [description]\n   * @return {[type]}                [description]\n   */\n  multipleDataQueries(pendingQueries) {\n    const deferred = this.q.defer();\n    const dataCalls = [];\n    const thisRef = this;\n    // for each query, we get a list of sensu uris' to hit\n    // to retrieve the data\n    let index = 0;\n    while (index < pendingQueries.length) {\n      const aTarget = pendingQueries[index];\n      const uriList = this.getQueryURIByType(aTarget);\n      for (let i = 0; i < uriList.length; i++) {\n        dataCalls.push(thisRef.singleDataQuery(aTarget, uriList[i]));\n      }\n      index++;\n    }\n    /*\n    angular.forEach(pendingQueries, function(aTarget) {\n      var uriList = thisRef.getQueryURIByType(aTarget);\n      for (var i = 0; i < uriList.length; i++) {\n        dataCalls.push(thisRef.singleDataQuery(aTarget, uriList[i]));\n      }\n    });\n    */\n    this.q.all(dataCalls).then(\n      results => {\n        const response = {\n          data: [],\n        };\n        let i = 0;\n        // merge all of the results into one response\n        while (i < results.length) {\n          response.data.push(results[i]);\n          i++;\n        }\n        /*\n          angular.forEach(results, function(result) {\n            response.data.push(result);\n            //angular.forEach(result.data, function(dataSet) {\n            //  response.data.push(dataSet);\n            //});\n          });\n          */\n        // multiDone needs to return all of the parsed results inside somevar.data[]\n        deferred.resolve(thisRef.multiDone(response));\n      },\n      errors => {\n        deferred.reject(errors);\n      },\n      updates => {\n        deferred.update(updates);\n      }\n    );\n    return deferred.promise;\n  }\n\n  getServerInfo() {\n    return this.backendSrv\n      .datasourceRequest({\n        url: this.url + '/info',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: this.basicAuth,\n        },\n        method: 'GET',\n      })\n      .then(response => {\n        return response.data;\n      });\n  }\n\n  // Required\n  // Used for testing datasource in datasource configuration pange\n  //    'Access-Control-Allow-Origin': \"http://localhost:3000\"\n  //\n\n  testDatasource() {\n    return this.backendSrv\n      .datasourceRequest({\n        url: this.url + '/info',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: this.basicAuth,\n        },\n        method: 'GET',\n      })\n      .then((response: { status: number }) => {\n        if (response.status === 200) {\n          return {\n            status: 'success',\n            message: 'Data source is working',\n            title: 'Success',\n          };\n        }\n        return {\n          status: 'error',\n          message: 'Data source is not working',\n          title: 'Error',\n        };\n      });\n  }\n}\n","import { SensuCoreDatasource } from './datasource';\nimport { SensuCoreDatasourceQueryCtrl } from './query_ctrl';\nimport { ConfigCtrl } from './config';\n\nclass SensuCoreQueryOptionsCtrl {\n  static templateUrl = 'datasource/sensu-core/partials/query.options.html';\n}\n\nexport { SensuCoreDatasource as Datasource, SensuCoreDatasourceQueryCtrl as QueryCtrl, SensuCoreQueryOptionsCtrl as QueryOptionsCtrl, ConfigCtrl };\n","import angular from 'angular';\n\nimport { QueryCtrl } from 'grafana/app/plugins/sdk';\n\nexport class SensuCoreDatasourceQueryCtrl extends QueryCtrl {\n  static templateUrl = 'datasource/sensu-core/partials/query.editor.html';\n\n  scope: any;\n  uiSegmentSrv: any;\n  templateSrv: any;\n  sourceTypes: any[];\n  dimensionTypes: any;\n  filterTypes: any;\n  aggregateModes: any;\n  clientQueryModes: any;\n  eventMetricModes: any;\n\n  /** @ngInject */\n  constructor($scope, $injector, templateSrv, uiSegmentSrv) {\n    super($scope, $injector);\n    this.scope = $scope;\n    this.uiSegmentSrv = uiSegmentSrv;\n    this.templateSrv = templateSrv;\n    // source types for the popdown\n    this.sourceTypes = [\n      {\n        text: 'Aggregates',\n        value: 'aggregates',\n      },\n      {\n        text: 'Aggregates as JSON',\n        value: 'aggregates_json',\n      },\n      {\n        text: 'Check Subscriptions',\n        value: 'check_subscriptions',\n      },\n      {\n        text: 'Clients',\n        value: 'clients',\n      },\n      {\n        text: 'Clients as JSON',\n        value: 'clients_json',\n      },\n      {\n        text: 'Client Health as JSON',\n        value: 'client_health_json',\n      },\n      {\n        text: 'Client History',\n        value: 'client_history',\n      },\n      {\n        text: 'Events',\n        value: 'events',\n      },\n      {\n        text: 'Events as JSON',\n        value: 'events_json',\n      },\n      {\n        text: 'Event Metrics',\n        value: 'event_metrics',\n      },\n      {\n        text: 'Event Metrics JSON',\n        value: 'event_metrics_json',\n      },\n      {\n        text: 'Results as JSON',\n        value: 'results_json',\n      },\n      {\n        text: 'Results as Table',\n        value: 'results_table',\n      },\n      {\n        text: 'Sensu Health',\n        value: 'sensu_health_json',\n      },\n      {\n        text: 'Silenced Entries',\n        value: 'silenced_entries_json',\n      },\n      {\n        text: 'Stashes',\n        value: 'stashes_json',\n      },\n    ];\n\n    // Each source type have different dimensions\n    //   //    name - name of check\n    //    aggregate - name of aggregate\n    //    type (metric|check)\n    //    source - JIT client\n    this.dimensionTypes = {\n      aggregates: [\n        {\n          text: 'Aggregate Name',\n          value: 'aggregateName',\n        },\n      ],\n      aggregates_json: [\n        {\n          text: 'Aggregate Name',\n          value: 'aggregateName',\n        },\n      ],\n      check_subscriptions: [\n        {\n          text: 'Aggregate Name',\n          value: 'aggregateName',\n        },\n        {\n          text: 'Check Name',\n          value: 'checkName',\n        },\n        {\n          text: 'Check Type',\n          value: 'checkType',\n        },\n        {\n          text: 'Source (JIT Client)',\n          value: 'sourceName',\n        },\n      ],\n      clients: [\n        {\n          text: 'Client Name',\n          value: 'clientName',\n        },\n        {\n          text: 'Check Name',\n          value: 'checkName',\n        },\n      ],\n      client_health_json: [\n        {\n          text: 'Client Name',\n          value: 'clientName',\n        },\n      ],\n      client_history: [\n        {\n          text: 'Client Name',\n          value: 'clientName',\n        },\n      ],\n      clients_json: [\n        {\n          text: 'Client Name',\n          value: 'clientName',\n        },\n        {\n          text: 'Check Name',\n          value: 'checkName',\n        },\n      ],\n      events: [\n        {\n          text: 'Client Name',\n          value: 'clientName',\n        },\n        {\n          text: 'Check Name',\n          value: 'checkName',\n        },\n      ],\n      events_json: [\n        {\n          text: 'Client Name',\n          value: 'clientName',\n        },\n        {\n          text: 'Check Name',\n          value: 'checkName',\n        },\n      ],\n      event_metrics: [\n        {\n          text: 'Client Name',\n          value: 'clientName',\n        },\n        {\n          text: 'Check Name',\n          value: 'checkName',\n        },\n      ],\n      event_metrics_json: [\n        {\n          text: 'Client Name',\n          value: 'clientName',\n        },\n        {\n          text: 'Check Name',\n          value: 'checkName',\n        },\n      ],\n      results_json: [\n        {\n          text: 'Client Name',\n          value: 'clientName',\n        },\n        {\n          text: 'Check Name',\n          value: 'checkName',\n        },\n      ],\n      results_table: [\n        {\n          text: 'Client Name',\n          value: 'clientName',\n        },\n        {\n          text: 'Check Name',\n          value: 'checkName',\n        },\n      ],\n      sensu_health_json: [\n        {\n          text: 'Client Name',\n          value: 'clientName',\n        },\n        {\n          text: 'Check Name',\n          value: 'checkName',\n        },\n      ],\n      silenced_entries_json: [\n        {\n          text: 'Client Name',\n          value: 'clientName',\n        },\n        {\n          text: 'Check Name',\n          value: 'checkName',\n        },\n      ],\n      stashes_json: [\n        {\n          text: 'Client Name',\n          value: 'clientName',\n        },\n        {\n          text: 'Check Name',\n          value: 'checkName',\n        },\n      ],\n    };\n\n    // same\n    this.filterTypes = {\n      aggregates: [\n        {\n          text: 'Number of Checks',\n          value: 'checks',\n          type: 'value',\n        },\n        {\n          text: 'Number of Clients',\n          value: 'clients',\n          type: 'value',\n        },\n        {\n          text: 'State Critical',\n          value: 'critical',\n          type: 'value',\n        },\n        {\n          text: 'State OK',\n          value: 'ok',\n          type: 'value',\n        },\n        {\n          text: 'State Stale',\n          value: 'stale',\n          type: 'value',\n        },\n        {\n          text: 'State Unknown',\n          value: 'unknown',\n          type: 'value',\n        },\n        {\n          text: 'State Warning',\n          value: 'warning',\n          type: 'value',\n        },\n        {\n          text: 'Total Checks',\n          value: 'total',\n          type: 'value',\n        },\n      ],\n      client_health_json: [\n        {\n          text: 'Client Name',\n          value: 'fetch',\n        },\n        {\n          text: 'Client Name RegEx',\n          value: 'regex',\n        },\n      ],\n      clients: [\n        {\n          text: 'Client Name',\n          value: 'fetch',\n        },\n        {\n          text: 'Client Name RegEx',\n          value: 'regex',\n        },\n        {\n          text: 'Field',\n          value: 'field',\n        },\n      ],\n      clients_json: [\n        {\n          text: 'Client Name',\n          value: 'fetch',\n        },\n        {\n          text: 'Client Name RegEx',\n          value: 'regex',\n        },\n        {\n          text: 'Field',\n          value: 'field',\n        },\n      ],\n      events: [\n        {\n          text: 'Client Name',\n          value: 'fetch',\n        },\n        {\n          text: 'Client Name RegEx',\n          value: 'regex',\n        },\n        {\n          text: 'Check Name RegEx',\n          value: 'regex',\n        },\n        {\n          text: 'Field',\n          value: 'field',\n        },\n      ],\n      events_json: [\n        {\n          text: 'Client Name',\n          value: 'fetch',\n        },\n        {\n          text: 'Client Name RegEx',\n          value: 'regex',\n        },\n        {\n          text: 'Check Name RegEx',\n          value: 'regex',\n        },\n        {\n          text: 'Field',\n          value: 'field',\n        },\n      ],\n      event_metrics: [\n        {\n          text: 'Client Name',\n          value: 'fetch',\n        },\n        {\n          text: 'Client Name RegEx',\n          value: 'regex',\n        },\n        {\n          text: 'Check Name RegEx',\n          value: 'regex',\n        },\n        {\n          text: 'Field',\n          value: 'field',\n        },\n      ],\n      event_metrics_json: [\n        {\n          text: 'Client Name',\n          value: 'fetch',\n        },\n        {\n          text: 'Client Name RegEx',\n          value: 'regex',\n        },\n        {\n          text: 'Check Name RegEx',\n          value: 'regex',\n        },\n        {\n          text: 'Field',\n          value: 'field',\n        },\n      ],\n      results_json: [\n        {\n          text: 'Client Name',\n          value: 'fetch',\n        },\n        {\n          text: 'Client Name RegEx',\n          value: 'regex',\n        },\n        {\n          text: 'Check Name RegEx',\n          value: 'regex',\n        },\n        {\n          text: 'Field',\n          value: 'field',\n        },\n      ],\n    };\n\n    this.aggregateModes = [\n      {\n        text: 'List',\n        value: 'list',\n      },\n      {\n        text: 'Clients',\n        value: 'clients',\n      },\n      {\n        text: 'Checks',\n        value: 'checks',\n      },\n      {\n        text: 'Results Critical',\n        value: 'results_critical',\n      },\n      {\n        text: 'Results OK',\n        value: 'results_ok',\n      },\n      {\n        text: 'Results Unknown',\n        value: 'results_unknown',\n      },\n      {\n        text: 'Results Warning',\n        value: 'results_warning',\n      },\n    ];\n\n    this.clientQueryModes = [\n      {\n        text: 'List',\n        value: 'list',\n      },\n      {\n        text: 'Count',\n        value: 'count',\n      },\n    ];\n\n    this.eventMetricModes = [\n      {\n        text: 'All Events',\n        value: 'all_events_count',\n      },\n      {\n        text: 'Active Events',\n        value: 'active_events_count',\n      },\n      {\n        text: 'Critical Total Count',\n        value: 'critical_count',\n      },\n      {\n        text: 'Critical Active Count',\n        value: 'critical_active_count',\n      },\n      {\n        text: 'Critical Silenced Count',\n        value: 'critical_silenced_count',\n      },\n      {\n        text: 'Warning Total Count',\n        value: 'warning_count',\n      },\n      {\n        text: 'Warning Silenced Count',\n        value: 'warning_silenced_count',\n      },\n      {\n        text: 'Warning Active Count',\n        value: 'warning_active_count',\n      },\n      {\n        text: 'Unknown Total Count',\n        value: 'unknown_count',\n      },\n      {\n        text: 'Unknown Active Count',\n        value: 'unknown_active_count',\n      },\n      {\n        text: 'Unknown Silenced Count',\n        value: 'unknown_silenced_count',\n      },\n      {\n        text: 'Silenced Total Count',\n        value: 'silenced_count',\n      },\n      {\n        text: 'Clients Silenced Count',\n        value: 'clients_silenced_count',\n      },\n      {\n        text: 'Checks Silenced Count',\n        value: 'checks_silenced_count',\n      },\n    ];\n    this.target.clientQueryMode = this.target.clientQueryMode || 'count';\n    this.target.eventMetricMode = this.target.eventMetricMode || 'all_events_count';\n\n    this.target.aggregateMode = this.target.aggregateMode || 'list';\n    // default source type is events\n    this.target.sourceType = this.target.sourceType || 'events';\n    // no dimensions initially\n    this.target.dimensions = this.target.dimensions || [];\n  }\n\n  /**\n   * [removeDimension description]\n   * @param  {[type]} dimension [description]\n   * @return {[type]}           [description]\n   */\n  removeDimension(dimension) {\n    if (this.target.dimensions) {\n      this.target.dimensions.splice(this.target.dimensions.indexOf(dimension), 1);\n      this.panelCtrl.refresh();\n    }\n  }\n\n  /**\n   * [addDimension description]\n   */\n  addDimension() {\n    if (!this.target.dimensions) {\n      this.target.dimensions = [];\n    }\n    const dimensionsForSourceType = this.dimensionTypes[this.target.sourceType];\n    const defaultDimensionType = dimensionsForSourceType[0].value;\n    this.target.dimensions.push({\n      name: null,\n      value: null,\n      dimensionType: defaultDimensionType,\n    });\n  }\n\n  /**\n   * [getDimensionValues description]\n   * @param  {[type]} dimension [description]\n   * @return {[type]}           [description]\n   */\n  getDimensionValues(dimension) {\n    if (dimension) {\n      //console.log(\"have a dimension, getting available values\");\n      return this.datasource.dimensionFindValues(this.target, dimension).then(this.uiSegmentSrv.transformToSegments(true));\n    }\n  }\n\n  /**\n   * [removeFilter description]\n   * @param  {[type]} dimension [description]\n   * @return {[type]}           [description]\n   */\n  removeFilter(filter) {\n    if (this.target.filters) {\n      this.target.filters.splice(this.target.filters.indexOf(filter), 1);\n      this.panelCtrl.refresh();\n    }\n  }\n\n  /**\n   * [addFilter description]\n   */\n  addFilter() {\n    if (!this.target.filters) {\n      this.target.filters = [];\n    }\n    const filtersForSourceType = this.filterTypes[this.target.sourceType];\n    const defaultFilterType = filtersForSourceType[0].type;\n    this.target.filters.push({\n      name: null,\n      value: null,\n      filterType: defaultFilterType,\n    });\n  }\n\n  /**\n   * [getFilterValues description]\n   * @param  {[type]} dimension [description]\n   * @return {[type]}           [description]\n   */\n  getFilterValues(filter) {\n    if (filter) {\n      //console.log(\"have a dimension, getting available values\");\n      return this.datasource.filterFindValues(this.target, filter).then(this.uiSegmentSrv.transformToSegments(true));\n    }\n  }\n\n  /**\n   * [getOptions description]\n   * @return {[type]} [description]\n   */\n  getOptions() {\n    return this.datasource.metricFindQuery(this.target).then(this.uiSegmentSrv.transformToSegments(true));\n    // Options have to be transformed by uiSegmentSrv to be usable by metric-segment-model directive\n  }\n\n  /**\n   * [sourceTypeChanged description]\n   * @return {[type]} [description]\n   */\n  sourceTypeChanged() {\n    // reset dimensions\n    if (this.target.dimensions) {\n      this.target.dimensions = [];\n    }\n    this.onChangeInternal();\n  }\n\n  /**\n   * [modeChanged description]\n   * @return {[type]} [description]\n   */\n  modeChanged() {\n    this.onChangeInternal();\n  }\n\n  /**\n   * [onChangeInternal description]\n   * @return {[type]} [description]\n   */\n  onChangeInternal() {\n    this.panelCtrl.refresh(); // Asks the panel to refresh data.\n  }\n}\n","module.exports = __WEBPACK_EXTERNAL_MODULE_grafana_app_core_utils_kbn__;","module.exports = __WEBPACK_EXTERNAL_MODULE_grafana_app_plugins_sdk__;","module.exports = __WEBPACK_EXTERNAL_MODULE_lodash__;"],"sourceRoot":""}